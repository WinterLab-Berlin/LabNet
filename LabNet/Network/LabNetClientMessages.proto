syntax = "proto3";
package LabNet.Messages.Client;

// GPIO top plane messages
message GpioInit {
}

message GpioInitDigitalIn {
	uint32 pin = 1;
	enum Resistor {
		OFF = 0;
		PULL_DOWN = 1;
		PULL_UP = 2;
	}
	Resistor resistor_state = 2;
	bool is_inverted = 3;
}

message GpioInitDigitalOut {
	uint32 pin = 1;
	bool is_inverted = 2;
}
// GPIO top plane messages


// SAM32 top plane messages
message Sam32Init {
	uint32 antenna_phase1 = 1;
	uint32 antenna_phase2 = 2;
	uint32 phase_duration = 3;
	bool inverted = 4;
}

message Sam32SetPhaseMatrix {
	uint32 antenna_phase1 = 1;
	uint32 antenna_phase2 = 2;
	uint32 phase_duration = 3;
}
	
message Sam32SetSignalInversion {
	bool inverted = 1;
}
// SAM32 top plane messages


// UART messages
enum UartPort {
	NONE = 0;
	UART1 = 101;
	UART2 = 102;
	UART3 = 103;
	UART4 = 104;
}

message UartInit {
	UartPort port = 1;
	uint32 baud = 2;
}

message UartWriteData {
	UartPort port = 1;
	bytes data = 2;
}
// UART messages


// digital out messages
message PinId {
	enum Interfaces {
		NONE = 0;
		GPIO_TOP_PLANE = 1;
		UART1 = 101;
		UART2 = 102;
		UART3 = 103;
		UART4 = 104;
	}
	Interfaces interface = 1;
	uint32 pin = 2;
}

message DigitalOutSet {
	PinId id = 1;
	bool state = 2;
}

message DigitalOutPulse {
	PinId id = 1;
	uint32 high_duration = 2;
	uint32 low_duration = 3;
	uint32 pulses = 4;
}

message DigitalOutSetInLoop {
	message DigitalOutputParameter {
		PinId id = 1;
		uint32 offset = 2;
		uint32 duration = 3;
	}
	uint32 loop_pause = 1;
	repeated DigitalOutputParameter digital_outputs = 2;
}
// digital out messages


// general messages
message LabNetResetRequest {
}

message LabNetIdRequest {
}
// general messages

message ClientWrappedMessage {
	oneof client_message {
		GpioInit gpio_init = 1;
		GpioInitDigitalIn gpio_init_digital_in = 2;
		GpioInitDigitalOut gpio_init_digital_out = 3;
		Sam32Init sam32_init = 4;
		Sam32SetPhaseMatrix sam32_set_phase_matrix = 5;
		Sam32SetSignalInversion sam32_set_signal_inversion = 6;
		UartInit uart_init = 7;
		UartWriteData uart_write_data = 8;
		DigitalOutSet digital_out_set = 9;
		DigitalOutPulse digital_out_pulse = 10;
		DigitalOutSetInLoop digital_out_loop = 11;
		LabNetResetRequest reset = 12;
		LabNetIdRequest id = 13;
	}
}