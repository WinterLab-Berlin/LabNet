syntax = "proto3";
package LabNet.Client;
import "LabNet.proto";

// GPIO top plane messages
message GpioInit {
}

message GpioInitDigitalIn {
	uint32 pin = 1;
	enum Resistor {
		OFF = 0;
		PULL_DOWN = 1;
		PULL_UP = 2;
	}
	Resistor resistor_state = 2;
	bool is_inverted = 3;
}

message GpioInitDigitalOut {
	uint32 pin = 1;
	bool is_inverted = 2;
}
// GPIO top plane messages


// RFID top plane messages
message RfidInit {
	uint32 antenna_phase1 = 1;
	uint32 antenna_phase2 = 2;
	uint32 phase_duration = 3;
	bool inverted = 4;
}

message RfidSetPhaseMatrix {
	uint32 antenna_phase1 = 1;
	uint32 antenna_phase2 = 2;
	uint32 phase_duration = 3;
}
	
message RfidSetSignalInversion {
	bool inverted = 1;
}
// RFID top plane messages


// UART messages
message UartInit {
	Uarts port = 1;
	uint32 baud = 2;
}

message UartWriteData {
	Uarts port = 1;
	bytes data = 2;
}
// UART messages


// digital out messages
message DigitalOutSet {
	PinId id = 1;
	bool state = 2;
}

message DigitalOutPulse {
	PinId id = 1;
	uint32 high_duration = 2;
	uint32 low_duration = 3;
	uint32 pulses = 4;
}
// digital out messages


// digital out loop
message StartDigitalOutLoop {
	message DigitalOutputParameter {
		PinId id = 1;
		uint32 offset = 2;
		uint32 duration = 3;
	}
	string loop_name = 1;
	uint32 loop_pause = 2;
	repeated DigitalOutputParameter digital_outputs = 3;
}

message StopDigitalOutLoop {
	string loop_name = 1;
}
// digital out loop


// general messages
message LabNetResetRequest {
}

message LabNetIdRequest {
}
// general messages

message ClientWrappedMessage {
	oneof client_message {
		LabNetResetRequest reset = 1;
		LabNetIdRequest id = 2;
		GpioInit gpio_init = 3;
		GpioInitDigitalIn gpio_init_digital_in = 4;
		GpioInitDigitalOut gpio_init_digital_out = 5;
		RfidInit rfid_init = 6;
		RfidSetPhaseMatrix rfid_set_phase_matrix = 7;
		RfidSetSignalInversion rfid_set_signal_inversion = 8;
		UartInit uart_init = 9;
		UartWriteData uart_write_data = 10;
		DigitalOutSet digital_out_set = 11;
		DigitalOutPulse digital_out_pulse = 12;
		StartDigitalOutLoop start_digital_out_loop = 13;
		StopDigitalOutLoop stop_digital_out_loop = 14;
	}
}