// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: LabNetClient.proto

#ifndef PROTOBUF_INCLUDED_LabNetClient_2eproto
#define PROTOBUF_INCLUDED_LabNetClient_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "LabNet.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_LabNetClient_2eproto 

namespace protobuf_LabNetClient_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[19];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_LabNetClient_2eproto
namespace LabNetProt {
namespace Client {
class ClientWrappedMessage;
class ClientWrappedMessageDefaultTypeInternal;
extern ClientWrappedMessageDefaultTypeInternal _ClientWrappedMessage_default_instance_;
class DigitalOutPulse;
class DigitalOutPulseDefaultTypeInternal;
extern DigitalOutPulseDefaultTypeInternal _DigitalOutPulse_default_instance_;
class DigitalOutSet;
class DigitalOutSetDefaultTypeInternal;
extern DigitalOutSetDefaultTypeInternal _DigitalOutSet_default_instance_;
class GpioWiringPiInit;
class GpioWiringPiInitDefaultTypeInternal;
extern GpioWiringPiInitDefaultTypeInternal _GpioWiringPiInit_default_instance_;
class GpioWiringPiInitDigitalIn;
class GpioWiringPiInitDigitalInDefaultTypeInternal;
extern GpioWiringPiInitDigitalInDefaultTypeInternal _GpioWiringPiInitDigitalIn_default_instance_;
class GpioWiringPiInitDigitalOut;
class GpioWiringPiInitDigitalOutDefaultTypeInternal;
extern GpioWiringPiInitDigitalOutDefaultTypeInternal _GpioWiringPiInitDigitalOut_default_instance_;
class IoBoardInit;
class IoBoardInitDefaultTypeInternal;
extern IoBoardInitDefaultTypeInternal _IoBoardInit_default_instance_;
class IoBoardInitDigitalIn;
class IoBoardInitDigitalInDefaultTypeInternal;
extern IoBoardInitDigitalInDefaultTypeInternal _IoBoardInitDigitalIn_default_instance_;
class IoBoardInitDigitalOut;
class IoBoardInitDigitalOutDefaultTypeInternal;
extern IoBoardInitDigitalOutDefaultTypeInternal _IoBoardInitDigitalOut_default_instance_;
class LabNetIdRequest;
class LabNetIdRequestDefaultTypeInternal;
extern LabNetIdRequestDefaultTypeInternal _LabNetIdRequest_default_instance_;
class LabNetResetRequest;
class LabNetResetRequestDefaultTypeInternal;
extern LabNetResetRequestDefaultTypeInternal _LabNetResetRequest_default_instance_;
class RfidBoardInit;
class RfidBoardInitDefaultTypeInternal;
extern RfidBoardInitDefaultTypeInternal _RfidBoardInit_default_instance_;
class RfidBoardSetPhaseMatrix;
class RfidBoardSetPhaseMatrixDefaultTypeInternal;
extern RfidBoardSetPhaseMatrixDefaultTypeInternal _RfidBoardSetPhaseMatrix_default_instance_;
class RfidBoardSetSignalInversion;
class RfidBoardSetSignalInversionDefaultTypeInternal;
extern RfidBoardSetSignalInversionDefaultTypeInternal _RfidBoardSetSignalInversion_default_instance_;
class StartDigitalOutLoop;
class StartDigitalOutLoopDefaultTypeInternal;
extern StartDigitalOutLoopDefaultTypeInternal _StartDigitalOutLoop_default_instance_;
class StartDigitalOutLoop_DigitalOutputParameter;
class StartDigitalOutLoop_DigitalOutputParameterDefaultTypeInternal;
extern StartDigitalOutLoop_DigitalOutputParameterDefaultTypeInternal _StartDigitalOutLoop_DigitalOutputParameter_default_instance_;
class StopDigitalOutLoop;
class StopDigitalOutLoopDefaultTypeInternal;
extern StopDigitalOutLoopDefaultTypeInternal _StopDigitalOutLoop_default_instance_;
class UartInit;
class UartInitDefaultTypeInternal;
extern UartInitDefaultTypeInternal _UartInit_default_instance_;
class UartWriteData;
class UartWriteDataDefaultTypeInternal;
extern UartWriteDataDefaultTypeInternal _UartWriteData_default_instance_;
}  // namespace Client
}  // namespace LabNetProt
namespace google {
namespace protobuf {
template<> ::LabNetProt::Client::ClientWrappedMessage* Arena::CreateMaybeMessage<::LabNetProt::Client::ClientWrappedMessage>(Arena*);
template<> ::LabNetProt::Client::DigitalOutPulse* Arena::CreateMaybeMessage<::LabNetProt::Client::DigitalOutPulse>(Arena*);
template<> ::LabNetProt::Client::DigitalOutSet* Arena::CreateMaybeMessage<::LabNetProt::Client::DigitalOutSet>(Arena*);
template<> ::LabNetProt::Client::GpioWiringPiInit* Arena::CreateMaybeMessage<::LabNetProt::Client::GpioWiringPiInit>(Arena*);
template<> ::LabNetProt::Client::GpioWiringPiInitDigitalIn* Arena::CreateMaybeMessage<::LabNetProt::Client::GpioWiringPiInitDigitalIn>(Arena*);
template<> ::LabNetProt::Client::GpioWiringPiInitDigitalOut* Arena::CreateMaybeMessage<::LabNetProt::Client::GpioWiringPiInitDigitalOut>(Arena*);
template<> ::LabNetProt::Client::IoBoardInit* Arena::CreateMaybeMessage<::LabNetProt::Client::IoBoardInit>(Arena*);
template<> ::LabNetProt::Client::IoBoardInitDigitalIn* Arena::CreateMaybeMessage<::LabNetProt::Client::IoBoardInitDigitalIn>(Arena*);
template<> ::LabNetProt::Client::IoBoardInitDigitalOut* Arena::CreateMaybeMessage<::LabNetProt::Client::IoBoardInitDigitalOut>(Arena*);
template<> ::LabNetProt::Client::LabNetIdRequest* Arena::CreateMaybeMessage<::LabNetProt::Client::LabNetIdRequest>(Arena*);
template<> ::LabNetProt::Client::LabNetResetRequest* Arena::CreateMaybeMessage<::LabNetProt::Client::LabNetResetRequest>(Arena*);
template<> ::LabNetProt::Client::RfidBoardInit* Arena::CreateMaybeMessage<::LabNetProt::Client::RfidBoardInit>(Arena*);
template<> ::LabNetProt::Client::RfidBoardSetPhaseMatrix* Arena::CreateMaybeMessage<::LabNetProt::Client::RfidBoardSetPhaseMatrix>(Arena*);
template<> ::LabNetProt::Client::RfidBoardSetSignalInversion* Arena::CreateMaybeMessage<::LabNetProt::Client::RfidBoardSetSignalInversion>(Arena*);
template<> ::LabNetProt::Client::StartDigitalOutLoop* Arena::CreateMaybeMessage<::LabNetProt::Client::StartDigitalOutLoop>(Arena*);
template<> ::LabNetProt::Client::StartDigitalOutLoop_DigitalOutputParameter* Arena::CreateMaybeMessage<::LabNetProt::Client::StartDigitalOutLoop_DigitalOutputParameter>(Arena*);
template<> ::LabNetProt::Client::StopDigitalOutLoop* Arena::CreateMaybeMessage<::LabNetProt::Client::StopDigitalOutLoop>(Arena*);
template<> ::LabNetProt::Client::UartInit* Arena::CreateMaybeMessage<::LabNetProt::Client::UartInit>(Arena*);
template<> ::LabNetProt::Client::UartWriteData* Arena::CreateMaybeMessage<::LabNetProt::Client::UartWriteData>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace LabNetProt {
namespace Client {

enum IoBoardInitDigitalIn_Resistor {
  IoBoardInitDigitalIn_Resistor_OFF = 0,
  IoBoardInitDigitalIn_Resistor_PULL_DOWN = 1,
  IoBoardInitDigitalIn_Resistor_PULL_UP = 2,
  IoBoardInitDigitalIn_Resistor_IoBoardInitDigitalIn_Resistor_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  IoBoardInitDigitalIn_Resistor_IoBoardInitDigitalIn_Resistor_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool IoBoardInitDigitalIn_Resistor_IsValid(int value);
const IoBoardInitDigitalIn_Resistor IoBoardInitDigitalIn_Resistor_Resistor_MIN = IoBoardInitDigitalIn_Resistor_OFF;
const IoBoardInitDigitalIn_Resistor IoBoardInitDigitalIn_Resistor_Resistor_MAX = IoBoardInitDigitalIn_Resistor_PULL_UP;
const int IoBoardInitDigitalIn_Resistor_Resistor_ARRAYSIZE = IoBoardInitDigitalIn_Resistor_Resistor_MAX + 1;

const ::google::protobuf::EnumDescriptor* IoBoardInitDigitalIn_Resistor_descriptor();
inline const ::std::string& IoBoardInitDigitalIn_Resistor_Name(IoBoardInitDigitalIn_Resistor value) {
  return ::google::protobuf::internal::NameOfEnum(
    IoBoardInitDigitalIn_Resistor_descriptor(), value);
}
inline bool IoBoardInitDigitalIn_Resistor_Parse(
    const ::std::string& name, IoBoardInitDigitalIn_Resistor* value) {
  return ::google::protobuf::internal::ParseNamedEnum<IoBoardInitDigitalIn_Resistor>(
    IoBoardInitDigitalIn_Resistor_descriptor(), name, value);
}
enum GpioWiringPiInitDigitalIn_Resistor {
  GpioWiringPiInitDigitalIn_Resistor_OFF = 0,
  GpioWiringPiInitDigitalIn_Resistor_PULL_DOWN = 1,
  GpioWiringPiInitDigitalIn_Resistor_PULL_UP = 2,
  GpioWiringPiInitDigitalIn_Resistor_GpioWiringPiInitDigitalIn_Resistor_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GpioWiringPiInitDigitalIn_Resistor_GpioWiringPiInitDigitalIn_Resistor_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GpioWiringPiInitDigitalIn_Resistor_IsValid(int value);
const GpioWiringPiInitDigitalIn_Resistor GpioWiringPiInitDigitalIn_Resistor_Resistor_MIN = GpioWiringPiInitDigitalIn_Resistor_OFF;
const GpioWiringPiInitDigitalIn_Resistor GpioWiringPiInitDigitalIn_Resistor_Resistor_MAX = GpioWiringPiInitDigitalIn_Resistor_PULL_UP;
const int GpioWiringPiInitDigitalIn_Resistor_Resistor_ARRAYSIZE = GpioWiringPiInitDigitalIn_Resistor_Resistor_MAX + 1;

const ::google::protobuf::EnumDescriptor* GpioWiringPiInitDigitalIn_Resistor_descriptor();
inline const ::std::string& GpioWiringPiInitDigitalIn_Resistor_Name(GpioWiringPiInitDigitalIn_Resistor value) {
  return ::google::protobuf::internal::NameOfEnum(
    GpioWiringPiInitDigitalIn_Resistor_descriptor(), value);
}
inline bool GpioWiringPiInitDigitalIn_Resistor_Parse(
    const ::std::string& name, GpioWiringPiInitDigitalIn_Resistor* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GpioWiringPiInitDigitalIn_Resistor>(
    GpioWiringPiInitDigitalIn_Resistor_descriptor(), name, value);
}
// ===================================================================

class IoBoardInit : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LabNetProt.Client.IoBoardInit) */ {
 public:
  IoBoardInit();
  virtual ~IoBoardInit();

  IoBoardInit(const IoBoardInit& from);

  inline IoBoardInit& operator=(const IoBoardInit& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IoBoardInit(IoBoardInit&& from) noexcept
    : IoBoardInit() {
    *this = ::std::move(from);
  }

  inline IoBoardInit& operator=(IoBoardInit&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const IoBoardInit& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IoBoardInit* internal_default_instance() {
    return reinterpret_cast<const IoBoardInit*>(
               &_IoBoardInit_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(IoBoardInit* other);
  friend void swap(IoBoardInit& a, IoBoardInit& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IoBoardInit* New() const final {
    return CreateMaybeMessage<IoBoardInit>(NULL);
  }

  IoBoardInit* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<IoBoardInit>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const IoBoardInit& from);
  void MergeFrom(const IoBoardInit& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IoBoardInit* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:LabNetProt.Client.IoBoardInit)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_LabNetClient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IoBoardInitDigitalIn : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LabNetProt.Client.IoBoardInitDigitalIn) */ {
 public:
  IoBoardInitDigitalIn();
  virtual ~IoBoardInitDigitalIn();

  IoBoardInitDigitalIn(const IoBoardInitDigitalIn& from);

  inline IoBoardInitDigitalIn& operator=(const IoBoardInitDigitalIn& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IoBoardInitDigitalIn(IoBoardInitDigitalIn&& from) noexcept
    : IoBoardInitDigitalIn() {
    *this = ::std::move(from);
  }

  inline IoBoardInitDigitalIn& operator=(IoBoardInitDigitalIn&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const IoBoardInitDigitalIn& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IoBoardInitDigitalIn* internal_default_instance() {
    return reinterpret_cast<const IoBoardInitDigitalIn*>(
               &_IoBoardInitDigitalIn_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(IoBoardInitDigitalIn* other);
  friend void swap(IoBoardInitDigitalIn& a, IoBoardInitDigitalIn& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IoBoardInitDigitalIn* New() const final {
    return CreateMaybeMessage<IoBoardInitDigitalIn>(NULL);
  }

  IoBoardInitDigitalIn* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<IoBoardInitDigitalIn>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const IoBoardInitDigitalIn& from);
  void MergeFrom(const IoBoardInitDigitalIn& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IoBoardInitDigitalIn* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef IoBoardInitDigitalIn_Resistor Resistor;
  static const Resistor OFF =
    IoBoardInitDigitalIn_Resistor_OFF;
  static const Resistor PULL_DOWN =
    IoBoardInitDigitalIn_Resistor_PULL_DOWN;
  static const Resistor PULL_UP =
    IoBoardInitDigitalIn_Resistor_PULL_UP;
  static inline bool Resistor_IsValid(int value) {
    return IoBoardInitDigitalIn_Resistor_IsValid(value);
  }
  static const Resistor Resistor_MIN =
    IoBoardInitDigitalIn_Resistor_Resistor_MIN;
  static const Resistor Resistor_MAX =
    IoBoardInitDigitalIn_Resistor_Resistor_MAX;
  static const int Resistor_ARRAYSIZE =
    IoBoardInitDigitalIn_Resistor_Resistor_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Resistor_descriptor() {
    return IoBoardInitDigitalIn_Resistor_descriptor();
  }
  static inline const ::std::string& Resistor_Name(Resistor value) {
    return IoBoardInitDigitalIn_Resistor_Name(value);
  }
  static inline bool Resistor_Parse(const ::std::string& name,
      Resistor* value) {
    return IoBoardInitDigitalIn_Resistor_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 pin = 1;
  void clear_pin();
  static const int kPinFieldNumber = 1;
  ::google::protobuf::uint32 pin() const;
  void set_pin(::google::protobuf::uint32 value);

  // .LabNetProt.Client.IoBoardInitDigitalIn.Resistor resistor_state = 2;
  void clear_resistor_state();
  static const int kResistorStateFieldNumber = 2;
  ::LabNetProt::Client::IoBoardInitDigitalIn_Resistor resistor_state() const;
  void set_resistor_state(::LabNetProt::Client::IoBoardInitDigitalIn_Resistor value);

  // bool is_inverted = 3;
  void clear_is_inverted();
  static const int kIsInvertedFieldNumber = 3;
  bool is_inverted() const;
  void set_is_inverted(bool value);

  // @@protoc_insertion_point(class_scope:LabNetProt.Client.IoBoardInitDigitalIn)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 pin_;
  int resistor_state_;
  bool is_inverted_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_LabNetClient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IoBoardInitDigitalOut : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LabNetProt.Client.IoBoardInitDigitalOut) */ {
 public:
  IoBoardInitDigitalOut();
  virtual ~IoBoardInitDigitalOut();

  IoBoardInitDigitalOut(const IoBoardInitDigitalOut& from);

  inline IoBoardInitDigitalOut& operator=(const IoBoardInitDigitalOut& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IoBoardInitDigitalOut(IoBoardInitDigitalOut&& from) noexcept
    : IoBoardInitDigitalOut() {
    *this = ::std::move(from);
  }

  inline IoBoardInitDigitalOut& operator=(IoBoardInitDigitalOut&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const IoBoardInitDigitalOut& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IoBoardInitDigitalOut* internal_default_instance() {
    return reinterpret_cast<const IoBoardInitDigitalOut*>(
               &_IoBoardInitDigitalOut_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(IoBoardInitDigitalOut* other);
  friend void swap(IoBoardInitDigitalOut& a, IoBoardInitDigitalOut& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IoBoardInitDigitalOut* New() const final {
    return CreateMaybeMessage<IoBoardInitDigitalOut>(NULL);
  }

  IoBoardInitDigitalOut* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<IoBoardInitDigitalOut>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const IoBoardInitDigitalOut& from);
  void MergeFrom(const IoBoardInitDigitalOut& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IoBoardInitDigitalOut* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 pin = 1;
  void clear_pin();
  static const int kPinFieldNumber = 1;
  ::google::protobuf::uint32 pin() const;
  void set_pin(::google::protobuf::uint32 value);

  // bool is_inverted = 2;
  void clear_is_inverted();
  static const int kIsInvertedFieldNumber = 2;
  bool is_inverted() const;
  void set_is_inverted(bool value);

  // @@protoc_insertion_point(class_scope:LabNetProt.Client.IoBoardInitDigitalOut)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 pin_;
  bool is_inverted_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_LabNetClient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RfidBoardInit : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LabNetProt.Client.RfidBoardInit) */ {
 public:
  RfidBoardInit();
  virtual ~RfidBoardInit();

  RfidBoardInit(const RfidBoardInit& from);

  inline RfidBoardInit& operator=(const RfidBoardInit& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RfidBoardInit(RfidBoardInit&& from) noexcept
    : RfidBoardInit() {
    *this = ::std::move(from);
  }

  inline RfidBoardInit& operator=(RfidBoardInit&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RfidBoardInit& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RfidBoardInit* internal_default_instance() {
    return reinterpret_cast<const RfidBoardInit*>(
               &_RfidBoardInit_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(RfidBoardInit* other);
  friend void swap(RfidBoardInit& a, RfidBoardInit& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RfidBoardInit* New() const final {
    return CreateMaybeMessage<RfidBoardInit>(NULL);
  }

  RfidBoardInit* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RfidBoardInit>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RfidBoardInit& from);
  void MergeFrom(const RfidBoardInit& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RfidBoardInit* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 antenna_phase1 = 1;
  void clear_antenna_phase1();
  static const int kAntennaPhase1FieldNumber = 1;
  ::google::protobuf::uint32 antenna_phase1() const;
  void set_antenna_phase1(::google::protobuf::uint32 value);

  // uint32 antenna_phase2 = 2;
  void clear_antenna_phase2();
  static const int kAntennaPhase2FieldNumber = 2;
  ::google::protobuf::uint32 antenna_phase2() const;
  void set_antenna_phase2(::google::protobuf::uint32 value);

  // uint32 phase_duration = 3;
  void clear_phase_duration();
  static const int kPhaseDurationFieldNumber = 3;
  ::google::protobuf::uint32 phase_duration() const;
  void set_phase_duration(::google::protobuf::uint32 value);

  // bool inverted = 4;
  void clear_inverted();
  static const int kInvertedFieldNumber = 4;
  bool inverted() const;
  void set_inverted(bool value);

  // @@protoc_insertion_point(class_scope:LabNetProt.Client.RfidBoardInit)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 antenna_phase1_;
  ::google::protobuf::uint32 antenna_phase2_;
  ::google::protobuf::uint32 phase_duration_;
  bool inverted_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_LabNetClient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RfidBoardSetPhaseMatrix : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LabNetProt.Client.RfidBoardSetPhaseMatrix) */ {
 public:
  RfidBoardSetPhaseMatrix();
  virtual ~RfidBoardSetPhaseMatrix();

  RfidBoardSetPhaseMatrix(const RfidBoardSetPhaseMatrix& from);

  inline RfidBoardSetPhaseMatrix& operator=(const RfidBoardSetPhaseMatrix& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RfidBoardSetPhaseMatrix(RfidBoardSetPhaseMatrix&& from) noexcept
    : RfidBoardSetPhaseMatrix() {
    *this = ::std::move(from);
  }

  inline RfidBoardSetPhaseMatrix& operator=(RfidBoardSetPhaseMatrix&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RfidBoardSetPhaseMatrix& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RfidBoardSetPhaseMatrix* internal_default_instance() {
    return reinterpret_cast<const RfidBoardSetPhaseMatrix*>(
               &_RfidBoardSetPhaseMatrix_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(RfidBoardSetPhaseMatrix* other);
  friend void swap(RfidBoardSetPhaseMatrix& a, RfidBoardSetPhaseMatrix& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RfidBoardSetPhaseMatrix* New() const final {
    return CreateMaybeMessage<RfidBoardSetPhaseMatrix>(NULL);
  }

  RfidBoardSetPhaseMatrix* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RfidBoardSetPhaseMatrix>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RfidBoardSetPhaseMatrix& from);
  void MergeFrom(const RfidBoardSetPhaseMatrix& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RfidBoardSetPhaseMatrix* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 antenna_phase1 = 1;
  void clear_antenna_phase1();
  static const int kAntennaPhase1FieldNumber = 1;
  ::google::protobuf::uint32 antenna_phase1() const;
  void set_antenna_phase1(::google::protobuf::uint32 value);

  // uint32 antenna_phase2 = 2;
  void clear_antenna_phase2();
  static const int kAntennaPhase2FieldNumber = 2;
  ::google::protobuf::uint32 antenna_phase2() const;
  void set_antenna_phase2(::google::protobuf::uint32 value);

  // uint32 phase_duration = 3;
  void clear_phase_duration();
  static const int kPhaseDurationFieldNumber = 3;
  ::google::protobuf::uint32 phase_duration() const;
  void set_phase_duration(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:LabNetProt.Client.RfidBoardSetPhaseMatrix)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 antenna_phase1_;
  ::google::protobuf::uint32 antenna_phase2_;
  ::google::protobuf::uint32 phase_duration_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_LabNetClient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RfidBoardSetSignalInversion : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LabNetProt.Client.RfidBoardSetSignalInversion) */ {
 public:
  RfidBoardSetSignalInversion();
  virtual ~RfidBoardSetSignalInversion();

  RfidBoardSetSignalInversion(const RfidBoardSetSignalInversion& from);

  inline RfidBoardSetSignalInversion& operator=(const RfidBoardSetSignalInversion& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RfidBoardSetSignalInversion(RfidBoardSetSignalInversion&& from) noexcept
    : RfidBoardSetSignalInversion() {
    *this = ::std::move(from);
  }

  inline RfidBoardSetSignalInversion& operator=(RfidBoardSetSignalInversion&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RfidBoardSetSignalInversion& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RfidBoardSetSignalInversion* internal_default_instance() {
    return reinterpret_cast<const RfidBoardSetSignalInversion*>(
               &_RfidBoardSetSignalInversion_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(RfidBoardSetSignalInversion* other);
  friend void swap(RfidBoardSetSignalInversion& a, RfidBoardSetSignalInversion& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RfidBoardSetSignalInversion* New() const final {
    return CreateMaybeMessage<RfidBoardSetSignalInversion>(NULL);
  }

  RfidBoardSetSignalInversion* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RfidBoardSetSignalInversion>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RfidBoardSetSignalInversion& from);
  void MergeFrom(const RfidBoardSetSignalInversion& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RfidBoardSetSignalInversion* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool inverted = 1;
  void clear_inverted();
  static const int kInvertedFieldNumber = 1;
  bool inverted() const;
  void set_inverted(bool value);

  // @@protoc_insertion_point(class_scope:LabNetProt.Client.RfidBoardSetSignalInversion)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool inverted_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_LabNetClient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UartInit : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LabNetProt.Client.UartInit) */ {
 public:
  UartInit();
  virtual ~UartInit();

  UartInit(const UartInit& from);

  inline UartInit& operator=(const UartInit& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UartInit(UartInit&& from) noexcept
    : UartInit() {
    *this = ::std::move(from);
  }

  inline UartInit& operator=(UartInit&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UartInit& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UartInit* internal_default_instance() {
    return reinterpret_cast<const UartInit*>(
               &_UartInit_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(UartInit* other);
  friend void swap(UartInit& a, UartInit& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UartInit* New() const final {
    return CreateMaybeMessage<UartInit>(NULL);
  }

  UartInit* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UartInit>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UartInit& from);
  void MergeFrom(const UartInit& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UartInit* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .LabNetProt.Uarts port = 1;
  void clear_port();
  static const int kPortFieldNumber = 1;
  ::LabNetProt::Uarts port() const;
  void set_port(::LabNetProt::Uarts value);

  // uint32 baud = 2;
  void clear_baud();
  static const int kBaudFieldNumber = 2;
  ::google::protobuf::uint32 baud() const;
  void set_baud(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:LabNetProt.Client.UartInit)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int port_;
  ::google::protobuf::uint32 baud_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_LabNetClient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UartWriteData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LabNetProt.Client.UartWriteData) */ {
 public:
  UartWriteData();
  virtual ~UartWriteData();

  UartWriteData(const UartWriteData& from);

  inline UartWriteData& operator=(const UartWriteData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UartWriteData(UartWriteData&& from) noexcept
    : UartWriteData() {
    *this = ::std::move(from);
  }

  inline UartWriteData& operator=(UartWriteData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UartWriteData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UartWriteData* internal_default_instance() {
    return reinterpret_cast<const UartWriteData*>(
               &_UartWriteData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(UartWriteData* other);
  friend void swap(UartWriteData& a, UartWriteData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UartWriteData* New() const final {
    return CreateMaybeMessage<UartWriteData>(NULL);
  }

  UartWriteData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UartWriteData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UartWriteData& from);
  void MergeFrom(const UartWriteData& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UartWriteData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes data = 2;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // .LabNetProt.Uarts port = 1;
  void clear_port();
  static const int kPortFieldNumber = 1;
  ::LabNetProt::Uarts port() const;
  void set_port(::LabNetProt::Uarts value);

  // @@protoc_insertion_point(class_scope:LabNetProt.Client.UartWriteData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  int port_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_LabNetClient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GpioWiringPiInit : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LabNetProt.Client.GpioWiringPiInit) */ {
 public:
  GpioWiringPiInit();
  virtual ~GpioWiringPiInit();

  GpioWiringPiInit(const GpioWiringPiInit& from);

  inline GpioWiringPiInit& operator=(const GpioWiringPiInit& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GpioWiringPiInit(GpioWiringPiInit&& from) noexcept
    : GpioWiringPiInit() {
    *this = ::std::move(from);
  }

  inline GpioWiringPiInit& operator=(GpioWiringPiInit&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GpioWiringPiInit& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GpioWiringPiInit* internal_default_instance() {
    return reinterpret_cast<const GpioWiringPiInit*>(
               &_GpioWiringPiInit_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(GpioWiringPiInit* other);
  friend void swap(GpioWiringPiInit& a, GpioWiringPiInit& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GpioWiringPiInit* New() const final {
    return CreateMaybeMessage<GpioWiringPiInit>(NULL);
  }

  GpioWiringPiInit* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GpioWiringPiInit>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GpioWiringPiInit& from);
  void MergeFrom(const GpioWiringPiInit& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GpioWiringPiInit* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:LabNetProt.Client.GpioWiringPiInit)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_LabNetClient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GpioWiringPiInitDigitalIn : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LabNetProt.Client.GpioWiringPiInitDigitalIn) */ {
 public:
  GpioWiringPiInitDigitalIn();
  virtual ~GpioWiringPiInitDigitalIn();

  GpioWiringPiInitDigitalIn(const GpioWiringPiInitDigitalIn& from);

  inline GpioWiringPiInitDigitalIn& operator=(const GpioWiringPiInitDigitalIn& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GpioWiringPiInitDigitalIn(GpioWiringPiInitDigitalIn&& from) noexcept
    : GpioWiringPiInitDigitalIn() {
    *this = ::std::move(from);
  }

  inline GpioWiringPiInitDigitalIn& operator=(GpioWiringPiInitDigitalIn&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GpioWiringPiInitDigitalIn& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GpioWiringPiInitDigitalIn* internal_default_instance() {
    return reinterpret_cast<const GpioWiringPiInitDigitalIn*>(
               &_GpioWiringPiInitDigitalIn_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(GpioWiringPiInitDigitalIn* other);
  friend void swap(GpioWiringPiInitDigitalIn& a, GpioWiringPiInitDigitalIn& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GpioWiringPiInitDigitalIn* New() const final {
    return CreateMaybeMessage<GpioWiringPiInitDigitalIn>(NULL);
  }

  GpioWiringPiInitDigitalIn* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GpioWiringPiInitDigitalIn>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GpioWiringPiInitDigitalIn& from);
  void MergeFrom(const GpioWiringPiInitDigitalIn& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GpioWiringPiInitDigitalIn* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef GpioWiringPiInitDigitalIn_Resistor Resistor;
  static const Resistor OFF =
    GpioWiringPiInitDigitalIn_Resistor_OFF;
  static const Resistor PULL_DOWN =
    GpioWiringPiInitDigitalIn_Resistor_PULL_DOWN;
  static const Resistor PULL_UP =
    GpioWiringPiInitDigitalIn_Resistor_PULL_UP;
  static inline bool Resistor_IsValid(int value) {
    return GpioWiringPiInitDigitalIn_Resistor_IsValid(value);
  }
  static const Resistor Resistor_MIN =
    GpioWiringPiInitDigitalIn_Resistor_Resistor_MIN;
  static const Resistor Resistor_MAX =
    GpioWiringPiInitDigitalIn_Resistor_Resistor_MAX;
  static const int Resistor_ARRAYSIZE =
    GpioWiringPiInitDigitalIn_Resistor_Resistor_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Resistor_descriptor() {
    return GpioWiringPiInitDigitalIn_Resistor_descriptor();
  }
  static inline const ::std::string& Resistor_Name(Resistor value) {
    return GpioWiringPiInitDigitalIn_Resistor_Name(value);
  }
  static inline bool Resistor_Parse(const ::std::string& name,
      Resistor* value) {
    return GpioWiringPiInitDigitalIn_Resistor_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 pin = 1;
  void clear_pin();
  static const int kPinFieldNumber = 1;
  ::google::protobuf::uint32 pin() const;
  void set_pin(::google::protobuf::uint32 value);

  // .LabNetProt.Client.GpioWiringPiInitDigitalIn.Resistor resistor_state = 2;
  void clear_resistor_state();
  static const int kResistorStateFieldNumber = 2;
  ::LabNetProt::Client::GpioWiringPiInitDigitalIn_Resistor resistor_state() const;
  void set_resistor_state(::LabNetProt::Client::GpioWiringPiInitDigitalIn_Resistor value);

  // bool is_inverted = 3;
  void clear_is_inverted();
  static const int kIsInvertedFieldNumber = 3;
  bool is_inverted() const;
  void set_is_inverted(bool value);

  // @@protoc_insertion_point(class_scope:LabNetProt.Client.GpioWiringPiInitDigitalIn)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 pin_;
  int resistor_state_;
  bool is_inverted_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_LabNetClient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GpioWiringPiInitDigitalOut : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LabNetProt.Client.GpioWiringPiInitDigitalOut) */ {
 public:
  GpioWiringPiInitDigitalOut();
  virtual ~GpioWiringPiInitDigitalOut();

  GpioWiringPiInitDigitalOut(const GpioWiringPiInitDigitalOut& from);

  inline GpioWiringPiInitDigitalOut& operator=(const GpioWiringPiInitDigitalOut& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GpioWiringPiInitDigitalOut(GpioWiringPiInitDigitalOut&& from) noexcept
    : GpioWiringPiInitDigitalOut() {
    *this = ::std::move(from);
  }

  inline GpioWiringPiInitDigitalOut& operator=(GpioWiringPiInitDigitalOut&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GpioWiringPiInitDigitalOut& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GpioWiringPiInitDigitalOut* internal_default_instance() {
    return reinterpret_cast<const GpioWiringPiInitDigitalOut*>(
               &_GpioWiringPiInitDigitalOut_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(GpioWiringPiInitDigitalOut* other);
  friend void swap(GpioWiringPiInitDigitalOut& a, GpioWiringPiInitDigitalOut& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GpioWiringPiInitDigitalOut* New() const final {
    return CreateMaybeMessage<GpioWiringPiInitDigitalOut>(NULL);
  }

  GpioWiringPiInitDigitalOut* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GpioWiringPiInitDigitalOut>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GpioWiringPiInitDigitalOut& from);
  void MergeFrom(const GpioWiringPiInitDigitalOut& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GpioWiringPiInitDigitalOut* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 pin = 1;
  void clear_pin();
  static const int kPinFieldNumber = 1;
  ::google::protobuf::uint32 pin() const;
  void set_pin(::google::protobuf::uint32 value);

  // bool is_inverted = 2;
  void clear_is_inverted();
  static const int kIsInvertedFieldNumber = 2;
  bool is_inverted() const;
  void set_is_inverted(bool value);

  // @@protoc_insertion_point(class_scope:LabNetProt.Client.GpioWiringPiInitDigitalOut)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 pin_;
  bool is_inverted_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_LabNetClient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DigitalOutSet : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LabNetProt.Client.DigitalOutSet) */ {
 public:
  DigitalOutSet();
  virtual ~DigitalOutSet();

  DigitalOutSet(const DigitalOutSet& from);

  inline DigitalOutSet& operator=(const DigitalOutSet& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DigitalOutSet(DigitalOutSet&& from) noexcept
    : DigitalOutSet() {
    *this = ::std::move(from);
  }

  inline DigitalOutSet& operator=(DigitalOutSet&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DigitalOutSet& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DigitalOutSet* internal_default_instance() {
    return reinterpret_cast<const DigitalOutSet*>(
               &_DigitalOutSet_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(DigitalOutSet* other);
  friend void swap(DigitalOutSet& a, DigitalOutSet& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DigitalOutSet* New() const final {
    return CreateMaybeMessage<DigitalOutSet>(NULL);
  }

  DigitalOutSet* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DigitalOutSet>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DigitalOutSet& from);
  void MergeFrom(const DigitalOutSet& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DigitalOutSet* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .LabNetProt.PinId id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::LabNetProt::PinId& _internal_id() const;
  public:
  const ::LabNetProt::PinId& id() const;
  ::LabNetProt::PinId* release_id();
  ::LabNetProt::PinId* mutable_id();
  void set_allocated_id(::LabNetProt::PinId* id);

  // bool state = 2;
  void clear_state();
  static const int kStateFieldNumber = 2;
  bool state() const;
  void set_state(bool value);

  // @@protoc_insertion_point(class_scope:LabNetProt.Client.DigitalOutSet)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::LabNetProt::PinId* id_;
  bool state_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_LabNetClient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DigitalOutPulse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LabNetProt.Client.DigitalOutPulse) */ {
 public:
  DigitalOutPulse();
  virtual ~DigitalOutPulse();

  DigitalOutPulse(const DigitalOutPulse& from);

  inline DigitalOutPulse& operator=(const DigitalOutPulse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DigitalOutPulse(DigitalOutPulse&& from) noexcept
    : DigitalOutPulse() {
    *this = ::std::move(from);
  }

  inline DigitalOutPulse& operator=(DigitalOutPulse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DigitalOutPulse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DigitalOutPulse* internal_default_instance() {
    return reinterpret_cast<const DigitalOutPulse*>(
               &_DigitalOutPulse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(DigitalOutPulse* other);
  friend void swap(DigitalOutPulse& a, DigitalOutPulse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DigitalOutPulse* New() const final {
    return CreateMaybeMessage<DigitalOutPulse>(NULL);
  }

  DigitalOutPulse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DigitalOutPulse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DigitalOutPulse& from);
  void MergeFrom(const DigitalOutPulse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DigitalOutPulse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .LabNetProt.PinId id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::LabNetProt::PinId& _internal_id() const;
  public:
  const ::LabNetProt::PinId& id() const;
  ::LabNetProt::PinId* release_id();
  ::LabNetProt::PinId* mutable_id();
  void set_allocated_id(::LabNetProt::PinId* id);

  // uint32 high_duration = 2;
  void clear_high_duration();
  static const int kHighDurationFieldNumber = 2;
  ::google::protobuf::uint32 high_duration() const;
  void set_high_duration(::google::protobuf::uint32 value);

  // uint32 low_duration = 3;
  void clear_low_duration();
  static const int kLowDurationFieldNumber = 3;
  ::google::protobuf::uint32 low_duration() const;
  void set_low_duration(::google::protobuf::uint32 value);

  // uint32 pulses = 4;
  void clear_pulses();
  static const int kPulsesFieldNumber = 4;
  ::google::protobuf::uint32 pulses() const;
  void set_pulses(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:LabNetProt.Client.DigitalOutPulse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::LabNetProt::PinId* id_;
  ::google::protobuf::uint32 high_duration_;
  ::google::protobuf::uint32 low_duration_;
  ::google::protobuf::uint32 pulses_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_LabNetClient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StartDigitalOutLoop_DigitalOutputParameter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LabNetProt.Client.StartDigitalOutLoop.DigitalOutputParameter) */ {
 public:
  StartDigitalOutLoop_DigitalOutputParameter();
  virtual ~StartDigitalOutLoop_DigitalOutputParameter();

  StartDigitalOutLoop_DigitalOutputParameter(const StartDigitalOutLoop_DigitalOutputParameter& from);

  inline StartDigitalOutLoop_DigitalOutputParameter& operator=(const StartDigitalOutLoop_DigitalOutputParameter& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StartDigitalOutLoop_DigitalOutputParameter(StartDigitalOutLoop_DigitalOutputParameter&& from) noexcept
    : StartDigitalOutLoop_DigitalOutputParameter() {
    *this = ::std::move(from);
  }

  inline StartDigitalOutLoop_DigitalOutputParameter& operator=(StartDigitalOutLoop_DigitalOutputParameter&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StartDigitalOutLoop_DigitalOutputParameter& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StartDigitalOutLoop_DigitalOutputParameter* internal_default_instance() {
    return reinterpret_cast<const StartDigitalOutLoop_DigitalOutputParameter*>(
               &_StartDigitalOutLoop_DigitalOutputParameter_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(StartDigitalOutLoop_DigitalOutputParameter* other);
  friend void swap(StartDigitalOutLoop_DigitalOutputParameter& a, StartDigitalOutLoop_DigitalOutputParameter& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StartDigitalOutLoop_DigitalOutputParameter* New() const final {
    return CreateMaybeMessage<StartDigitalOutLoop_DigitalOutputParameter>(NULL);
  }

  StartDigitalOutLoop_DigitalOutputParameter* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StartDigitalOutLoop_DigitalOutputParameter>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StartDigitalOutLoop_DigitalOutputParameter& from);
  void MergeFrom(const StartDigitalOutLoop_DigitalOutputParameter& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StartDigitalOutLoop_DigitalOutputParameter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .LabNetProt.PinId id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::LabNetProt::PinId& _internal_id() const;
  public:
  const ::LabNetProt::PinId& id() const;
  ::LabNetProt::PinId* release_id();
  ::LabNetProt::PinId* mutable_id();
  void set_allocated_id(::LabNetProt::PinId* id);

  // uint32 offset = 2;
  void clear_offset();
  static const int kOffsetFieldNumber = 2;
  ::google::protobuf::uint32 offset() const;
  void set_offset(::google::protobuf::uint32 value);

  // uint32 duration = 3;
  void clear_duration();
  static const int kDurationFieldNumber = 3;
  ::google::protobuf::uint32 duration() const;
  void set_duration(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:LabNetProt.Client.StartDigitalOutLoop.DigitalOutputParameter)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::LabNetProt::PinId* id_;
  ::google::protobuf::uint32 offset_;
  ::google::protobuf::uint32 duration_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_LabNetClient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StartDigitalOutLoop : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LabNetProt.Client.StartDigitalOutLoop) */ {
 public:
  StartDigitalOutLoop();
  virtual ~StartDigitalOutLoop();

  StartDigitalOutLoop(const StartDigitalOutLoop& from);

  inline StartDigitalOutLoop& operator=(const StartDigitalOutLoop& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StartDigitalOutLoop(StartDigitalOutLoop&& from) noexcept
    : StartDigitalOutLoop() {
    *this = ::std::move(from);
  }

  inline StartDigitalOutLoop& operator=(StartDigitalOutLoop&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StartDigitalOutLoop& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StartDigitalOutLoop* internal_default_instance() {
    return reinterpret_cast<const StartDigitalOutLoop*>(
               &_StartDigitalOutLoop_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(StartDigitalOutLoop* other);
  friend void swap(StartDigitalOutLoop& a, StartDigitalOutLoop& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StartDigitalOutLoop* New() const final {
    return CreateMaybeMessage<StartDigitalOutLoop>(NULL);
  }

  StartDigitalOutLoop* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StartDigitalOutLoop>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StartDigitalOutLoop& from);
  void MergeFrom(const StartDigitalOutLoop& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StartDigitalOutLoop* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef StartDigitalOutLoop_DigitalOutputParameter DigitalOutputParameter;

  // accessors -------------------------------------------------------

  // repeated .LabNetProt.Client.StartDigitalOutLoop.DigitalOutputParameter digital_outputs = 3;
  int digital_outputs_size() const;
  void clear_digital_outputs();
  static const int kDigitalOutputsFieldNumber = 3;
  ::LabNetProt::Client::StartDigitalOutLoop_DigitalOutputParameter* mutable_digital_outputs(int index);
  ::google::protobuf::RepeatedPtrField< ::LabNetProt::Client::StartDigitalOutLoop_DigitalOutputParameter >*
      mutable_digital_outputs();
  const ::LabNetProt::Client::StartDigitalOutLoop_DigitalOutputParameter& digital_outputs(int index) const;
  ::LabNetProt::Client::StartDigitalOutLoop_DigitalOutputParameter* add_digital_outputs();
  const ::google::protobuf::RepeatedPtrField< ::LabNetProt::Client::StartDigitalOutLoop_DigitalOutputParameter >&
      digital_outputs() const;

  // string loop_name = 1;
  void clear_loop_name();
  static const int kLoopNameFieldNumber = 1;
  const ::std::string& loop_name() const;
  void set_loop_name(const ::std::string& value);
  #if LANG_CXX11
  void set_loop_name(::std::string&& value);
  #endif
  void set_loop_name(const char* value);
  void set_loop_name(const char* value, size_t size);
  ::std::string* mutable_loop_name();
  ::std::string* release_loop_name();
  void set_allocated_loop_name(::std::string* loop_name);

  // uint32 loop_pause = 2;
  void clear_loop_pause();
  static const int kLoopPauseFieldNumber = 2;
  ::google::protobuf::uint32 loop_pause() const;
  void set_loop_pause(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:LabNetProt.Client.StartDigitalOutLoop)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::LabNetProt::Client::StartDigitalOutLoop_DigitalOutputParameter > digital_outputs_;
  ::google::protobuf::internal::ArenaStringPtr loop_name_;
  ::google::protobuf::uint32 loop_pause_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_LabNetClient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StopDigitalOutLoop : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LabNetProt.Client.StopDigitalOutLoop) */ {
 public:
  StopDigitalOutLoop();
  virtual ~StopDigitalOutLoop();

  StopDigitalOutLoop(const StopDigitalOutLoop& from);

  inline StopDigitalOutLoop& operator=(const StopDigitalOutLoop& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StopDigitalOutLoop(StopDigitalOutLoop&& from) noexcept
    : StopDigitalOutLoop() {
    *this = ::std::move(from);
  }

  inline StopDigitalOutLoop& operator=(StopDigitalOutLoop&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StopDigitalOutLoop& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StopDigitalOutLoop* internal_default_instance() {
    return reinterpret_cast<const StopDigitalOutLoop*>(
               &_StopDigitalOutLoop_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(StopDigitalOutLoop* other);
  friend void swap(StopDigitalOutLoop& a, StopDigitalOutLoop& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StopDigitalOutLoop* New() const final {
    return CreateMaybeMessage<StopDigitalOutLoop>(NULL);
  }

  StopDigitalOutLoop* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StopDigitalOutLoop>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StopDigitalOutLoop& from);
  void MergeFrom(const StopDigitalOutLoop& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StopDigitalOutLoop* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string loop_name = 1;
  void clear_loop_name();
  static const int kLoopNameFieldNumber = 1;
  const ::std::string& loop_name() const;
  void set_loop_name(const ::std::string& value);
  #if LANG_CXX11
  void set_loop_name(::std::string&& value);
  #endif
  void set_loop_name(const char* value);
  void set_loop_name(const char* value, size_t size);
  ::std::string* mutable_loop_name();
  ::std::string* release_loop_name();
  void set_allocated_loop_name(::std::string* loop_name);

  // @@protoc_insertion_point(class_scope:LabNetProt.Client.StopDigitalOutLoop)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr loop_name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_LabNetClient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LabNetResetRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LabNetProt.Client.LabNetResetRequest) */ {
 public:
  LabNetResetRequest();
  virtual ~LabNetResetRequest();

  LabNetResetRequest(const LabNetResetRequest& from);

  inline LabNetResetRequest& operator=(const LabNetResetRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LabNetResetRequest(LabNetResetRequest&& from) noexcept
    : LabNetResetRequest() {
    *this = ::std::move(from);
  }

  inline LabNetResetRequest& operator=(LabNetResetRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LabNetResetRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LabNetResetRequest* internal_default_instance() {
    return reinterpret_cast<const LabNetResetRequest*>(
               &_LabNetResetRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void Swap(LabNetResetRequest* other);
  friend void swap(LabNetResetRequest& a, LabNetResetRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LabNetResetRequest* New() const final {
    return CreateMaybeMessage<LabNetResetRequest>(NULL);
  }

  LabNetResetRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LabNetResetRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LabNetResetRequest& from);
  void MergeFrom(const LabNetResetRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LabNetResetRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:LabNetProt.Client.LabNetResetRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_LabNetClient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LabNetIdRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LabNetProt.Client.LabNetIdRequest) */ {
 public:
  LabNetIdRequest();
  virtual ~LabNetIdRequest();

  LabNetIdRequest(const LabNetIdRequest& from);

  inline LabNetIdRequest& operator=(const LabNetIdRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LabNetIdRequest(LabNetIdRequest&& from) noexcept
    : LabNetIdRequest() {
    *this = ::std::move(from);
  }

  inline LabNetIdRequest& operator=(LabNetIdRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LabNetIdRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LabNetIdRequest* internal_default_instance() {
    return reinterpret_cast<const LabNetIdRequest*>(
               &_LabNetIdRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void Swap(LabNetIdRequest* other);
  friend void swap(LabNetIdRequest& a, LabNetIdRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LabNetIdRequest* New() const final {
    return CreateMaybeMessage<LabNetIdRequest>(NULL);
  }

  LabNetIdRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LabNetIdRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LabNetIdRequest& from);
  void MergeFrom(const LabNetIdRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LabNetIdRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:LabNetProt.Client.LabNetIdRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_LabNetClient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientWrappedMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LabNetProt.Client.ClientWrappedMessage) */ {
 public:
  ClientWrappedMessage();
  virtual ~ClientWrappedMessage();

  ClientWrappedMessage(const ClientWrappedMessage& from);

  inline ClientWrappedMessage& operator=(const ClientWrappedMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientWrappedMessage(ClientWrappedMessage&& from) noexcept
    : ClientWrappedMessage() {
    *this = ::std::move(from);
  }

  inline ClientWrappedMessage& operator=(ClientWrappedMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientWrappedMessage& default_instance();

  enum ClientMessageCase {
    kResetRequest = 1,
    kIdRequest = 2,
    kIoBoardInit = 3,
    kIoBoardInitDigitalIn = 4,
    kIoBoardInitDigitalOut = 5,
    kRfidBoardInit = 6,
    kRfidBoardSetPhaseMatrix = 7,
    kRfidBoardSetSignalInversion = 8,
    kUartInit = 9,
    kUartWriteData = 10,
    kDigitalOutSet = 11,
    kDigitalOutPulse = 12,
    kStartDigitalOutLoop = 13,
    kStopDigitalOutLoop = 14,
    kGpioWiringPiInit = 15,
    kGpioWiringPiInitDigitalIn = 16,
    kGpioWiringPiInitDigitalOut = 17,
    CLIENT_MESSAGE_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ClientWrappedMessage* internal_default_instance() {
    return reinterpret_cast<const ClientWrappedMessage*>(
               &_ClientWrappedMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  void Swap(ClientWrappedMessage* other);
  friend void swap(ClientWrappedMessage& a, ClientWrappedMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientWrappedMessage* New() const final {
    return CreateMaybeMessage<ClientWrappedMessage>(NULL);
  }

  ClientWrappedMessage* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ClientWrappedMessage>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ClientWrappedMessage& from);
  void MergeFrom(const ClientWrappedMessage& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ClientWrappedMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .LabNetProt.Client.LabNetResetRequest reset_request = 1;
  bool has_reset_request() const;
  void clear_reset_request();
  static const int kResetRequestFieldNumber = 1;
  private:
  const ::LabNetProt::Client::LabNetResetRequest& _internal_reset_request() const;
  public:
  const ::LabNetProt::Client::LabNetResetRequest& reset_request() const;
  ::LabNetProt::Client::LabNetResetRequest* release_reset_request();
  ::LabNetProt::Client::LabNetResetRequest* mutable_reset_request();
  void set_allocated_reset_request(::LabNetProt::Client::LabNetResetRequest* reset_request);

  // .LabNetProt.Client.LabNetIdRequest id_request = 2;
  bool has_id_request() const;
  void clear_id_request();
  static const int kIdRequestFieldNumber = 2;
  private:
  const ::LabNetProt::Client::LabNetIdRequest& _internal_id_request() const;
  public:
  const ::LabNetProt::Client::LabNetIdRequest& id_request() const;
  ::LabNetProt::Client::LabNetIdRequest* release_id_request();
  ::LabNetProt::Client::LabNetIdRequest* mutable_id_request();
  void set_allocated_id_request(::LabNetProt::Client::LabNetIdRequest* id_request);

  // .LabNetProt.Client.IoBoardInit io_board_init = 3;
  bool has_io_board_init() const;
  void clear_io_board_init();
  static const int kIoBoardInitFieldNumber = 3;
  private:
  const ::LabNetProt::Client::IoBoardInit& _internal_io_board_init() const;
  public:
  const ::LabNetProt::Client::IoBoardInit& io_board_init() const;
  ::LabNetProt::Client::IoBoardInit* release_io_board_init();
  ::LabNetProt::Client::IoBoardInit* mutable_io_board_init();
  void set_allocated_io_board_init(::LabNetProt::Client::IoBoardInit* io_board_init);

  // .LabNetProt.Client.IoBoardInitDigitalIn io_board_init_digital_in = 4;
  bool has_io_board_init_digital_in() const;
  void clear_io_board_init_digital_in();
  static const int kIoBoardInitDigitalInFieldNumber = 4;
  private:
  const ::LabNetProt::Client::IoBoardInitDigitalIn& _internal_io_board_init_digital_in() const;
  public:
  const ::LabNetProt::Client::IoBoardInitDigitalIn& io_board_init_digital_in() const;
  ::LabNetProt::Client::IoBoardInitDigitalIn* release_io_board_init_digital_in();
  ::LabNetProt::Client::IoBoardInitDigitalIn* mutable_io_board_init_digital_in();
  void set_allocated_io_board_init_digital_in(::LabNetProt::Client::IoBoardInitDigitalIn* io_board_init_digital_in);

  // .LabNetProt.Client.IoBoardInitDigitalOut io_board_init_digital_out = 5;
  bool has_io_board_init_digital_out() const;
  void clear_io_board_init_digital_out();
  static const int kIoBoardInitDigitalOutFieldNumber = 5;
  private:
  const ::LabNetProt::Client::IoBoardInitDigitalOut& _internal_io_board_init_digital_out() const;
  public:
  const ::LabNetProt::Client::IoBoardInitDigitalOut& io_board_init_digital_out() const;
  ::LabNetProt::Client::IoBoardInitDigitalOut* release_io_board_init_digital_out();
  ::LabNetProt::Client::IoBoardInitDigitalOut* mutable_io_board_init_digital_out();
  void set_allocated_io_board_init_digital_out(::LabNetProt::Client::IoBoardInitDigitalOut* io_board_init_digital_out);

  // .LabNetProt.Client.RfidBoardInit rfid_board_init = 6;
  bool has_rfid_board_init() const;
  void clear_rfid_board_init();
  static const int kRfidBoardInitFieldNumber = 6;
  private:
  const ::LabNetProt::Client::RfidBoardInit& _internal_rfid_board_init() const;
  public:
  const ::LabNetProt::Client::RfidBoardInit& rfid_board_init() const;
  ::LabNetProt::Client::RfidBoardInit* release_rfid_board_init();
  ::LabNetProt::Client::RfidBoardInit* mutable_rfid_board_init();
  void set_allocated_rfid_board_init(::LabNetProt::Client::RfidBoardInit* rfid_board_init);

  // .LabNetProt.Client.RfidBoardSetPhaseMatrix rfid_board_set_phase_matrix = 7;
  bool has_rfid_board_set_phase_matrix() const;
  void clear_rfid_board_set_phase_matrix();
  static const int kRfidBoardSetPhaseMatrixFieldNumber = 7;
  private:
  const ::LabNetProt::Client::RfidBoardSetPhaseMatrix& _internal_rfid_board_set_phase_matrix() const;
  public:
  const ::LabNetProt::Client::RfidBoardSetPhaseMatrix& rfid_board_set_phase_matrix() const;
  ::LabNetProt::Client::RfidBoardSetPhaseMatrix* release_rfid_board_set_phase_matrix();
  ::LabNetProt::Client::RfidBoardSetPhaseMatrix* mutable_rfid_board_set_phase_matrix();
  void set_allocated_rfid_board_set_phase_matrix(::LabNetProt::Client::RfidBoardSetPhaseMatrix* rfid_board_set_phase_matrix);

  // .LabNetProt.Client.RfidBoardSetSignalInversion rfid_board_set_signal_inversion = 8;
  bool has_rfid_board_set_signal_inversion() const;
  void clear_rfid_board_set_signal_inversion();
  static const int kRfidBoardSetSignalInversionFieldNumber = 8;
  private:
  const ::LabNetProt::Client::RfidBoardSetSignalInversion& _internal_rfid_board_set_signal_inversion() const;
  public:
  const ::LabNetProt::Client::RfidBoardSetSignalInversion& rfid_board_set_signal_inversion() const;
  ::LabNetProt::Client::RfidBoardSetSignalInversion* release_rfid_board_set_signal_inversion();
  ::LabNetProt::Client::RfidBoardSetSignalInversion* mutable_rfid_board_set_signal_inversion();
  void set_allocated_rfid_board_set_signal_inversion(::LabNetProt::Client::RfidBoardSetSignalInversion* rfid_board_set_signal_inversion);

  // .LabNetProt.Client.UartInit uart_init = 9;
  bool has_uart_init() const;
  void clear_uart_init();
  static const int kUartInitFieldNumber = 9;
  private:
  const ::LabNetProt::Client::UartInit& _internal_uart_init() const;
  public:
  const ::LabNetProt::Client::UartInit& uart_init() const;
  ::LabNetProt::Client::UartInit* release_uart_init();
  ::LabNetProt::Client::UartInit* mutable_uart_init();
  void set_allocated_uart_init(::LabNetProt::Client::UartInit* uart_init);

  // .LabNetProt.Client.UartWriteData uart_write_data = 10;
  bool has_uart_write_data() const;
  void clear_uart_write_data();
  static const int kUartWriteDataFieldNumber = 10;
  private:
  const ::LabNetProt::Client::UartWriteData& _internal_uart_write_data() const;
  public:
  const ::LabNetProt::Client::UartWriteData& uart_write_data() const;
  ::LabNetProt::Client::UartWriteData* release_uart_write_data();
  ::LabNetProt::Client::UartWriteData* mutable_uart_write_data();
  void set_allocated_uart_write_data(::LabNetProt::Client::UartWriteData* uart_write_data);

  // .LabNetProt.Client.DigitalOutSet digital_out_set = 11;
  bool has_digital_out_set() const;
  void clear_digital_out_set();
  static const int kDigitalOutSetFieldNumber = 11;
  private:
  const ::LabNetProt::Client::DigitalOutSet& _internal_digital_out_set() const;
  public:
  const ::LabNetProt::Client::DigitalOutSet& digital_out_set() const;
  ::LabNetProt::Client::DigitalOutSet* release_digital_out_set();
  ::LabNetProt::Client::DigitalOutSet* mutable_digital_out_set();
  void set_allocated_digital_out_set(::LabNetProt::Client::DigitalOutSet* digital_out_set);

  // .LabNetProt.Client.DigitalOutPulse digital_out_pulse = 12;
  bool has_digital_out_pulse() const;
  void clear_digital_out_pulse();
  static const int kDigitalOutPulseFieldNumber = 12;
  private:
  const ::LabNetProt::Client::DigitalOutPulse& _internal_digital_out_pulse() const;
  public:
  const ::LabNetProt::Client::DigitalOutPulse& digital_out_pulse() const;
  ::LabNetProt::Client::DigitalOutPulse* release_digital_out_pulse();
  ::LabNetProt::Client::DigitalOutPulse* mutable_digital_out_pulse();
  void set_allocated_digital_out_pulse(::LabNetProt::Client::DigitalOutPulse* digital_out_pulse);

  // .LabNetProt.Client.StartDigitalOutLoop start_digital_out_loop = 13;
  bool has_start_digital_out_loop() const;
  void clear_start_digital_out_loop();
  static const int kStartDigitalOutLoopFieldNumber = 13;
  private:
  const ::LabNetProt::Client::StartDigitalOutLoop& _internal_start_digital_out_loop() const;
  public:
  const ::LabNetProt::Client::StartDigitalOutLoop& start_digital_out_loop() const;
  ::LabNetProt::Client::StartDigitalOutLoop* release_start_digital_out_loop();
  ::LabNetProt::Client::StartDigitalOutLoop* mutable_start_digital_out_loop();
  void set_allocated_start_digital_out_loop(::LabNetProt::Client::StartDigitalOutLoop* start_digital_out_loop);

  // .LabNetProt.Client.StopDigitalOutLoop stop_digital_out_loop = 14;
  bool has_stop_digital_out_loop() const;
  void clear_stop_digital_out_loop();
  static const int kStopDigitalOutLoopFieldNumber = 14;
  private:
  const ::LabNetProt::Client::StopDigitalOutLoop& _internal_stop_digital_out_loop() const;
  public:
  const ::LabNetProt::Client::StopDigitalOutLoop& stop_digital_out_loop() const;
  ::LabNetProt::Client::StopDigitalOutLoop* release_stop_digital_out_loop();
  ::LabNetProt::Client::StopDigitalOutLoop* mutable_stop_digital_out_loop();
  void set_allocated_stop_digital_out_loop(::LabNetProt::Client::StopDigitalOutLoop* stop_digital_out_loop);

  // .LabNetProt.Client.GpioWiringPiInit gpio_wiring_pi_init = 15;
  bool has_gpio_wiring_pi_init() const;
  void clear_gpio_wiring_pi_init();
  static const int kGpioWiringPiInitFieldNumber = 15;
  private:
  const ::LabNetProt::Client::GpioWiringPiInit& _internal_gpio_wiring_pi_init() const;
  public:
  const ::LabNetProt::Client::GpioWiringPiInit& gpio_wiring_pi_init() const;
  ::LabNetProt::Client::GpioWiringPiInit* release_gpio_wiring_pi_init();
  ::LabNetProt::Client::GpioWiringPiInit* mutable_gpio_wiring_pi_init();
  void set_allocated_gpio_wiring_pi_init(::LabNetProt::Client::GpioWiringPiInit* gpio_wiring_pi_init);

  // .LabNetProt.Client.GpioWiringPiInitDigitalIn gpio_wiring_pi_init_digital_in = 16;
  bool has_gpio_wiring_pi_init_digital_in() const;
  void clear_gpio_wiring_pi_init_digital_in();
  static const int kGpioWiringPiInitDigitalInFieldNumber = 16;
  private:
  const ::LabNetProt::Client::GpioWiringPiInitDigitalIn& _internal_gpio_wiring_pi_init_digital_in() const;
  public:
  const ::LabNetProt::Client::GpioWiringPiInitDigitalIn& gpio_wiring_pi_init_digital_in() const;
  ::LabNetProt::Client::GpioWiringPiInitDigitalIn* release_gpio_wiring_pi_init_digital_in();
  ::LabNetProt::Client::GpioWiringPiInitDigitalIn* mutable_gpio_wiring_pi_init_digital_in();
  void set_allocated_gpio_wiring_pi_init_digital_in(::LabNetProt::Client::GpioWiringPiInitDigitalIn* gpio_wiring_pi_init_digital_in);

  // .LabNetProt.Client.GpioWiringPiInitDigitalOut gpio_wiring_pi_init_digital_out = 17;
  bool has_gpio_wiring_pi_init_digital_out() const;
  void clear_gpio_wiring_pi_init_digital_out();
  static const int kGpioWiringPiInitDigitalOutFieldNumber = 17;
  private:
  const ::LabNetProt::Client::GpioWiringPiInitDigitalOut& _internal_gpio_wiring_pi_init_digital_out() const;
  public:
  const ::LabNetProt::Client::GpioWiringPiInitDigitalOut& gpio_wiring_pi_init_digital_out() const;
  ::LabNetProt::Client::GpioWiringPiInitDigitalOut* release_gpio_wiring_pi_init_digital_out();
  ::LabNetProt::Client::GpioWiringPiInitDigitalOut* mutable_gpio_wiring_pi_init_digital_out();
  void set_allocated_gpio_wiring_pi_init_digital_out(::LabNetProt::Client::GpioWiringPiInitDigitalOut* gpio_wiring_pi_init_digital_out);

  void clear_client_message();
  ClientMessageCase client_message_case() const;
  // @@protoc_insertion_point(class_scope:LabNetProt.Client.ClientWrappedMessage)
 private:
  void set_has_reset_request();
  void set_has_id_request();
  void set_has_io_board_init();
  void set_has_io_board_init_digital_in();
  void set_has_io_board_init_digital_out();
  void set_has_rfid_board_init();
  void set_has_rfid_board_set_phase_matrix();
  void set_has_rfid_board_set_signal_inversion();
  void set_has_uart_init();
  void set_has_uart_write_data();
  void set_has_digital_out_set();
  void set_has_digital_out_pulse();
  void set_has_start_digital_out_loop();
  void set_has_stop_digital_out_loop();
  void set_has_gpio_wiring_pi_init();
  void set_has_gpio_wiring_pi_init_digital_in();
  void set_has_gpio_wiring_pi_init_digital_out();

  inline bool has_client_message() const;
  inline void clear_has_client_message();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union ClientMessageUnion {
    ClientMessageUnion() {}
    ::LabNetProt::Client::LabNetResetRequest* reset_request_;
    ::LabNetProt::Client::LabNetIdRequest* id_request_;
    ::LabNetProt::Client::IoBoardInit* io_board_init_;
    ::LabNetProt::Client::IoBoardInitDigitalIn* io_board_init_digital_in_;
    ::LabNetProt::Client::IoBoardInitDigitalOut* io_board_init_digital_out_;
    ::LabNetProt::Client::RfidBoardInit* rfid_board_init_;
    ::LabNetProt::Client::RfidBoardSetPhaseMatrix* rfid_board_set_phase_matrix_;
    ::LabNetProt::Client::RfidBoardSetSignalInversion* rfid_board_set_signal_inversion_;
    ::LabNetProt::Client::UartInit* uart_init_;
    ::LabNetProt::Client::UartWriteData* uart_write_data_;
    ::LabNetProt::Client::DigitalOutSet* digital_out_set_;
    ::LabNetProt::Client::DigitalOutPulse* digital_out_pulse_;
    ::LabNetProt::Client::StartDigitalOutLoop* start_digital_out_loop_;
    ::LabNetProt::Client::StopDigitalOutLoop* stop_digital_out_loop_;
    ::LabNetProt::Client::GpioWiringPiInit* gpio_wiring_pi_init_;
    ::LabNetProt::Client::GpioWiringPiInitDigitalIn* gpio_wiring_pi_init_digital_in_;
    ::LabNetProt::Client::GpioWiringPiInitDigitalOut* gpio_wiring_pi_init_digital_out_;
  } client_message_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_LabNetClient_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// IoBoardInit

// -------------------------------------------------------------------

// IoBoardInitDigitalIn

// uint32 pin = 1;
inline void IoBoardInitDigitalIn::clear_pin() {
  pin_ = 0u;
}
inline ::google::protobuf::uint32 IoBoardInitDigitalIn::pin() const {
  // @@protoc_insertion_point(field_get:LabNetProt.Client.IoBoardInitDigitalIn.pin)
  return pin_;
}
inline void IoBoardInitDigitalIn::set_pin(::google::protobuf::uint32 value) {
  
  pin_ = value;
  // @@protoc_insertion_point(field_set:LabNetProt.Client.IoBoardInitDigitalIn.pin)
}

// .LabNetProt.Client.IoBoardInitDigitalIn.Resistor resistor_state = 2;
inline void IoBoardInitDigitalIn::clear_resistor_state() {
  resistor_state_ = 0;
}
inline ::LabNetProt::Client::IoBoardInitDigitalIn_Resistor IoBoardInitDigitalIn::resistor_state() const {
  // @@protoc_insertion_point(field_get:LabNetProt.Client.IoBoardInitDigitalIn.resistor_state)
  return static_cast< ::LabNetProt::Client::IoBoardInitDigitalIn_Resistor >(resistor_state_);
}
inline void IoBoardInitDigitalIn::set_resistor_state(::LabNetProt::Client::IoBoardInitDigitalIn_Resistor value) {
  
  resistor_state_ = value;
  // @@protoc_insertion_point(field_set:LabNetProt.Client.IoBoardInitDigitalIn.resistor_state)
}

// bool is_inverted = 3;
inline void IoBoardInitDigitalIn::clear_is_inverted() {
  is_inverted_ = false;
}
inline bool IoBoardInitDigitalIn::is_inverted() const {
  // @@protoc_insertion_point(field_get:LabNetProt.Client.IoBoardInitDigitalIn.is_inverted)
  return is_inverted_;
}
inline void IoBoardInitDigitalIn::set_is_inverted(bool value) {
  
  is_inverted_ = value;
  // @@protoc_insertion_point(field_set:LabNetProt.Client.IoBoardInitDigitalIn.is_inverted)
}

// -------------------------------------------------------------------

// IoBoardInitDigitalOut

// uint32 pin = 1;
inline void IoBoardInitDigitalOut::clear_pin() {
  pin_ = 0u;
}
inline ::google::protobuf::uint32 IoBoardInitDigitalOut::pin() const {
  // @@protoc_insertion_point(field_get:LabNetProt.Client.IoBoardInitDigitalOut.pin)
  return pin_;
}
inline void IoBoardInitDigitalOut::set_pin(::google::protobuf::uint32 value) {
  
  pin_ = value;
  // @@protoc_insertion_point(field_set:LabNetProt.Client.IoBoardInitDigitalOut.pin)
}

// bool is_inverted = 2;
inline void IoBoardInitDigitalOut::clear_is_inverted() {
  is_inverted_ = false;
}
inline bool IoBoardInitDigitalOut::is_inverted() const {
  // @@protoc_insertion_point(field_get:LabNetProt.Client.IoBoardInitDigitalOut.is_inverted)
  return is_inverted_;
}
inline void IoBoardInitDigitalOut::set_is_inverted(bool value) {
  
  is_inverted_ = value;
  // @@protoc_insertion_point(field_set:LabNetProt.Client.IoBoardInitDigitalOut.is_inverted)
}

// -------------------------------------------------------------------

// RfidBoardInit

// uint32 antenna_phase1 = 1;
inline void RfidBoardInit::clear_antenna_phase1() {
  antenna_phase1_ = 0u;
}
inline ::google::protobuf::uint32 RfidBoardInit::antenna_phase1() const {
  // @@protoc_insertion_point(field_get:LabNetProt.Client.RfidBoardInit.antenna_phase1)
  return antenna_phase1_;
}
inline void RfidBoardInit::set_antenna_phase1(::google::protobuf::uint32 value) {
  
  antenna_phase1_ = value;
  // @@protoc_insertion_point(field_set:LabNetProt.Client.RfidBoardInit.antenna_phase1)
}

// uint32 antenna_phase2 = 2;
inline void RfidBoardInit::clear_antenna_phase2() {
  antenna_phase2_ = 0u;
}
inline ::google::protobuf::uint32 RfidBoardInit::antenna_phase2() const {
  // @@protoc_insertion_point(field_get:LabNetProt.Client.RfidBoardInit.antenna_phase2)
  return antenna_phase2_;
}
inline void RfidBoardInit::set_antenna_phase2(::google::protobuf::uint32 value) {
  
  antenna_phase2_ = value;
  // @@protoc_insertion_point(field_set:LabNetProt.Client.RfidBoardInit.antenna_phase2)
}

// uint32 phase_duration = 3;
inline void RfidBoardInit::clear_phase_duration() {
  phase_duration_ = 0u;
}
inline ::google::protobuf::uint32 RfidBoardInit::phase_duration() const {
  // @@protoc_insertion_point(field_get:LabNetProt.Client.RfidBoardInit.phase_duration)
  return phase_duration_;
}
inline void RfidBoardInit::set_phase_duration(::google::protobuf::uint32 value) {
  
  phase_duration_ = value;
  // @@protoc_insertion_point(field_set:LabNetProt.Client.RfidBoardInit.phase_duration)
}

// bool inverted = 4;
inline void RfidBoardInit::clear_inverted() {
  inverted_ = false;
}
inline bool RfidBoardInit::inverted() const {
  // @@protoc_insertion_point(field_get:LabNetProt.Client.RfidBoardInit.inverted)
  return inverted_;
}
inline void RfidBoardInit::set_inverted(bool value) {
  
  inverted_ = value;
  // @@protoc_insertion_point(field_set:LabNetProt.Client.RfidBoardInit.inverted)
}

// -------------------------------------------------------------------

// RfidBoardSetPhaseMatrix

// uint32 antenna_phase1 = 1;
inline void RfidBoardSetPhaseMatrix::clear_antenna_phase1() {
  antenna_phase1_ = 0u;
}
inline ::google::protobuf::uint32 RfidBoardSetPhaseMatrix::antenna_phase1() const {
  // @@protoc_insertion_point(field_get:LabNetProt.Client.RfidBoardSetPhaseMatrix.antenna_phase1)
  return antenna_phase1_;
}
inline void RfidBoardSetPhaseMatrix::set_antenna_phase1(::google::protobuf::uint32 value) {
  
  antenna_phase1_ = value;
  // @@protoc_insertion_point(field_set:LabNetProt.Client.RfidBoardSetPhaseMatrix.antenna_phase1)
}

// uint32 antenna_phase2 = 2;
inline void RfidBoardSetPhaseMatrix::clear_antenna_phase2() {
  antenna_phase2_ = 0u;
}
inline ::google::protobuf::uint32 RfidBoardSetPhaseMatrix::antenna_phase2() const {
  // @@protoc_insertion_point(field_get:LabNetProt.Client.RfidBoardSetPhaseMatrix.antenna_phase2)
  return antenna_phase2_;
}
inline void RfidBoardSetPhaseMatrix::set_antenna_phase2(::google::protobuf::uint32 value) {
  
  antenna_phase2_ = value;
  // @@protoc_insertion_point(field_set:LabNetProt.Client.RfidBoardSetPhaseMatrix.antenna_phase2)
}

// uint32 phase_duration = 3;
inline void RfidBoardSetPhaseMatrix::clear_phase_duration() {
  phase_duration_ = 0u;
}
inline ::google::protobuf::uint32 RfidBoardSetPhaseMatrix::phase_duration() const {
  // @@protoc_insertion_point(field_get:LabNetProt.Client.RfidBoardSetPhaseMatrix.phase_duration)
  return phase_duration_;
}
inline void RfidBoardSetPhaseMatrix::set_phase_duration(::google::protobuf::uint32 value) {
  
  phase_duration_ = value;
  // @@protoc_insertion_point(field_set:LabNetProt.Client.RfidBoardSetPhaseMatrix.phase_duration)
}

// -------------------------------------------------------------------

// RfidBoardSetSignalInversion

// bool inverted = 1;
inline void RfidBoardSetSignalInversion::clear_inverted() {
  inverted_ = false;
}
inline bool RfidBoardSetSignalInversion::inverted() const {
  // @@protoc_insertion_point(field_get:LabNetProt.Client.RfidBoardSetSignalInversion.inverted)
  return inverted_;
}
inline void RfidBoardSetSignalInversion::set_inverted(bool value) {
  
  inverted_ = value;
  // @@protoc_insertion_point(field_set:LabNetProt.Client.RfidBoardSetSignalInversion.inverted)
}

// -------------------------------------------------------------------

// UartInit

// .LabNetProt.Uarts port = 1;
inline void UartInit::clear_port() {
  port_ = 0;
}
inline ::LabNetProt::Uarts UartInit::port() const {
  // @@protoc_insertion_point(field_get:LabNetProt.Client.UartInit.port)
  return static_cast< ::LabNetProt::Uarts >(port_);
}
inline void UartInit::set_port(::LabNetProt::Uarts value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:LabNetProt.Client.UartInit.port)
}

// uint32 baud = 2;
inline void UartInit::clear_baud() {
  baud_ = 0u;
}
inline ::google::protobuf::uint32 UartInit::baud() const {
  // @@protoc_insertion_point(field_get:LabNetProt.Client.UartInit.baud)
  return baud_;
}
inline void UartInit::set_baud(::google::protobuf::uint32 value) {
  
  baud_ = value;
  // @@protoc_insertion_point(field_set:LabNetProt.Client.UartInit.baud)
}

// -------------------------------------------------------------------

// UartWriteData

// .LabNetProt.Uarts port = 1;
inline void UartWriteData::clear_port() {
  port_ = 0;
}
inline ::LabNetProt::Uarts UartWriteData::port() const {
  // @@protoc_insertion_point(field_get:LabNetProt.Client.UartWriteData.port)
  return static_cast< ::LabNetProt::Uarts >(port_);
}
inline void UartWriteData::set_port(::LabNetProt::Uarts value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:LabNetProt.Client.UartWriteData.port)
}

// bytes data = 2;
inline void UartWriteData::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UartWriteData::data() const {
  // @@protoc_insertion_point(field_get:LabNetProt.Client.UartWriteData.data)
  return data_.GetNoArena();
}
inline void UartWriteData::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LabNetProt.Client.UartWriteData.data)
}
#if LANG_CXX11
inline void UartWriteData::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LabNetProt.Client.UartWriteData.data)
}
#endif
inline void UartWriteData::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LabNetProt.Client.UartWriteData.data)
}
inline void UartWriteData::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LabNetProt.Client.UartWriteData.data)
}
inline ::std::string* UartWriteData::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:LabNetProt.Client.UartWriteData.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UartWriteData::release_data() {
  // @@protoc_insertion_point(field_release:LabNetProt.Client.UartWriteData.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UartWriteData::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:LabNetProt.Client.UartWriteData.data)
}

// -------------------------------------------------------------------

// GpioWiringPiInit

// -------------------------------------------------------------------

// GpioWiringPiInitDigitalIn

// uint32 pin = 1;
inline void GpioWiringPiInitDigitalIn::clear_pin() {
  pin_ = 0u;
}
inline ::google::protobuf::uint32 GpioWiringPiInitDigitalIn::pin() const {
  // @@protoc_insertion_point(field_get:LabNetProt.Client.GpioWiringPiInitDigitalIn.pin)
  return pin_;
}
inline void GpioWiringPiInitDigitalIn::set_pin(::google::protobuf::uint32 value) {
  
  pin_ = value;
  // @@protoc_insertion_point(field_set:LabNetProt.Client.GpioWiringPiInitDigitalIn.pin)
}

// .LabNetProt.Client.GpioWiringPiInitDigitalIn.Resistor resistor_state = 2;
inline void GpioWiringPiInitDigitalIn::clear_resistor_state() {
  resistor_state_ = 0;
}
inline ::LabNetProt::Client::GpioWiringPiInitDigitalIn_Resistor GpioWiringPiInitDigitalIn::resistor_state() const {
  // @@protoc_insertion_point(field_get:LabNetProt.Client.GpioWiringPiInitDigitalIn.resistor_state)
  return static_cast< ::LabNetProt::Client::GpioWiringPiInitDigitalIn_Resistor >(resistor_state_);
}
inline void GpioWiringPiInitDigitalIn::set_resistor_state(::LabNetProt::Client::GpioWiringPiInitDigitalIn_Resistor value) {
  
  resistor_state_ = value;
  // @@protoc_insertion_point(field_set:LabNetProt.Client.GpioWiringPiInitDigitalIn.resistor_state)
}

// bool is_inverted = 3;
inline void GpioWiringPiInitDigitalIn::clear_is_inverted() {
  is_inverted_ = false;
}
inline bool GpioWiringPiInitDigitalIn::is_inverted() const {
  // @@protoc_insertion_point(field_get:LabNetProt.Client.GpioWiringPiInitDigitalIn.is_inverted)
  return is_inverted_;
}
inline void GpioWiringPiInitDigitalIn::set_is_inverted(bool value) {
  
  is_inverted_ = value;
  // @@protoc_insertion_point(field_set:LabNetProt.Client.GpioWiringPiInitDigitalIn.is_inverted)
}

// -------------------------------------------------------------------

// GpioWiringPiInitDigitalOut

// uint32 pin = 1;
inline void GpioWiringPiInitDigitalOut::clear_pin() {
  pin_ = 0u;
}
inline ::google::protobuf::uint32 GpioWiringPiInitDigitalOut::pin() const {
  // @@protoc_insertion_point(field_get:LabNetProt.Client.GpioWiringPiInitDigitalOut.pin)
  return pin_;
}
inline void GpioWiringPiInitDigitalOut::set_pin(::google::protobuf::uint32 value) {
  
  pin_ = value;
  // @@protoc_insertion_point(field_set:LabNetProt.Client.GpioWiringPiInitDigitalOut.pin)
}

// bool is_inverted = 2;
inline void GpioWiringPiInitDigitalOut::clear_is_inverted() {
  is_inverted_ = false;
}
inline bool GpioWiringPiInitDigitalOut::is_inverted() const {
  // @@protoc_insertion_point(field_get:LabNetProt.Client.GpioWiringPiInitDigitalOut.is_inverted)
  return is_inverted_;
}
inline void GpioWiringPiInitDigitalOut::set_is_inverted(bool value) {
  
  is_inverted_ = value;
  // @@protoc_insertion_point(field_set:LabNetProt.Client.GpioWiringPiInitDigitalOut.is_inverted)
}

// -------------------------------------------------------------------

// DigitalOutSet

// .LabNetProt.PinId id = 1;
inline bool DigitalOutSet::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::LabNetProt::PinId& DigitalOutSet::_internal_id() const {
  return *id_;
}
inline const ::LabNetProt::PinId& DigitalOutSet::id() const {
  const ::LabNetProt::PinId* p = id_;
  // @@protoc_insertion_point(field_get:LabNetProt.Client.DigitalOutSet.id)
  return p != NULL ? *p : *reinterpret_cast<const ::LabNetProt::PinId*>(
      &::LabNetProt::_PinId_default_instance_);
}
inline ::LabNetProt::PinId* DigitalOutSet::release_id() {
  // @@protoc_insertion_point(field_release:LabNetProt.Client.DigitalOutSet.id)
  
  ::LabNetProt::PinId* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::LabNetProt::PinId* DigitalOutSet::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::LabNetProt::PinId>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:LabNetProt.Client.DigitalOutSet.id)
  return id_;
}
inline void DigitalOutSet::set_allocated_id(::LabNetProt::PinId* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:LabNetProt.Client.DigitalOutSet.id)
}

// bool state = 2;
inline void DigitalOutSet::clear_state() {
  state_ = false;
}
inline bool DigitalOutSet::state() const {
  // @@protoc_insertion_point(field_get:LabNetProt.Client.DigitalOutSet.state)
  return state_;
}
inline void DigitalOutSet::set_state(bool value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:LabNetProt.Client.DigitalOutSet.state)
}

// -------------------------------------------------------------------

// DigitalOutPulse

// .LabNetProt.PinId id = 1;
inline bool DigitalOutPulse::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::LabNetProt::PinId& DigitalOutPulse::_internal_id() const {
  return *id_;
}
inline const ::LabNetProt::PinId& DigitalOutPulse::id() const {
  const ::LabNetProt::PinId* p = id_;
  // @@protoc_insertion_point(field_get:LabNetProt.Client.DigitalOutPulse.id)
  return p != NULL ? *p : *reinterpret_cast<const ::LabNetProt::PinId*>(
      &::LabNetProt::_PinId_default_instance_);
}
inline ::LabNetProt::PinId* DigitalOutPulse::release_id() {
  // @@protoc_insertion_point(field_release:LabNetProt.Client.DigitalOutPulse.id)
  
  ::LabNetProt::PinId* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::LabNetProt::PinId* DigitalOutPulse::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::LabNetProt::PinId>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:LabNetProt.Client.DigitalOutPulse.id)
  return id_;
}
inline void DigitalOutPulse::set_allocated_id(::LabNetProt::PinId* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:LabNetProt.Client.DigitalOutPulse.id)
}

// uint32 high_duration = 2;
inline void DigitalOutPulse::clear_high_duration() {
  high_duration_ = 0u;
}
inline ::google::protobuf::uint32 DigitalOutPulse::high_duration() const {
  // @@protoc_insertion_point(field_get:LabNetProt.Client.DigitalOutPulse.high_duration)
  return high_duration_;
}
inline void DigitalOutPulse::set_high_duration(::google::protobuf::uint32 value) {
  
  high_duration_ = value;
  // @@protoc_insertion_point(field_set:LabNetProt.Client.DigitalOutPulse.high_duration)
}

// uint32 low_duration = 3;
inline void DigitalOutPulse::clear_low_duration() {
  low_duration_ = 0u;
}
inline ::google::protobuf::uint32 DigitalOutPulse::low_duration() const {
  // @@protoc_insertion_point(field_get:LabNetProt.Client.DigitalOutPulse.low_duration)
  return low_duration_;
}
inline void DigitalOutPulse::set_low_duration(::google::protobuf::uint32 value) {
  
  low_duration_ = value;
  // @@protoc_insertion_point(field_set:LabNetProt.Client.DigitalOutPulse.low_duration)
}

// uint32 pulses = 4;
inline void DigitalOutPulse::clear_pulses() {
  pulses_ = 0u;
}
inline ::google::protobuf::uint32 DigitalOutPulse::pulses() const {
  // @@protoc_insertion_point(field_get:LabNetProt.Client.DigitalOutPulse.pulses)
  return pulses_;
}
inline void DigitalOutPulse::set_pulses(::google::protobuf::uint32 value) {
  
  pulses_ = value;
  // @@protoc_insertion_point(field_set:LabNetProt.Client.DigitalOutPulse.pulses)
}

// -------------------------------------------------------------------

// StartDigitalOutLoop_DigitalOutputParameter

// .LabNetProt.PinId id = 1;
inline bool StartDigitalOutLoop_DigitalOutputParameter::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::LabNetProt::PinId& StartDigitalOutLoop_DigitalOutputParameter::_internal_id() const {
  return *id_;
}
inline const ::LabNetProt::PinId& StartDigitalOutLoop_DigitalOutputParameter::id() const {
  const ::LabNetProt::PinId* p = id_;
  // @@protoc_insertion_point(field_get:LabNetProt.Client.StartDigitalOutLoop.DigitalOutputParameter.id)
  return p != NULL ? *p : *reinterpret_cast<const ::LabNetProt::PinId*>(
      &::LabNetProt::_PinId_default_instance_);
}
inline ::LabNetProt::PinId* StartDigitalOutLoop_DigitalOutputParameter::release_id() {
  // @@protoc_insertion_point(field_release:LabNetProt.Client.StartDigitalOutLoop.DigitalOutputParameter.id)
  
  ::LabNetProt::PinId* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::LabNetProt::PinId* StartDigitalOutLoop_DigitalOutputParameter::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::LabNetProt::PinId>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:LabNetProt.Client.StartDigitalOutLoop.DigitalOutputParameter.id)
  return id_;
}
inline void StartDigitalOutLoop_DigitalOutputParameter::set_allocated_id(::LabNetProt::PinId* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:LabNetProt.Client.StartDigitalOutLoop.DigitalOutputParameter.id)
}

// uint32 offset = 2;
inline void StartDigitalOutLoop_DigitalOutputParameter::clear_offset() {
  offset_ = 0u;
}
inline ::google::protobuf::uint32 StartDigitalOutLoop_DigitalOutputParameter::offset() const {
  // @@protoc_insertion_point(field_get:LabNetProt.Client.StartDigitalOutLoop.DigitalOutputParameter.offset)
  return offset_;
}
inline void StartDigitalOutLoop_DigitalOutputParameter::set_offset(::google::protobuf::uint32 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:LabNetProt.Client.StartDigitalOutLoop.DigitalOutputParameter.offset)
}

// uint32 duration = 3;
inline void StartDigitalOutLoop_DigitalOutputParameter::clear_duration() {
  duration_ = 0u;
}
inline ::google::protobuf::uint32 StartDigitalOutLoop_DigitalOutputParameter::duration() const {
  // @@protoc_insertion_point(field_get:LabNetProt.Client.StartDigitalOutLoop.DigitalOutputParameter.duration)
  return duration_;
}
inline void StartDigitalOutLoop_DigitalOutputParameter::set_duration(::google::protobuf::uint32 value) {
  
  duration_ = value;
  // @@protoc_insertion_point(field_set:LabNetProt.Client.StartDigitalOutLoop.DigitalOutputParameter.duration)
}

// -------------------------------------------------------------------

// StartDigitalOutLoop

// string loop_name = 1;
inline void StartDigitalOutLoop::clear_loop_name() {
  loop_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StartDigitalOutLoop::loop_name() const {
  // @@protoc_insertion_point(field_get:LabNetProt.Client.StartDigitalOutLoop.loop_name)
  return loop_name_.GetNoArena();
}
inline void StartDigitalOutLoop::set_loop_name(const ::std::string& value) {
  
  loop_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LabNetProt.Client.StartDigitalOutLoop.loop_name)
}
#if LANG_CXX11
inline void StartDigitalOutLoop::set_loop_name(::std::string&& value) {
  
  loop_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LabNetProt.Client.StartDigitalOutLoop.loop_name)
}
#endif
inline void StartDigitalOutLoop::set_loop_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  loop_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LabNetProt.Client.StartDigitalOutLoop.loop_name)
}
inline void StartDigitalOutLoop::set_loop_name(const char* value, size_t size) {
  
  loop_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LabNetProt.Client.StartDigitalOutLoop.loop_name)
}
inline ::std::string* StartDigitalOutLoop::mutable_loop_name() {
  
  // @@protoc_insertion_point(field_mutable:LabNetProt.Client.StartDigitalOutLoop.loop_name)
  return loop_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StartDigitalOutLoop::release_loop_name() {
  // @@protoc_insertion_point(field_release:LabNetProt.Client.StartDigitalOutLoop.loop_name)
  
  return loop_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StartDigitalOutLoop::set_allocated_loop_name(::std::string* loop_name) {
  if (loop_name != NULL) {
    
  } else {
    
  }
  loop_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), loop_name);
  // @@protoc_insertion_point(field_set_allocated:LabNetProt.Client.StartDigitalOutLoop.loop_name)
}

// uint32 loop_pause = 2;
inline void StartDigitalOutLoop::clear_loop_pause() {
  loop_pause_ = 0u;
}
inline ::google::protobuf::uint32 StartDigitalOutLoop::loop_pause() const {
  // @@protoc_insertion_point(field_get:LabNetProt.Client.StartDigitalOutLoop.loop_pause)
  return loop_pause_;
}
inline void StartDigitalOutLoop::set_loop_pause(::google::protobuf::uint32 value) {
  
  loop_pause_ = value;
  // @@protoc_insertion_point(field_set:LabNetProt.Client.StartDigitalOutLoop.loop_pause)
}

// repeated .LabNetProt.Client.StartDigitalOutLoop.DigitalOutputParameter digital_outputs = 3;
inline int StartDigitalOutLoop::digital_outputs_size() const {
  return digital_outputs_.size();
}
inline void StartDigitalOutLoop::clear_digital_outputs() {
  digital_outputs_.Clear();
}
inline ::LabNetProt::Client::StartDigitalOutLoop_DigitalOutputParameter* StartDigitalOutLoop::mutable_digital_outputs(int index) {
  // @@protoc_insertion_point(field_mutable:LabNetProt.Client.StartDigitalOutLoop.digital_outputs)
  return digital_outputs_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::LabNetProt::Client::StartDigitalOutLoop_DigitalOutputParameter >*
StartDigitalOutLoop::mutable_digital_outputs() {
  // @@protoc_insertion_point(field_mutable_list:LabNetProt.Client.StartDigitalOutLoop.digital_outputs)
  return &digital_outputs_;
}
inline const ::LabNetProt::Client::StartDigitalOutLoop_DigitalOutputParameter& StartDigitalOutLoop::digital_outputs(int index) const {
  // @@protoc_insertion_point(field_get:LabNetProt.Client.StartDigitalOutLoop.digital_outputs)
  return digital_outputs_.Get(index);
}
inline ::LabNetProt::Client::StartDigitalOutLoop_DigitalOutputParameter* StartDigitalOutLoop::add_digital_outputs() {
  // @@protoc_insertion_point(field_add:LabNetProt.Client.StartDigitalOutLoop.digital_outputs)
  return digital_outputs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::LabNetProt::Client::StartDigitalOutLoop_DigitalOutputParameter >&
StartDigitalOutLoop::digital_outputs() const {
  // @@protoc_insertion_point(field_list:LabNetProt.Client.StartDigitalOutLoop.digital_outputs)
  return digital_outputs_;
}

// -------------------------------------------------------------------

// StopDigitalOutLoop

// string loop_name = 1;
inline void StopDigitalOutLoop::clear_loop_name() {
  loop_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StopDigitalOutLoop::loop_name() const {
  // @@protoc_insertion_point(field_get:LabNetProt.Client.StopDigitalOutLoop.loop_name)
  return loop_name_.GetNoArena();
}
inline void StopDigitalOutLoop::set_loop_name(const ::std::string& value) {
  
  loop_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LabNetProt.Client.StopDigitalOutLoop.loop_name)
}
#if LANG_CXX11
inline void StopDigitalOutLoop::set_loop_name(::std::string&& value) {
  
  loop_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LabNetProt.Client.StopDigitalOutLoop.loop_name)
}
#endif
inline void StopDigitalOutLoop::set_loop_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  loop_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LabNetProt.Client.StopDigitalOutLoop.loop_name)
}
inline void StopDigitalOutLoop::set_loop_name(const char* value, size_t size) {
  
  loop_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LabNetProt.Client.StopDigitalOutLoop.loop_name)
}
inline ::std::string* StopDigitalOutLoop::mutable_loop_name() {
  
  // @@protoc_insertion_point(field_mutable:LabNetProt.Client.StopDigitalOutLoop.loop_name)
  return loop_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StopDigitalOutLoop::release_loop_name() {
  // @@protoc_insertion_point(field_release:LabNetProt.Client.StopDigitalOutLoop.loop_name)
  
  return loop_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StopDigitalOutLoop::set_allocated_loop_name(::std::string* loop_name) {
  if (loop_name != NULL) {
    
  } else {
    
  }
  loop_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), loop_name);
  // @@protoc_insertion_point(field_set_allocated:LabNetProt.Client.StopDigitalOutLoop.loop_name)
}

// -------------------------------------------------------------------

// LabNetResetRequest

// -------------------------------------------------------------------

// LabNetIdRequest

// -------------------------------------------------------------------

// ClientWrappedMessage

// .LabNetProt.Client.LabNetResetRequest reset_request = 1;
inline bool ClientWrappedMessage::has_reset_request() const {
  return client_message_case() == kResetRequest;
}
inline void ClientWrappedMessage::set_has_reset_request() {
  _oneof_case_[0] = kResetRequest;
}
inline void ClientWrappedMessage::clear_reset_request() {
  if (has_reset_request()) {
    delete client_message_.reset_request_;
    clear_has_client_message();
  }
}
inline const ::LabNetProt::Client::LabNetResetRequest& ClientWrappedMessage::_internal_reset_request() const {
  return *client_message_.reset_request_;
}
inline ::LabNetProt::Client::LabNetResetRequest* ClientWrappedMessage::release_reset_request() {
  // @@protoc_insertion_point(field_release:LabNetProt.Client.ClientWrappedMessage.reset_request)
  if (has_reset_request()) {
    clear_has_client_message();
      ::LabNetProt::Client::LabNetResetRequest* temp = client_message_.reset_request_;
    client_message_.reset_request_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::LabNetProt::Client::LabNetResetRequest& ClientWrappedMessage::reset_request() const {
  // @@protoc_insertion_point(field_get:LabNetProt.Client.ClientWrappedMessage.reset_request)
  return has_reset_request()
      ? *client_message_.reset_request_
      : *reinterpret_cast< ::LabNetProt::Client::LabNetResetRequest*>(&::LabNetProt::Client::_LabNetResetRequest_default_instance_);
}
inline ::LabNetProt::Client::LabNetResetRequest* ClientWrappedMessage::mutable_reset_request() {
  if (!has_reset_request()) {
    clear_client_message();
    set_has_reset_request();
    client_message_.reset_request_ = CreateMaybeMessage< ::LabNetProt::Client::LabNetResetRequest >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:LabNetProt.Client.ClientWrappedMessage.reset_request)
  return client_message_.reset_request_;
}

// .LabNetProt.Client.LabNetIdRequest id_request = 2;
inline bool ClientWrappedMessage::has_id_request() const {
  return client_message_case() == kIdRequest;
}
inline void ClientWrappedMessage::set_has_id_request() {
  _oneof_case_[0] = kIdRequest;
}
inline void ClientWrappedMessage::clear_id_request() {
  if (has_id_request()) {
    delete client_message_.id_request_;
    clear_has_client_message();
  }
}
inline const ::LabNetProt::Client::LabNetIdRequest& ClientWrappedMessage::_internal_id_request() const {
  return *client_message_.id_request_;
}
inline ::LabNetProt::Client::LabNetIdRequest* ClientWrappedMessage::release_id_request() {
  // @@protoc_insertion_point(field_release:LabNetProt.Client.ClientWrappedMessage.id_request)
  if (has_id_request()) {
    clear_has_client_message();
      ::LabNetProt::Client::LabNetIdRequest* temp = client_message_.id_request_;
    client_message_.id_request_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::LabNetProt::Client::LabNetIdRequest& ClientWrappedMessage::id_request() const {
  // @@protoc_insertion_point(field_get:LabNetProt.Client.ClientWrappedMessage.id_request)
  return has_id_request()
      ? *client_message_.id_request_
      : *reinterpret_cast< ::LabNetProt::Client::LabNetIdRequest*>(&::LabNetProt::Client::_LabNetIdRequest_default_instance_);
}
inline ::LabNetProt::Client::LabNetIdRequest* ClientWrappedMessage::mutable_id_request() {
  if (!has_id_request()) {
    clear_client_message();
    set_has_id_request();
    client_message_.id_request_ = CreateMaybeMessage< ::LabNetProt::Client::LabNetIdRequest >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:LabNetProt.Client.ClientWrappedMessage.id_request)
  return client_message_.id_request_;
}

// .LabNetProt.Client.IoBoardInit io_board_init = 3;
inline bool ClientWrappedMessage::has_io_board_init() const {
  return client_message_case() == kIoBoardInit;
}
inline void ClientWrappedMessage::set_has_io_board_init() {
  _oneof_case_[0] = kIoBoardInit;
}
inline void ClientWrappedMessage::clear_io_board_init() {
  if (has_io_board_init()) {
    delete client_message_.io_board_init_;
    clear_has_client_message();
  }
}
inline const ::LabNetProt::Client::IoBoardInit& ClientWrappedMessage::_internal_io_board_init() const {
  return *client_message_.io_board_init_;
}
inline ::LabNetProt::Client::IoBoardInit* ClientWrappedMessage::release_io_board_init() {
  // @@protoc_insertion_point(field_release:LabNetProt.Client.ClientWrappedMessage.io_board_init)
  if (has_io_board_init()) {
    clear_has_client_message();
      ::LabNetProt::Client::IoBoardInit* temp = client_message_.io_board_init_;
    client_message_.io_board_init_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::LabNetProt::Client::IoBoardInit& ClientWrappedMessage::io_board_init() const {
  // @@protoc_insertion_point(field_get:LabNetProt.Client.ClientWrappedMessage.io_board_init)
  return has_io_board_init()
      ? *client_message_.io_board_init_
      : *reinterpret_cast< ::LabNetProt::Client::IoBoardInit*>(&::LabNetProt::Client::_IoBoardInit_default_instance_);
}
inline ::LabNetProt::Client::IoBoardInit* ClientWrappedMessage::mutable_io_board_init() {
  if (!has_io_board_init()) {
    clear_client_message();
    set_has_io_board_init();
    client_message_.io_board_init_ = CreateMaybeMessage< ::LabNetProt::Client::IoBoardInit >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:LabNetProt.Client.ClientWrappedMessage.io_board_init)
  return client_message_.io_board_init_;
}

// .LabNetProt.Client.IoBoardInitDigitalIn io_board_init_digital_in = 4;
inline bool ClientWrappedMessage::has_io_board_init_digital_in() const {
  return client_message_case() == kIoBoardInitDigitalIn;
}
inline void ClientWrappedMessage::set_has_io_board_init_digital_in() {
  _oneof_case_[0] = kIoBoardInitDigitalIn;
}
inline void ClientWrappedMessage::clear_io_board_init_digital_in() {
  if (has_io_board_init_digital_in()) {
    delete client_message_.io_board_init_digital_in_;
    clear_has_client_message();
  }
}
inline const ::LabNetProt::Client::IoBoardInitDigitalIn& ClientWrappedMessage::_internal_io_board_init_digital_in() const {
  return *client_message_.io_board_init_digital_in_;
}
inline ::LabNetProt::Client::IoBoardInitDigitalIn* ClientWrappedMessage::release_io_board_init_digital_in() {
  // @@protoc_insertion_point(field_release:LabNetProt.Client.ClientWrappedMessage.io_board_init_digital_in)
  if (has_io_board_init_digital_in()) {
    clear_has_client_message();
      ::LabNetProt::Client::IoBoardInitDigitalIn* temp = client_message_.io_board_init_digital_in_;
    client_message_.io_board_init_digital_in_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::LabNetProt::Client::IoBoardInitDigitalIn& ClientWrappedMessage::io_board_init_digital_in() const {
  // @@protoc_insertion_point(field_get:LabNetProt.Client.ClientWrappedMessage.io_board_init_digital_in)
  return has_io_board_init_digital_in()
      ? *client_message_.io_board_init_digital_in_
      : *reinterpret_cast< ::LabNetProt::Client::IoBoardInitDigitalIn*>(&::LabNetProt::Client::_IoBoardInitDigitalIn_default_instance_);
}
inline ::LabNetProt::Client::IoBoardInitDigitalIn* ClientWrappedMessage::mutable_io_board_init_digital_in() {
  if (!has_io_board_init_digital_in()) {
    clear_client_message();
    set_has_io_board_init_digital_in();
    client_message_.io_board_init_digital_in_ = CreateMaybeMessage< ::LabNetProt::Client::IoBoardInitDigitalIn >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:LabNetProt.Client.ClientWrappedMessage.io_board_init_digital_in)
  return client_message_.io_board_init_digital_in_;
}

// .LabNetProt.Client.IoBoardInitDigitalOut io_board_init_digital_out = 5;
inline bool ClientWrappedMessage::has_io_board_init_digital_out() const {
  return client_message_case() == kIoBoardInitDigitalOut;
}
inline void ClientWrappedMessage::set_has_io_board_init_digital_out() {
  _oneof_case_[0] = kIoBoardInitDigitalOut;
}
inline void ClientWrappedMessage::clear_io_board_init_digital_out() {
  if (has_io_board_init_digital_out()) {
    delete client_message_.io_board_init_digital_out_;
    clear_has_client_message();
  }
}
inline const ::LabNetProt::Client::IoBoardInitDigitalOut& ClientWrappedMessage::_internal_io_board_init_digital_out() const {
  return *client_message_.io_board_init_digital_out_;
}
inline ::LabNetProt::Client::IoBoardInitDigitalOut* ClientWrappedMessage::release_io_board_init_digital_out() {
  // @@protoc_insertion_point(field_release:LabNetProt.Client.ClientWrappedMessage.io_board_init_digital_out)
  if (has_io_board_init_digital_out()) {
    clear_has_client_message();
      ::LabNetProt::Client::IoBoardInitDigitalOut* temp = client_message_.io_board_init_digital_out_;
    client_message_.io_board_init_digital_out_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::LabNetProt::Client::IoBoardInitDigitalOut& ClientWrappedMessage::io_board_init_digital_out() const {
  // @@protoc_insertion_point(field_get:LabNetProt.Client.ClientWrappedMessage.io_board_init_digital_out)
  return has_io_board_init_digital_out()
      ? *client_message_.io_board_init_digital_out_
      : *reinterpret_cast< ::LabNetProt::Client::IoBoardInitDigitalOut*>(&::LabNetProt::Client::_IoBoardInitDigitalOut_default_instance_);
}
inline ::LabNetProt::Client::IoBoardInitDigitalOut* ClientWrappedMessage::mutable_io_board_init_digital_out() {
  if (!has_io_board_init_digital_out()) {
    clear_client_message();
    set_has_io_board_init_digital_out();
    client_message_.io_board_init_digital_out_ = CreateMaybeMessage< ::LabNetProt::Client::IoBoardInitDigitalOut >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:LabNetProt.Client.ClientWrappedMessage.io_board_init_digital_out)
  return client_message_.io_board_init_digital_out_;
}

// .LabNetProt.Client.RfidBoardInit rfid_board_init = 6;
inline bool ClientWrappedMessage::has_rfid_board_init() const {
  return client_message_case() == kRfidBoardInit;
}
inline void ClientWrappedMessage::set_has_rfid_board_init() {
  _oneof_case_[0] = kRfidBoardInit;
}
inline void ClientWrappedMessage::clear_rfid_board_init() {
  if (has_rfid_board_init()) {
    delete client_message_.rfid_board_init_;
    clear_has_client_message();
  }
}
inline const ::LabNetProt::Client::RfidBoardInit& ClientWrappedMessage::_internal_rfid_board_init() const {
  return *client_message_.rfid_board_init_;
}
inline ::LabNetProt::Client::RfidBoardInit* ClientWrappedMessage::release_rfid_board_init() {
  // @@protoc_insertion_point(field_release:LabNetProt.Client.ClientWrappedMessage.rfid_board_init)
  if (has_rfid_board_init()) {
    clear_has_client_message();
      ::LabNetProt::Client::RfidBoardInit* temp = client_message_.rfid_board_init_;
    client_message_.rfid_board_init_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::LabNetProt::Client::RfidBoardInit& ClientWrappedMessage::rfid_board_init() const {
  // @@protoc_insertion_point(field_get:LabNetProt.Client.ClientWrappedMessage.rfid_board_init)
  return has_rfid_board_init()
      ? *client_message_.rfid_board_init_
      : *reinterpret_cast< ::LabNetProt::Client::RfidBoardInit*>(&::LabNetProt::Client::_RfidBoardInit_default_instance_);
}
inline ::LabNetProt::Client::RfidBoardInit* ClientWrappedMessage::mutable_rfid_board_init() {
  if (!has_rfid_board_init()) {
    clear_client_message();
    set_has_rfid_board_init();
    client_message_.rfid_board_init_ = CreateMaybeMessage< ::LabNetProt::Client::RfidBoardInit >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:LabNetProt.Client.ClientWrappedMessage.rfid_board_init)
  return client_message_.rfid_board_init_;
}

// .LabNetProt.Client.RfidBoardSetPhaseMatrix rfid_board_set_phase_matrix = 7;
inline bool ClientWrappedMessage::has_rfid_board_set_phase_matrix() const {
  return client_message_case() == kRfidBoardSetPhaseMatrix;
}
inline void ClientWrappedMessage::set_has_rfid_board_set_phase_matrix() {
  _oneof_case_[0] = kRfidBoardSetPhaseMatrix;
}
inline void ClientWrappedMessage::clear_rfid_board_set_phase_matrix() {
  if (has_rfid_board_set_phase_matrix()) {
    delete client_message_.rfid_board_set_phase_matrix_;
    clear_has_client_message();
  }
}
inline const ::LabNetProt::Client::RfidBoardSetPhaseMatrix& ClientWrappedMessage::_internal_rfid_board_set_phase_matrix() const {
  return *client_message_.rfid_board_set_phase_matrix_;
}
inline ::LabNetProt::Client::RfidBoardSetPhaseMatrix* ClientWrappedMessage::release_rfid_board_set_phase_matrix() {
  // @@protoc_insertion_point(field_release:LabNetProt.Client.ClientWrappedMessage.rfid_board_set_phase_matrix)
  if (has_rfid_board_set_phase_matrix()) {
    clear_has_client_message();
      ::LabNetProt::Client::RfidBoardSetPhaseMatrix* temp = client_message_.rfid_board_set_phase_matrix_;
    client_message_.rfid_board_set_phase_matrix_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::LabNetProt::Client::RfidBoardSetPhaseMatrix& ClientWrappedMessage::rfid_board_set_phase_matrix() const {
  // @@protoc_insertion_point(field_get:LabNetProt.Client.ClientWrappedMessage.rfid_board_set_phase_matrix)
  return has_rfid_board_set_phase_matrix()
      ? *client_message_.rfid_board_set_phase_matrix_
      : *reinterpret_cast< ::LabNetProt::Client::RfidBoardSetPhaseMatrix*>(&::LabNetProt::Client::_RfidBoardSetPhaseMatrix_default_instance_);
}
inline ::LabNetProt::Client::RfidBoardSetPhaseMatrix* ClientWrappedMessage::mutable_rfid_board_set_phase_matrix() {
  if (!has_rfid_board_set_phase_matrix()) {
    clear_client_message();
    set_has_rfid_board_set_phase_matrix();
    client_message_.rfid_board_set_phase_matrix_ = CreateMaybeMessage< ::LabNetProt::Client::RfidBoardSetPhaseMatrix >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:LabNetProt.Client.ClientWrappedMessage.rfid_board_set_phase_matrix)
  return client_message_.rfid_board_set_phase_matrix_;
}

// .LabNetProt.Client.RfidBoardSetSignalInversion rfid_board_set_signal_inversion = 8;
inline bool ClientWrappedMessage::has_rfid_board_set_signal_inversion() const {
  return client_message_case() == kRfidBoardSetSignalInversion;
}
inline void ClientWrappedMessage::set_has_rfid_board_set_signal_inversion() {
  _oneof_case_[0] = kRfidBoardSetSignalInversion;
}
inline void ClientWrappedMessage::clear_rfid_board_set_signal_inversion() {
  if (has_rfid_board_set_signal_inversion()) {
    delete client_message_.rfid_board_set_signal_inversion_;
    clear_has_client_message();
  }
}
inline const ::LabNetProt::Client::RfidBoardSetSignalInversion& ClientWrappedMessage::_internal_rfid_board_set_signal_inversion() const {
  return *client_message_.rfid_board_set_signal_inversion_;
}
inline ::LabNetProt::Client::RfidBoardSetSignalInversion* ClientWrappedMessage::release_rfid_board_set_signal_inversion() {
  // @@protoc_insertion_point(field_release:LabNetProt.Client.ClientWrappedMessage.rfid_board_set_signal_inversion)
  if (has_rfid_board_set_signal_inversion()) {
    clear_has_client_message();
      ::LabNetProt::Client::RfidBoardSetSignalInversion* temp = client_message_.rfid_board_set_signal_inversion_;
    client_message_.rfid_board_set_signal_inversion_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::LabNetProt::Client::RfidBoardSetSignalInversion& ClientWrappedMessage::rfid_board_set_signal_inversion() const {
  // @@protoc_insertion_point(field_get:LabNetProt.Client.ClientWrappedMessage.rfid_board_set_signal_inversion)
  return has_rfid_board_set_signal_inversion()
      ? *client_message_.rfid_board_set_signal_inversion_
      : *reinterpret_cast< ::LabNetProt::Client::RfidBoardSetSignalInversion*>(&::LabNetProt::Client::_RfidBoardSetSignalInversion_default_instance_);
}
inline ::LabNetProt::Client::RfidBoardSetSignalInversion* ClientWrappedMessage::mutable_rfid_board_set_signal_inversion() {
  if (!has_rfid_board_set_signal_inversion()) {
    clear_client_message();
    set_has_rfid_board_set_signal_inversion();
    client_message_.rfid_board_set_signal_inversion_ = CreateMaybeMessage< ::LabNetProt::Client::RfidBoardSetSignalInversion >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:LabNetProt.Client.ClientWrappedMessage.rfid_board_set_signal_inversion)
  return client_message_.rfid_board_set_signal_inversion_;
}

// .LabNetProt.Client.UartInit uart_init = 9;
inline bool ClientWrappedMessage::has_uart_init() const {
  return client_message_case() == kUartInit;
}
inline void ClientWrappedMessage::set_has_uart_init() {
  _oneof_case_[0] = kUartInit;
}
inline void ClientWrappedMessage::clear_uart_init() {
  if (has_uart_init()) {
    delete client_message_.uart_init_;
    clear_has_client_message();
  }
}
inline const ::LabNetProt::Client::UartInit& ClientWrappedMessage::_internal_uart_init() const {
  return *client_message_.uart_init_;
}
inline ::LabNetProt::Client::UartInit* ClientWrappedMessage::release_uart_init() {
  // @@protoc_insertion_point(field_release:LabNetProt.Client.ClientWrappedMessage.uart_init)
  if (has_uart_init()) {
    clear_has_client_message();
      ::LabNetProt::Client::UartInit* temp = client_message_.uart_init_;
    client_message_.uart_init_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::LabNetProt::Client::UartInit& ClientWrappedMessage::uart_init() const {
  // @@protoc_insertion_point(field_get:LabNetProt.Client.ClientWrappedMessage.uart_init)
  return has_uart_init()
      ? *client_message_.uart_init_
      : *reinterpret_cast< ::LabNetProt::Client::UartInit*>(&::LabNetProt::Client::_UartInit_default_instance_);
}
inline ::LabNetProt::Client::UartInit* ClientWrappedMessage::mutable_uart_init() {
  if (!has_uart_init()) {
    clear_client_message();
    set_has_uart_init();
    client_message_.uart_init_ = CreateMaybeMessage< ::LabNetProt::Client::UartInit >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:LabNetProt.Client.ClientWrappedMessage.uart_init)
  return client_message_.uart_init_;
}

// .LabNetProt.Client.UartWriteData uart_write_data = 10;
inline bool ClientWrappedMessage::has_uart_write_data() const {
  return client_message_case() == kUartWriteData;
}
inline void ClientWrappedMessage::set_has_uart_write_data() {
  _oneof_case_[0] = kUartWriteData;
}
inline void ClientWrappedMessage::clear_uart_write_data() {
  if (has_uart_write_data()) {
    delete client_message_.uart_write_data_;
    clear_has_client_message();
  }
}
inline const ::LabNetProt::Client::UartWriteData& ClientWrappedMessage::_internal_uart_write_data() const {
  return *client_message_.uart_write_data_;
}
inline ::LabNetProt::Client::UartWriteData* ClientWrappedMessage::release_uart_write_data() {
  // @@protoc_insertion_point(field_release:LabNetProt.Client.ClientWrappedMessage.uart_write_data)
  if (has_uart_write_data()) {
    clear_has_client_message();
      ::LabNetProt::Client::UartWriteData* temp = client_message_.uart_write_data_;
    client_message_.uart_write_data_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::LabNetProt::Client::UartWriteData& ClientWrappedMessage::uart_write_data() const {
  // @@protoc_insertion_point(field_get:LabNetProt.Client.ClientWrappedMessage.uart_write_data)
  return has_uart_write_data()
      ? *client_message_.uart_write_data_
      : *reinterpret_cast< ::LabNetProt::Client::UartWriteData*>(&::LabNetProt::Client::_UartWriteData_default_instance_);
}
inline ::LabNetProt::Client::UartWriteData* ClientWrappedMessage::mutable_uart_write_data() {
  if (!has_uart_write_data()) {
    clear_client_message();
    set_has_uart_write_data();
    client_message_.uart_write_data_ = CreateMaybeMessage< ::LabNetProt::Client::UartWriteData >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:LabNetProt.Client.ClientWrappedMessage.uart_write_data)
  return client_message_.uart_write_data_;
}

// .LabNetProt.Client.DigitalOutSet digital_out_set = 11;
inline bool ClientWrappedMessage::has_digital_out_set() const {
  return client_message_case() == kDigitalOutSet;
}
inline void ClientWrappedMessage::set_has_digital_out_set() {
  _oneof_case_[0] = kDigitalOutSet;
}
inline void ClientWrappedMessage::clear_digital_out_set() {
  if (has_digital_out_set()) {
    delete client_message_.digital_out_set_;
    clear_has_client_message();
  }
}
inline const ::LabNetProt::Client::DigitalOutSet& ClientWrappedMessage::_internal_digital_out_set() const {
  return *client_message_.digital_out_set_;
}
inline ::LabNetProt::Client::DigitalOutSet* ClientWrappedMessage::release_digital_out_set() {
  // @@protoc_insertion_point(field_release:LabNetProt.Client.ClientWrappedMessage.digital_out_set)
  if (has_digital_out_set()) {
    clear_has_client_message();
      ::LabNetProt::Client::DigitalOutSet* temp = client_message_.digital_out_set_;
    client_message_.digital_out_set_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::LabNetProt::Client::DigitalOutSet& ClientWrappedMessage::digital_out_set() const {
  // @@protoc_insertion_point(field_get:LabNetProt.Client.ClientWrappedMessage.digital_out_set)
  return has_digital_out_set()
      ? *client_message_.digital_out_set_
      : *reinterpret_cast< ::LabNetProt::Client::DigitalOutSet*>(&::LabNetProt::Client::_DigitalOutSet_default_instance_);
}
inline ::LabNetProt::Client::DigitalOutSet* ClientWrappedMessage::mutable_digital_out_set() {
  if (!has_digital_out_set()) {
    clear_client_message();
    set_has_digital_out_set();
    client_message_.digital_out_set_ = CreateMaybeMessage< ::LabNetProt::Client::DigitalOutSet >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:LabNetProt.Client.ClientWrappedMessage.digital_out_set)
  return client_message_.digital_out_set_;
}

// .LabNetProt.Client.DigitalOutPulse digital_out_pulse = 12;
inline bool ClientWrappedMessage::has_digital_out_pulse() const {
  return client_message_case() == kDigitalOutPulse;
}
inline void ClientWrappedMessage::set_has_digital_out_pulse() {
  _oneof_case_[0] = kDigitalOutPulse;
}
inline void ClientWrappedMessage::clear_digital_out_pulse() {
  if (has_digital_out_pulse()) {
    delete client_message_.digital_out_pulse_;
    clear_has_client_message();
  }
}
inline const ::LabNetProt::Client::DigitalOutPulse& ClientWrappedMessage::_internal_digital_out_pulse() const {
  return *client_message_.digital_out_pulse_;
}
inline ::LabNetProt::Client::DigitalOutPulse* ClientWrappedMessage::release_digital_out_pulse() {
  // @@protoc_insertion_point(field_release:LabNetProt.Client.ClientWrappedMessage.digital_out_pulse)
  if (has_digital_out_pulse()) {
    clear_has_client_message();
      ::LabNetProt::Client::DigitalOutPulse* temp = client_message_.digital_out_pulse_;
    client_message_.digital_out_pulse_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::LabNetProt::Client::DigitalOutPulse& ClientWrappedMessage::digital_out_pulse() const {
  // @@protoc_insertion_point(field_get:LabNetProt.Client.ClientWrappedMessage.digital_out_pulse)
  return has_digital_out_pulse()
      ? *client_message_.digital_out_pulse_
      : *reinterpret_cast< ::LabNetProt::Client::DigitalOutPulse*>(&::LabNetProt::Client::_DigitalOutPulse_default_instance_);
}
inline ::LabNetProt::Client::DigitalOutPulse* ClientWrappedMessage::mutable_digital_out_pulse() {
  if (!has_digital_out_pulse()) {
    clear_client_message();
    set_has_digital_out_pulse();
    client_message_.digital_out_pulse_ = CreateMaybeMessage< ::LabNetProt::Client::DigitalOutPulse >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:LabNetProt.Client.ClientWrappedMessage.digital_out_pulse)
  return client_message_.digital_out_pulse_;
}

// .LabNetProt.Client.StartDigitalOutLoop start_digital_out_loop = 13;
inline bool ClientWrappedMessage::has_start_digital_out_loop() const {
  return client_message_case() == kStartDigitalOutLoop;
}
inline void ClientWrappedMessage::set_has_start_digital_out_loop() {
  _oneof_case_[0] = kStartDigitalOutLoop;
}
inline void ClientWrappedMessage::clear_start_digital_out_loop() {
  if (has_start_digital_out_loop()) {
    delete client_message_.start_digital_out_loop_;
    clear_has_client_message();
  }
}
inline const ::LabNetProt::Client::StartDigitalOutLoop& ClientWrappedMessage::_internal_start_digital_out_loop() const {
  return *client_message_.start_digital_out_loop_;
}
inline ::LabNetProt::Client::StartDigitalOutLoop* ClientWrappedMessage::release_start_digital_out_loop() {
  // @@protoc_insertion_point(field_release:LabNetProt.Client.ClientWrappedMessage.start_digital_out_loop)
  if (has_start_digital_out_loop()) {
    clear_has_client_message();
      ::LabNetProt::Client::StartDigitalOutLoop* temp = client_message_.start_digital_out_loop_;
    client_message_.start_digital_out_loop_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::LabNetProt::Client::StartDigitalOutLoop& ClientWrappedMessage::start_digital_out_loop() const {
  // @@protoc_insertion_point(field_get:LabNetProt.Client.ClientWrappedMessage.start_digital_out_loop)
  return has_start_digital_out_loop()
      ? *client_message_.start_digital_out_loop_
      : *reinterpret_cast< ::LabNetProt::Client::StartDigitalOutLoop*>(&::LabNetProt::Client::_StartDigitalOutLoop_default_instance_);
}
inline ::LabNetProt::Client::StartDigitalOutLoop* ClientWrappedMessage::mutable_start_digital_out_loop() {
  if (!has_start_digital_out_loop()) {
    clear_client_message();
    set_has_start_digital_out_loop();
    client_message_.start_digital_out_loop_ = CreateMaybeMessage< ::LabNetProt::Client::StartDigitalOutLoop >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:LabNetProt.Client.ClientWrappedMessage.start_digital_out_loop)
  return client_message_.start_digital_out_loop_;
}

// .LabNetProt.Client.StopDigitalOutLoop stop_digital_out_loop = 14;
inline bool ClientWrappedMessage::has_stop_digital_out_loop() const {
  return client_message_case() == kStopDigitalOutLoop;
}
inline void ClientWrappedMessage::set_has_stop_digital_out_loop() {
  _oneof_case_[0] = kStopDigitalOutLoop;
}
inline void ClientWrappedMessage::clear_stop_digital_out_loop() {
  if (has_stop_digital_out_loop()) {
    delete client_message_.stop_digital_out_loop_;
    clear_has_client_message();
  }
}
inline const ::LabNetProt::Client::StopDigitalOutLoop& ClientWrappedMessage::_internal_stop_digital_out_loop() const {
  return *client_message_.stop_digital_out_loop_;
}
inline ::LabNetProt::Client::StopDigitalOutLoop* ClientWrappedMessage::release_stop_digital_out_loop() {
  // @@protoc_insertion_point(field_release:LabNetProt.Client.ClientWrappedMessage.stop_digital_out_loop)
  if (has_stop_digital_out_loop()) {
    clear_has_client_message();
      ::LabNetProt::Client::StopDigitalOutLoop* temp = client_message_.stop_digital_out_loop_;
    client_message_.stop_digital_out_loop_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::LabNetProt::Client::StopDigitalOutLoop& ClientWrappedMessage::stop_digital_out_loop() const {
  // @@protoc_insertion_point(field_get:LabNetProt.Client.ClientWrappedMessage.stop_digital_out_loop)
  return has_stop_digital_out_loop()
      ? *client_message_.stop_digital_out_loop_
      : *reinterpret_cast< ::LabNetProt::Client::StopDigitalOutLoop*>(&::LabNetProt::Client::_StopDigitalOutLoop_default_instance_);
}
inline ::LabNetProt::Client::StopDigitalOutLoop* ClientWrappedMessage::mutable_stop_digital_out_loop() {
  if (!has_stop_digital_out_loop()) {
    clear_client_message();
    set_has_stop_digital_out_loop();
    client_message_.stop_digital_out_loop_ = CreateMaybeMessage< ::LabNetProt::Client::StopDigitalOutLoop >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:LabNetProt.Client.ClientWrappedMessage.stop_digital_out_loop)
  return client_message_.stop_digital_out_loop_;
}

// .LabNetProt.Client.GpioWiringPiInit gpio_wiring_pi_init = 15;
inline bool ClientWrappedMessage::has_gpio_wiring_pi_init() const {
  return client_message_case() == kGpioWiringPiInit;
}
inline void ClientWrappedMessage::set_has_gpio_wiring_pi_init() {
  _oneof_case_[0] = kGpioWiringPiInit;
}
inline void ClientWrappedMessage::clear_gpio_wiring_pi_init() {
  if (has_gpio_wiring_pi_init()) {
    delete client_message_.gpio_wiring_pi_init_;
    clear_has_client_message();
  }
}
inline const ::LabNetProt::Client::GpioWiringPiInit& ClientWrappedMessage::_internal_gpio_wiring_pi_init() const {
  return *client_message_.gpio_wiring_pi_init_;
}
inline ::LabNetProt::Client::GpioWiringPiInit* ClientWrappedMessage::release_gpio_wiring_pi_init() {
  // @@protoc_insertion_point(field_release:LabNetProt.Client.ClientWrappedMessage.gpio_wiring_pi_init)
  if (has_gpio_wiring_pi_init()) {
    clear_has_client_message();
      ::LabNetProt::Client::GpioWiringPiInit* temp = client_message_.gpio_wiring_pi_init_;
    client_message_.gpio_wiring_pi_init_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::LabNetProt::Client::GpioWiringPiInit& ClientWrappedMessage::gpio_wiring_pi_init() const {
  // @@protoc_insertion_point(field_get:LabNetProt.Client.ClientWrappedMessage.gpio_wiring_pi_init)
  return has_gpio_wiring_pi_init()
      ? *client_message_.gpio_wiring_pi_init_
      : *reinterpret_cast< ::LabNetProt::Client::GpioWiringPiInit*>(&::LabNetProt::Client::_GpioWiringPiInit_default_instance_);
}
inline ::LabNetProt::Client::GpioWiringPiInit* ClientWrappedMessage::mutable_gpio_wiring_pi_init() {
  if (!has_gpio_wiring_pi_init()) {
    clear_client_message();
    set_has_gpio_wiring_pi_init();
    client_message_.gpio_wiring_pi_init_ = CreateMaybeMessage< ::LabNetProt::Client::GpioWiringPiInit >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:LabNetProt.Client.ClientWrappedMessage.gpio_wiring_pi_init)
  return client_message_.gpio_wiring_pi_init_;
}

// .LabNetProt.Client.GpioWiringPiInitDigitalIn gpio_wiring_pi_init_digital_in = 16;
inline bool ClientWrappedMessage::has_gpio_wiring_pi_init_digital_in() const {
  return client_message_case() == kGpioWiringPiInitDigitalIn;
}
inline void ClientWrappedMessage::set_has_gpio_wiring_pi_init_digital_in() {
  _oneof_case_[0] = kGpioWiringPiInitDigitalIn;
}
inline void ClientWrappedMessage::clear_gpio_wiring_pi_init_digital_in() {
  if (has_gpio_wiring_pi_init_digital_in()) {
    delete client_message_.gpio_wiring_pi_init_digital_in_;
    clear_has_client_message();
  }
}
inline const ::LabNetProt::Client::GpioWiringPiInitDigitalIn& ClientWrappedMessage::_internal_gpio_wiring_pi_init_digital_in() const {
  return *client_message_.gpio_wiring_pi_init_digital_in_;
}
inline ::LabNetProt::Client::GpioWiringPiInitDigitalIn* ClientWrappedMessage::release_gpio_wiring_pi_init_digital_in() {
  // @@protoc_insertion_point(field_release:LabNetProt.Client.ClientWrappedMessage.gpio_wiring_pi_init_digital_in)
  if (has_gpio_wiring_pi_init_digital_in()) {
    clear_has_client_message();
      ::LabNetProt::Client::GpioWiringPiInitDigitalIn* temp = client_message_.gpio_wiring_pi_init_digital_in_;
    client_message_.gpio_wiring_pi_init_digital_in_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::LabNetProt::Client::GpioWiringPiInitDigitalIn& ClientWrappedMessage::gpio_wiring_pi_init_digital_in() const {
  // @@protoc_insertion_point(field_get:LabNetProt.Client.ClientWrappedMessage.gpio_wiring_pi_init_digital_in)
  return has_gpio_wiring_pi_init_digital_in()
      ? *client_message_.gpio_wiring_pi_init_digital_in_
      : *reinterpret_cast< ::LabNetProt::Client::GpioWiringPiInitDigitalIn*>(&::LabNetProt::Client::_GpioWiringPiInitDigitalIn_default_instance_);
}
inline ::LabNetProt::Client::GpioWiringPiInitDigitalIn* ClientWrappedMessage::mutable_gpio_wiring_pi_init_digital_in() {
  if (!has_gpio_wiring_pi_init_digital_in()) {
    clear_client_message();
    set_has_gpio_wiring_pi_init_digital_in();
    client_message_.gpio_wiring_pi_init_digital_in_ = CreateMaybeMessage< ::LabNetProt::Client::GpioWiringPiInitDigitalIn >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:LabNetProt.Client.ClientWrappedMessage.gpio_wiring_pi_init_digital_in)
  return client_message_.gpio_wiring_pi_init_digital_in_;
}

// .LabNetProt.Client.GpioWiringPiInitDigitalOut gpio_wiring_pi_init_digital_out = 17;
inline bool ClientWrappedMessage::has_gpio_wiring_pi_init_digital_out() const {
  return client_message_case() == kGpioWiringPiInitDigitalOut;
}
inline void ClientWrappedMessage::set_has_gpio_wiring_pi_init_digital_out() {
  _oneof_case_[0] = kGpioWiringPiInitDigitalOut;
}
inline void ClientWrappedMessage::clear_gpio_wiring_pi_init_digital_out() {
  if (has_gpio_wiring_pi_init_digital_out()) {
    delete client_message_.gpio_wiring_pi_init_digital_out_;
    clear_has_client_message();
  }
}
inline const ::LabNetProt::Client::GpioWiringPiInitDigitalOut& ClientWrappedMessage::_internal_gpio_wiring_pi_init_digital_out() const {
  return *client_message_.gpio_wiring_pi_init_digital_out_;
}
inline ::LabNetProt::Client::GpioWiringPiInitDigitalOut* ClientWrappedMessage::release_gpio_wiring_pi_init_digital_out() {
  // @@protoc_insertion_point(field_release:LabNetProt.Client.ClientWrappedMessage.gpio_wiring_pi_init_digital_out)
  if (has_gpio_wiring_pi_init_digital_out()) {
    clear_has_client_message();
      ::LabNetProt::Client::GpioWiringPiInitDigitalOut* temp = client_message_.gpio_wiring_pi_init_digital_out_;
    client_message_.gpio_wiring_pi_init_digital_out_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::LabNetProt::Client::GpioWiringPiInitDigitalOut& ClientWrappedMessage::gpio_wiring_pi_init_digital_out() const {
  // @@protoc_insertion_point(field_get:LabNetProt.Client.ClientWrappedMessage.gpio_wiring_pi_init_digital_out)
  return has_gpio_wiring_pi_init_digital_out()
      ? *client_message_.gpio_wiring_pi_init_digital_out_
      : *reinterpret_cast< ::LabNetProt::Client::GpioWiringPiInitDigitalOut*>(&::LabNetProt::Client::_GpioWiringPiInitDigitalOut_default_instance_);
}
inline ::LabNetProt::Client::GpioWiringPiInitDigitalOut* ClientWrappedMessage::mutable_gpio_wiring_pi_init_digital_out() {
  if (!has_gpio_wiring_pi_init_digital_out()) {
    clear_client_message();
    set_has_gpio_wiring_pi_init_digital_out();
    client_message_.gpio_wiring_pi_init_digital_out_ = CreateMaybeMessage< ::LabNetProt::Client::GpioWiringPiInitDigitalOut >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:LabNetProt.Client.ClientWrappedMessage.gpio_wiring_pi_init_digital_out)
  return client_message_.gpio_wiring_pi_init_digital_out_;
}

inline bool ClientWrappedMessage::has_client_message() const {
  return client_message_case() != CLIENT_MESSAGE_NOT_SET;
}
inline void ClientWrappedMessage::clear_has_client_message() {
  _oneof_case_[0] = CLIENT_MESSAGE_NOT_SET;
}
inline ClientWrappedMessage::ClientMessageCase ClientWrappedMessage::client_message_case() const {
  return ClientWrappedMessage::ClientMessageCase(_oneof_case_[0]);
}
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Client
}  // namespace LabNetProt

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::LabNetProt::Client::IoBoardInitDigitalIn_Resistor> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::LabNetProt::Client::IoBoardInitDigitalIn_Resistor>() {
  return ::LabNetProt::Client::IoBoardInitDigitalIn_Resistor_descriptor();
}
template <> struct is_proto_enum< ::LabNetProt::Client::GpioWiringPiInitDigitalIn_Resistor> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::LabNetProt::Client::GpioWiringPiInitDigitalIn_Resistor>() {
  return ::LabNetProt::Client::GpioWiringPiInitDigitalIn_Resistor_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_LabNetClient_2eproto
