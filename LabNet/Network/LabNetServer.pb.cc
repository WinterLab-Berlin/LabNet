// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: LabNetServer.proto

#include "LabNetServer.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_LabNetServer_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_LabNetServer_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DigitalInInitResult;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_LabNetServer_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DigitalOutInitResult;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_LabNetServer_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DigitalOutLoopStartResult;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_LabNetServer_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DigitalOutLoopStopped;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_LabNetServer_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_InterfaceInitResult;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_LabNetServer_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_InterfaceLost;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_LabNetServer_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_InterfaceReconnected;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_LabNetServer_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LabNetIdReply;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_LabNetServer_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LabNetResetReply;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_LabNetServer_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_OnlyOneConnectionAllowed;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_LabNetServer_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_DataWriteComplete;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_LabNetServer_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_DigitalInState;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_LabNetServer_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_DigitalOutState;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_LabNetServer_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_NewByteData;
}  // namespace protobuf_LabNetServer_2eproto
namespace protobuf_LabNet_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_LabNet_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PinId;
}  // namespace protobuf_LabNet_2eproto
namespace protobuf_google_2fprotobuf_2ftimestamp_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftimestamp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Timestamp;
}  // namespace protobuf_google_2fprotobuf_2ftimestamp_2eproto
namespace LabNetProt {
namespace Server {
class DigitalOutStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DigitalOutState>
      _instance;
} _DigitalOutState_default_instance_;
class DigitalInStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DigitalInState>
      _instance;
} _DigitalInState_default_instance_;
class NewByteDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NewByteData>
      _instance;
} _NewByteData_default_instance_;
class DataWriteCompleteDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DataWriteComplete>
      _instance;
} _DataWriteComplete_default_instance_;
class InterfaceInitResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InterfaceInitResult>
      _instance;
} _InterfaceInitResult_default_instance_;
class InterfaceLostDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InterfaceLost>
      _instance;
} _InterfaceLost_default_instance_;
class InterfaceReconnectedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InterfaceReconnected>
      _instance;
} _InterfaceReconnected_default_instance_;
class DigitalInInitResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DigitalInInitResult>
      _instance;
} _DigitalInInitResult_default_instance_;
class DigitalOutInitResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DigitalOutInitResult>
      _instance;
} _DigitalOutInitResult_default_instance_;
class OnlyOneConnectionAllowedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OnlyOneConnectionAllowed>
      _instance;
} _OnlyOneConnectionAllowed_default_instance_;
class LabNetResetReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LabNetResetReply>
      _instance;
} _LabNetResetReply_default_instance_;
class LabNetIdReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LabNetIdReply>
      _instance;
} _LabNetIdReply_default_instance_;
class DigitalOutLoopStartResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DigitalOutLoopStartResult>
      _instance;
} _DigitalOutLoopStartResult_default_instance_;
class DigitalOutLoopStoppedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DigitalOutLoopStopped>
      _instance;
} _DigitalOutLoopStopped_default_instance_;
class ServerWrappedMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServerWrappedMessage>
      _instance;
  const ::LabNetProt::Server::DigitalOutState* digital_out_state_;
  const ::LabNetProt::Server::DigitalInState* digital_in_state_;
  const ::LabNetProt::Server::NewByteData* new_byte_data_;
  const ::LabNetProt::Server::DataWriteComplete* data_write_complete_;
  const ::LabNetProt::Server::InterfaceInitResult* interface_init_result_;
  const ::LabNetProt::Server::DigitalInInitResult* digital_in_init_result_;
  const ::LabNetProt::Server::DigitalOutInitResult* digital_out_init_result_;
  const ::LabNetProt::Server::OnlyOneConnectionAllowed* only_one_connection_allowed_;
  const ::LabNetProt::Server::LabNetResetReply* reset_;
  const ::LabNetProt::Server::LabNetIdReply* id_;
  const ::LabNetProt::Server::InterfaceLost* interface_lost_;
  const ::LabNetProt::Server::InterfaceReconnected* interface_reconnected_;
  const ::LabNetProt::Server::DigitalOutLoopStartResult* digital_out_loop_start_result_;
  const ::LabNetProt::Server::DigitalOutLoopStopped* digital_out_loop_stopped_;
} _ServerWrappedMessage_default_instance_;
}  // namespace Server
}  // namespace LabNetProt
namespace protobuf_LabNetServer_2eproto {
static void InitDefaultsDigitalOutState() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::LabNetProt::Server::_DigitalOutState_default_instance_;
    new (ptr) ::LabNetProt::Server::DigitalOutState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LabNetProt::Server::DigitalOutState::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_DigitalOutState =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsDigitalOutState}, {
      &protobuf_LabNet_2eproto::scc_info_PinId.base,
      &protobuf_google_2fprotobuf_2ftimestamp_2eproto::scc_info_Timestamp.base,}};

static void InitDefaultsDigitalInState() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::LabNetProt::Server::_DigitalInState_default_instance_;
    new (ptr) ::LabNetProt::Server::DigitalInState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LabNetProt::Server::DigitalInState::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_DigitalInState =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsDigitalInState}, {
      &protobuf_LabNet_2eproto::scc_info_PinId.base,
      &protobuf_google_2fprotobuf_2ftimestamp_2eproto::scc_info_Timestamp.base,}};

static void InitDefaultsNewByteData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::LabNetProt::Server::_NewByteData_default_instance_;
    new (ptr) ::LabNetProt::Server::NewByteData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LabNetProt::Server::NewByteData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_NewByteData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsNewByteData}, {
      &protobuf_LabNet_2eproto::scc_info_PinId.base,
      &protobuf_google_2fprotobuf_2ftimestamp_2eproto::scc_info_Timestamp.base,}};

static void InitDefaultsDataWriteComplete() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::LabNetProt::Server::_DataWriteComplete_default_instance_;
    new (ptr) ::LabNetProt::Server::DataWriteComplete();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LabNetProt::Server::DataWriteComplete::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DataWriteComplete =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDataWriteComplete}, {
      &protobuf_LabNet_2eproto::scc_info_PinId.base,}};

static void InitDefaultsInterfaceInitResult() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::LabNetProt::Server::_InterfaceInitResult_default_instance_;
    new (ptr) ::LabNetProt::Server::InterfaceInitResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LabNetProt::Server::InterfaceInitResult::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_InterfaceInitResult =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsInterfaceInitResult}, {}};

static void InitDefaultsInterfaceLost() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::LabNetProt::Server::_InterfaceLost_default_instance_;
    new (ptr) ::LabNetProt::Server::InterfaceLost();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LabNetProt::Server::InterfaceLost::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_InterfaceLost =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsInterfaceLost}, {}};

static void InitDefaultsInterfaceReconnected() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::LabNetProt::Server::_InterfaceReconnected_default_instance_;
    new (ptr) ::LabNetProt::Server::InterfaceReconnected();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LabNetProt::Server::InterfaceReconnected::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_InterfaceReconnected =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsInterfaceReconnected}, {}};

static void InitDefaultsDigitalInInitResult() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::LabNetProt::Server::_DigitalInInitResult_default_instance_;
    new (ptr) ::LabNetProt::Server::DigitalInInitResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LabNetProt::Server::DigitalInInitResult::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DigitalInInitResult =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDigitalInInitResult}, {}};

static void InitDefaultsDigitalOutInitResult() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::LabNetProt::Server::_DigitalOutInitResult_default_instance_;
    new (ptr) ::LabNetProt::Server::DigitalOutInitResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LabNetProt::Server::DigitalOutInitResult::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DigitalOutInitResult =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDigitalOutInitResult}, {}};

static void InitDefaultsOnlyOneConnectionAllowed() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::LabNetProt::Server::_OnlyOneConnectionAllowed_default_instance_;
    new (ptr) ::LabNetProt::Server::OnlyOneConnectionAllowed();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LabNetProt::Server::OnlyOneConnectionAllowed::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OnlyOneConnectionAllowed =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOnlyOneConnectionAllowed}, {}};

static void InitDefaultsLabNetResetReply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::LabNetProt::Server::_LabNetResetReply_default_instance_;
    new (ptr) ::LabNetProt::Server::LabNetResetReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LabNetProt::Server::LabNetResetReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LabNetResetReply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLabNetResetReply}, {}};

static void InitDefaultsLabNetIdReply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::LabNetProt::Server::_LabNetIdReply_default_instance_;
    new (ptr) ::LabNetProt::Server::LabNetIdReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LabNetProt::Server::LabNetIdReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LabNetIdReply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLabNetIdReply}, {}};

static void InitDefaultsDigitalOutLoopStartResult() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::LabNetProt::Server::_DigitalOutLoopStartResult_default_instance_;
    new (ptr) ::LabNetProt::Server::DigitalOutLoopStartResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LabNetProt::Server::DigitalOutLoopStartResult::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DigitalOutLoopStartResult =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDigitalOutLoopStartResult}, {}};

static void InitDefaultsDigitalOutLoopStopped() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::LabNetProt::Server::_DigitalOutLoopStopped_default_instance_;
    new (ptr) ::LabNetProt::Server::DigitalOutLoopStopped();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LabNetProt::Server::DigitalOutLoopStopped::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DigitalOutLoopStopped =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDigitalOutLoopStopped}, {}};

static void InitDefaultsServerWrappedMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::LabNetProt::Server::_ServerWrappedMessage_default_instance_;
    new (ptr) ::LabNetProt::Server::ServerWrappedMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LabNetProt::Server::ServerWrappedMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<14> scc_info_ServerWrappedMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 14, InitDefaultsServerWrappedMessage}, {
      &protobuf_LabNetServer_2eproto::scc_info_DigitalOutState.base,
      &protobuf_LabNetServer_2eproto::scc_info_DigitalInState.base,
      &protobuf_LabNetServer_2eproto::scc_info_NewByteData.base,
      &protobuf_LabNetServer_2eproto::scc_info_DataWriteComplete.base,
      &protobuf_LabNetServer_2eproto::scc_info_InterfaceInitResult.base,
      &protobuf_LabNetServer_2eproto::scc_info_DigitalInInitResult.base,
      &protobuf_LabNetServer_2eproto::scc_info_DigitalOutInitResult.base,
      &protobuf_LabNetServer_2eproto::scc_info_OnlyOneConnectionAllowed.base,
      &protobuf_LabNetServer_2eproto::scc_info_LabNetResetReply.base,
      &protobuf_LabNetServer_2eproto::scc_info_LabNetIdReply.base,
      &protobuf_LabNetServer_2eproto::scc_info_InterfaceLost.base,
      &protobuf_LabNetServer_2eproto::scc_info_InterfaceReconnected.base,
      &protobuf_LabNetServer_2eproto::scc_info_DigitalOutLoopStartResult.base,
      &protobuf_LabNetServer_2eproto::scc_info_DigitalOutLoopStopped.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_DigitalOutState.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DigitalInState.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NewByteData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DataWriteComplete.base);
  ::google::protobuf::internal::InitSCC(&scc_info_InterfaceInitResult.base);
  ::google::protobuf::internal::InitSCC(&scc_info_InterfaceLost.base);
  ::google::protobuf::internal::InitSCC(&scc_info_InterfaceReconnected.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DigitalInInitResult.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DigitalOutInitResult.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OnlyOneConnectionAllowed.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LabNetResetReply.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LabNetIdReply.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DigitalOutLoopStartResult.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DigitalOutLoopStopped.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ServerWrappedMessage.base);
}

::google::protobuf::Metadata file_level_metadata[15];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Server::DigitalOutState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Server::DigitalOutState, pin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Server::DigitalOutState, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Server::DigitalOutState, time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Server::DigitalInState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Server::DigitalInState, pin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Server::DigitalInState, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Server::DigitalInState, time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Server::NewByteData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Server::NewByteData, pin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Server::NewByteData, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Server::NewByteData, time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Server::DataWriteComplete, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Server::DataWriteComplete, pin_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Server::InterfaceInitResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Server::InterfaceInitResult, interface_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Server::InterfaceInitResult, is_succeed_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Server::InterfaceLost, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Server::InterfaceLost, interface_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Server::InterfaceReconnected, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Server::InterfaceReconnected, interface_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Server::DigitalInInitResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Server::DigitalInInitResult, interface_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Server::DigitalInInitResult, pin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Server::DigitalInInitResult, is_succeed_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Server::DigitalOutInitResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Server::DigitalOutInitResult, interface_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Server::DigitalOutInitResult, pin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Server::DigitalOutInitResult, is_succeed_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Server::OnlyOneConnectionAllowed, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Server::LabNetResetReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Server::LabNetResetReply, is_reset_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Server::LabNetIdReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Server::LabNetIdReply, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Server::LabNetIdReply, major_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Server::LabNetIdReply, minor_version_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Server::DigitalOutLoopStartResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Server::DigitalOutLoopStartResult, is_succeed_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Server::DigitalOutLoopStopped, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Server::DigitalOutLoopStopped, loop_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Server::ServerWrappedMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Server::ServerWrappedMessage, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::LabNetProt::Server::ServerWrappedMessageDefaultTypeInternal, digital_out_state_),
  offsetof(::LabNetProt::Server::ServerWrappedMessageDefaultTypeInternal, digital_in_state_),
  offsetof(::LabNetProt::Server::ServerWrappedMessageDefaultTypeInternal, new_byte_data_),
  offsetof(::LabNetProt::Server::ServerWrappedMessageDefaultTypeInternal, data_write_complete_),
  offsetof(::LabNetProt::Server::ServerWrappedMessageDefaultTypeInternal, interface_init_result_),
  offsetof(::LabNetProt::Server::ServerWrappedMessageDefaultTypeInternal, digital_in_init_result_),
  offsetof(::LabNetProt::Server::ServerWrappedMessageDefaultTypeInternal, digital_out_init_result_),
  offsetof(::LabNetProt::Server::ServerWrappedMessageDefaultTypeInternal, only_one_connection_allowed_),
  offsetof(::LabNetProt::Server::ServerWrappedMessageDefaultTypeInternal, reset_),
  offsetof(::LabNetProt::Server::ServerWrappedMessageDefaultTypeInternal, id_),
  offsetof(::LabNetProt::Server::ServerWrappedMessageDefaultTypeInternal, interface_lost_),
  offsetof(::LabNetProt::Server::ServerWrappedMessageDefaultTypeInternal, interface_reconnected_),
  offsetof(::LabNetProt::Server::ServerWrappedMessageDefaultTypeInternal, digital_out_loop_start_result_),
  offsetof(::LabNetProt::Server::ServerWrappedMessageDefaultTypeInternal, digital_out_loop_stopped_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Server::ServerWrappedMessage, server_message_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::LabNetProt::Server::DigitalOutState)},
  { 8, -1, sizeof(::LabNetProt::Server::DigitalInState)},
  { 16, -1, sizeof(::LabNetProt::Server::NewByteData)},
  { 24, -1, sizeof(::LabNetProt::Server::DataWriteComplete)},
  { 30, -1, sizeof(::LabNetProt::Server::InterfaceInitResult)},
  { 37, -1, sizeof(::LabNetProt::Server::InterfaceLost)},
  { 43, -1, sizeof(::LabNetProt::Server::InterfaceReconnected)},
  { 49, -1, sizeof(::LabNetProt::Server::DigitalInInitResult)},
  { 57, -1, sizeof(::LabNetProt::Server::DigitalOutInitResult)},
  { 65, -1, sizeof(::LabNetProt::Server::OnlyOneConnectionAllowed)},
  { 70, -1, sizeof(::LabNetProt::Server::LabNetResetReply)},
  { 76, -1, sizeof(::LabNetProt::Server::LabNetIdReply)},
  { 84, -1, sizeof(::LabNetProt::Server::DigitalOutLoopStartResult)},
  { 90, -1, sizeof(::LabNetProt::Server::DigitalOutLoopStopped)},
  { 96, -1, sizeof(::LabNetProt::Server::ServerWrappedMessage)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::LabNetProt::Server::_DigitalOutState_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::LabNetProt::Server::_DigitalInState_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::LabNetProt::Server::_NewByteData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::LabNetProt::Server::_DataWriteComplete_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::LabNetProt::Server::_InterfaceInitResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::LabNetProt::Server::_InterfaceLost_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::LabNetProt::Server::_InterfaceReconnected_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::LabNetProt::Server::_DigitalInInitResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::LabNetProt::Server::_DigitalOutInitResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::LabNetProt::Server::_OnlyOneConnectionAllowed_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::LabNetProt::Server::_LabNetResetReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::LabNetProt::Server::_LabNetIdReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::LabNetProt::Server::_DigitalOutLoopStartResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::LabNetProt::Server::_DigitalOutLoopStopped_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::LabNetProt::Server::_ServerWrappedMessage_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "LabNetServer.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 15);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\022LabNetServer.proto\022\021LabNetProt.Server\032"
      "\014LabNet.proto\032\037google/protobuf/timestamp"
      ".proto\"j\n\017DigitalOutState\022\036\n\003pin\030\001 \001(\0132\021"
      ".LabNetProt.PinId\022\r\n\005state\030\002 \001(\010\022(\n\004time"
      "\030\003 \001(\0132\032.google.protobuf.Timestamp\"i\n\016Di"
      "gitalInState\022\036\n\003pin\030\001 \001(\0132\021.LabNetProt.P"
      "inId\022\r\n\005state\030\002 \001(\010\022(\n\004time\030\003 \001(\0132\032.goog"
      "le.protobuf.Timestamp\"e\n\013NewByteData\022\036\n\003"
      "pin\030\001 \001(\0132\021.LabNetProt.PinId\022\014\n\004data\030\002 \001"
      "(\014\022(\n\004time\030\003 \001(\0132\032.google.protobuf.Times"
      "tamp\"3\n\021DataWriteComplete\022\036\n\003pin\030\001 \001(\0132\021"
      ".LabNetProt.PinId\"T\n\023InterfaceInitResult"
      "\022)\n\tinterface\030\001 \001(\0162\026.LabNetProt.Interfa"
      "ces\022\022\n\nis_succeed\030\002 \001(\010\":\n\rInterfaceLost"
      "\022)\n\tinterface\030\001 \001(\0162\026.LabNetProt.Interfa"
      "ces\"A\n\024InterfaceReconnected\022)\n\tinterface"
      "\030\001 \001(\0162\026.LabNetProt.Interfaces\"a\n\023Digita"
      "lInInitResult\022)\n\tinterface\030\001 \001(\0162\026.LabNe"
      "tProt.Interfaces\022\013\n\003pin\030\002 \001(\r\022\022\n\nis_succ"
      "eed\030\003 \001(\010\"b\n\024DigitalOutInitResult\022)\n\tint"
      "erface\030\001 \001(\0162\026.LabNetProt.Interfaces\022\013\n\003"
      "pin\030\002 \001(\r\022\022\n\nis_succeed\030\003 \001(\010\"\032\n\030OnlyOne"
      "ConnectionAllowed\"$\n\020LabNetResetReply\022\020\n"
      "\010is_reset\030\001 \001(\010\"I\n\rLabNetIdReply\022\n\n\002id\030\001"
      " \001(\t\022\025\n\rmajor_version\030\002 \001(\r\022\025\n\rminor_ver"
      "sion\030\003 \001(\r\"/\n\031DigitalOutLoopStartResult\022"
      "\022\n\nis_succeed\030\001 \001(\010\"*\n\025DigitalOutLoopSto"
      "pped\022\021\n\tloop_name\030\001 \001(\t\"\352\007\n\024ServerWrappe"
      "dMessage\022\?\n\021digital_out_state\030\001 \001(\0132\".La"
      "bNetProt.Server.DigitalOutStateH\000\022=\n\020dig"
      "ital_in_state\030\002 \001(\0132!.LabNetProt.Server."
      "DigitalInStateH\000\0227\n\rnew_byte_data\030\003 \001(\0132"
      "\036.LabNetProt.Server.NewByteDataH\000\022C\n\023dat"
      "a_write_complete\030\004 \001(\0132$.LabNetProt.Serv"
      "er.DataWriteCompleteH\000\022G\n\025interface_init"
      "_result\030\005 \001(\0132&.LabNetProt.Server.Interf"
      "aceInitResultH\000\022H\n\026digital_in_init_resul"
      "t\030\006 \001(\0132&.LabNetProt.Server.DigitalInIni"
      "tResultH\000\022J\n\027digital_out_init_result\030\007 \001"
      "(\0132\'.LabNetProt.Server.DigitalOutInitRes"
      "ultH\000\022R\n\033only_one_connection_allowed\030\010 \001"
      "(\0132+.LabNetProt.Server.OnlyOneConnection"
      "AllowedH\000\0224\n\005reset\030\t \001(\0132#.LabNetProt.Se"
      "rver.LabNetResetReplyH\000\022.\n\002id\030\n \001(\0132 .La"
      "bNetProt.Server.LabNetIdReplyH\000\022:\n\016inter"
      "face_lost\030\013 \001(\0132 .LabNetProt.Server.Inte"
      "rfaceLostH\000\022H\n\025interface_reconnected\030\014 \001"
      "(\0132\'.LabNetProt.Server.InterfaceReconnec"
      "tedH\000\022U\n\035digital_out_loop_start_result\030\r"
      " \001(\0132,.LabNetProt.Server.DigitalOutLoopS"
      "tartResultH\000\022L\n\030digital_out_loop_stopped"
      "\030\016 \001(\0132(.LabNetProt.Server.DigitalOutLoo"
      "pStoppedH\000B\020\n\016server_messageb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2116);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "LabNetServer.proto", &protobuf_RegisterTypes);
  ::protobuf_LabNet_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2ftimestamp_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_LabNetServer_2eproto
namespace LabNetProt {
namespace Server {

// ===================================================================

void DigitalOutState::InitAsDefaultInstance() {
  ::LabNetProt::Server::_DigitalOutState_default_instance_._instance.get_mutable()->pin_ = const_cast< ::LabNetProt::PinId*>(
      ::LabNetProt::PinId::internal_default_instance());
  ::LabNetProt::Server::_DigitalOutState_default_instance_._instance.get_mutable()->time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
void DigitalOutState::clear_pin() {
  if (GetArenaNoVirtual() == NULL && pin_ != NULL) {
    delete pin_;
  }
  pin_ = NULL;
}
void DigitalOutState::clear_time() {
  if (GetArenaNoVirtual() == NULL && time_ != NULL) {
    delete time_;
  }
  time_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DigitalOutState::kPinFieldNumber;
const int DigitalOutState::kStateFieldNumber;
const int DigitalOutState::kTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DigitalOutState::DigitalOutState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_LabNetServer_2eproto::scc_info_DigitalOutState.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:LabNetProt.Server.DigitalOutState)
}
DigitalOutState::DigitalOutState(const DigitalOutState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pin()) {
    pin_ = new ::LabNetProt::PinId(*from.pin_);
  } else {
    pin_ = NULL;
  }
  if (from.has_time()) {
    time_ = new ::google::protobuf::Timestamp(*from.time_);
  } else {
    time_ = NULL;
  }
  state_ = from.state_;
  // @@protoc_insertion_point(copy_constructor:LabNetProt.Server.DigitalOutState)
}

void DigitalOutState::SharedCtor() {
  ::memset(&pin_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&pin_)) + sizeof(state_));
}

DigitalOutState::~DigitalOutState() {
  // @@protoc_insertion_point(destructor:LabNetProt.Server.DigitalOutState)
  SharedDtor();
}

void DigitalOutState::SharedDtor() {
  if (this != internal_default_instance()) delete pin_;
  if (this != internal_default_instance()) delete time_;
}

void DigitalOutState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DigitalOutState::descriptor() {
  ::protobuf_LabNetServer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LabNetServer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DigitalOutState& DigitalOutState::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_LabNetServer_2eproto::scc_info_DigitalOutState.base);
  return *internal_default_instance();
}


void DigitalOutState::Clear() {
// @@protoc_insertion_point(message_clear_start:LabNetProt.Server.DigitalOutState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pin_ != NULL) {
    delete pin_;
  }
  pin_ = NULL;
  if (GetArenaNoVirtual() == NULL && time_ != NULL) {
    delete time_;
  }
  time_ = NULL;
  state_ = false;
  _internal_metadata_.Clear();
}

bool DigitalOutState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LabNetProt.Server.DigitalOutState)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .LabNetProt.PinId pin = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool state = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LabNetProt.Server.DigitalOutState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LabNetProt.Server.DigitalOutState)
  return false;
#undef DO_
}

void DigitalOutState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LabNetProt.Server.DigitalOutState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .LabNetProt.PinId pin = 1;
  if (this->has_pin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_pin(), output);
  }

  // bool state = 2;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->state(), output);
  }

  // .google.protobuf.Timestamp time = 3;
  if (this->has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:LabNetProt.Server.DigitalOutState)
}

::google::protobuf::uint8* DigitalOutState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LabNetProt.Server.DigitalOutState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .LabNetProt.PinId pin = 1;
  if (this->has_pin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_pin(), deterministic, target);
  }

  // bool state = 2;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->state(), target);
  }

  // .google.protobuf.Timestamp time = 3;
  if (this->has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_time(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LabNetProt.Server.DigitalOutState)
  return target;
}

size_t DigitalOutState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LabNetProt.Server.DigitalOutState)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .LabNetProt.PinId pin = 1;
  if (this->has_pin()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pin_);
  }

  // .google.protobuf.Timestamp time = 3;
  if (this->has_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *time_);
  }

  // bool state = 2;
  if (this->state() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DigitalOutState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LabNetProt.Server.DigitalOutState)
  GOOGLE_DCHECK_NE(&from, this);
  const DigitalOutState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DigitalOutState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LabNetProt.Server.DigitalOutState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LabNetProt.Server.DigitalOutState)
    MergeFrom(*source);
  }
}

void DigitalOutState::MergeFrom(const DigitalOutState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LabNetProt.Server.DigitalOutState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pin()) {
    mutable_pin()->::LabNetProt::PinId::MergeFrom(from.pin());
  }
  if (from.has_time()) {
    mutable_time()->::google::protobuf::Timestamp::MergeFrom(from.time());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
}

void DigitalOutState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LabNetProt.Server.DigitalOutState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DigitalOutState::CopyFrom(const DigitalOutState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LabNetProt.Server.DigitalOutState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DigitalOutState::IsInitialized() const {
  return true;
}

void DigitalOutState::Swap(DigitalOutState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DigitalOutState::InternalSwap(DigitalOutState* other) {
  using std::swap;
  swap(pin_, other->pin_);
  swap(time_, other->time_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DigitalOutState::GetMetadata() const {
  protobuf_LabNetServer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LabNetServer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DigitalInState::InitAsDefaultInstance() {
  ::LabNetProt::Server::_DigitalInState_default_instance_._instance.get_mutable()->pin_ = const_cast< ::LabNetProt::PinId*>(
      ::LabNetProt::PinId::internal_default_instance());
  ::LabNetProt::Server::_DigitalInState_default_instance_._instance.get_mutable()->time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
void DigitalInState::clear_pin() {
  if (GetArenaNoVirtual() == NULL && pin_ != NULL) {
    delete pin_;
  }
  pin_ = NULL;
}
void DigitalInState::clear_time() {
  if (GetArenaNoVirtual() == NULL && time_ != NULL) {
    delete time_;
  }
  time_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DigitalInState::kPinFieldNumber;
const int DigitalInState::kStateFieldNumber;
const int DigitalInState::kTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DigitalInState::DigitalInState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_LabNetServer_2eproto::scc_info_DigitalInState.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:LabNetProt.Server.DigitalInState)
}
DigitalInState::DigitalInState(const DigitalInState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pin()) {
    pin_ = new ::LabNetProt::PinId(*from.pin_);
  } else {
    pin_ = NULL;
  }
  if (from.has_time()) {
    time_ = new ::google::protobuf::Timestamp(*from.time_);
  } else {
    time_ = NULL;
  }
  state_ = from.state_;
  // @@protoc_insertion_point(copy_constructor:LabNetProt.Server.DigitalInState)
}

void DigitalInState::SharedCtor() {
  ::memset(&pin_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&pin_)) + sizeof(state_));
}

DigitalInState::~DigitalInState() {
  // @@protoc_insertion_point(destructor:LabNetProt.Server.DigitalInState)
  SharedDtor();
}

void DigitalInState::SharedDtor() {
  if (this != internal_default_instance()) delete pin_;
  if (this != internal_default_instance()) delete time_;
}

void DigitalInState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DigitalInState::descriptor() {
  ::protobuf_LabNetServer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LabNetServer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DigitalInState& DigitalInState::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_LabNetServer_2eproto::scc_info_DigitalInState.base);
  return *internal_default_instance();
}


void DigitalInState::Clear() {
// @@protoc_insertion_point(message_clear_start:LabNetProt.Server.DigitalInState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pin_ != NULL) {
    delete pin_;
  }
  pin_ = NULL;
  if (GetArenaNoVirtual() == NULL && time_ != NULL) {
    delete time_;
  }
  time_ = NULL;
  state_ = false;
  _internal_metadata_.Clear();
}

bool DigitalInState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LabNetProt.Server.DigitalInState)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .LabNetProt.PinId pin = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool state = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LabNetProt.Server.DigitalInState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LabNetProt.Server.DigitalInState)
  return false;
#undef DO_
}

void DigitalInState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LabNetProt.Server.DigitalInState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .LabNetProt.PinId pin = 1;
  if (this->has_pin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_pin(), output);
  }

  // bool state = 2;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->state(), output);
  }

  // .google.protobuf.Timestamp time = 3;
  if (this->has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:LabNetProt.Server.DigitalInState)
}

::google::protobuf::uint8* DigitalInState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LabNetProt.Server.DigitalInState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .LabNetProt.PinId pin = 1;
  if (this->has_pin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_pin(), deterministic, target);
  }

  // bool state = 2;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->state(), target);
  }

  // .google.protobuf.Timestamp time = 3;
  if (this->has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_time(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LabNetProt.Server.DigitalInState)
  return target;
}

size_t DigitalInState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LabNetProt.Server.DigitalInState)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .LabNetProt.PinId pin = 1;
  if (this->has_pin()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pin_);
  }

  // .google.protobuf.Timestamp time = 3;
  if (this->has_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *time_);
  }

  // bool state = 2;
  if (this->state() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DigitalInState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LabNetProt.Server.DigitalInState)
  GOOGLE_DCHECK_NE(&from, this);
  const DigitalInState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DigitalInState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LabNetProt.Server.DigitalInState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LabNetProt.Server.DigitalInState)
    MergeFrom(*source);
  }
}

void DigitalInState::MergeFrom(const DigitalInState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LabNetProt.Server.DigitalInState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pin()) {
    mutable_pin()->::LabNetProt::PinId::MergeFrom(from.pin());
  }
  if (from.has_time()) {
    mutable_time()->::google::protobuf::Timestamp::MergeFrom(from.time());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
}

void DigitalInState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LabNetProt.Server.DigitalInState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DigitalInState::CopyFrom(const DigitalInState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LabNetProt.Server.DigitalInState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DigitalInState::IsInitialized() const {
  return true;
}

void DigitalInState::Swap(DigitalInState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DigitalInState::InternalSwap(DigitalInState* other) {
  using std::swap;
  swap(pin_, other->pin_);
  swap(time_, other->time_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DigitalInState::GetMetadata() const {
  protobuf_LabNetServer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LabNetServer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NewByteData::InitAsDefaultInstance() {
  ::LabNetProt::Server::_NewByteData_default_instance_._instance.get_mutable()->pin_ = const_cast< ::LabNetProt::PinId*>(
      ::LabNetProt::PinId::internal_default_instance());
  ::LabNetProt::Server::_NewByteData_default_instance_._instance.get_mutable()->time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
void NewByteData::clear_pin() {
  if (GetArenaNoVirtual() == NULL && pin_ != NULL) {
    delete pin_;
  }
  pin_ = NULL;
}
void NewByteData::clear_time() {
  if (GetArenaNoVirtual() == NULL && time_ != NULL) {
    delete time_;
  }
  time_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NewByteData::kPinFieldNumber;
const int NewByteData::kDataFieldNumber;
const int NewByteData::kTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NewByteData::NewByteData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_LabNetServer_2eproto::scc_info_NewByteData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:LabNetProt.Server.NewByteData)
}
NewByteData::NewByteData(const NewByteData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.has_pin()) {
    pin_ = new ::LabNetProt::PinId(*from.pin_);
  } else {
    pin_ = NULL;
  }
  if (from.has_time()) {
    time_ = new ::google::protobuf::Timestamp(*from.time_);
  } else {
    time_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:LabNetProt.Server.NewByteData)
}

void NewByteData::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&pin_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&time_) -
      reinterpret_cast<char*>(&pin_)) + sizeof(time_));
}

NewByteData::~NewByteData() {
  // @@protoc_insertion_point(destructor:LabNetProt.Server.NewByteData)
  SharedDtor();
}

void NewByteData::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete pin_;
  if (this != internal_default_instance()) delete time_;
}

void NewByteData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* NewByteData::descriptor() {
  ::protobuf_LabNetServer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LabNetServer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NewByteData& NewByteData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_LabNetServer_2eproto::scc_info_NewByteData.base);
  return *internal_default_instance();
}


void NewByteData::Clear() {
// @@protoc_insertion_point(message_clear_start:LabNetProt.Server.NewByteData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && pin_ != NULL) {
    delete pin_;
  }
  pin_ = NULL;
  if (GetArenaNoVirtual() == NULL && time_ != NULL) {
    delete time_;
  }
  time_ = NULL;
  _internal_metadata_.Clear();
}

bool NewByteData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LabNetProt.Server.NewByteData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .LabNetProt.PinId pin = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LabNetProt.Server.NewByteData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LabNetProt.Server.NewByteData)
  return false;
#undef DO_
}

void NewByteData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LabNetProt.Server.NewByteData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .LabNetProt.PinId pin = 1;
  if (this->has_pin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_pin(), output);
  }

  // bytes data = 2;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->data(), output);
  }

  // .google.protobuf.Timestamp time = 3;
  if (this->has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:LabNetProt.Server.NewByteData)
}

::google::protobuf::uint8* NewByteData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LabNetProt.Server.NewByteData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .LabNetProt.PinId pin = 1;
  if (this->has_pin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_pin(), deterministic, target);
  }

  // bytes data = 2;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->data(), target);
  }

  // .google.protobuf.Timestamp time = 3;
  if (this->has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_time(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LabNetProt.Server.NewByteData)
  return target;
}

size_t NewByteData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LabNetProt.Server.NewByteData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes data = 2;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  // .LabNetProt.PinId pin = 1;
  if (this->has_pin()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pin_);
  }

  // .google.protobuf.Timestamp time = 3;
  if (this->has_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *time_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NewByteData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LabNetProt.Server.NewByteData)
  GOOGLE_DCHECK_NE(&from, this);
  const NewByteData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NewByteData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LabNetProt.Server.NewByteData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LabNetProt.Server.NewByteData)
    MergeFrom(*source);
  }
}

void NewByteData::MergeFrom(const NewByteData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LabNetProt.Server.NewByteData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.has_pin()) {
    mutable_pin()->::LabNetProt::PinId::MergeFrom(from.pin());
  }
  if (from.has_time()) {
    mutable_time()->::google::protobuf::Timestamp::MergeFrom(from.time());
  }
}

void NewByteData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LabNetProt.Server.NewByteData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NewByteData::CopyFrom(const NewByteData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LabNetProt.Server.NewByteData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NewByteData::IsInitialized() const {
  return true;
}

void NewByteData::Swap(NewByteData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NewByteData::InternalSwap(NewByteData* other) {
  using std::swap;
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(pin_, other->pin_);
  swap(time_, other->time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata NewByteData::GetMetadata() const {
  protobuf_LabNetServer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LabNetServer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DataWriteComplete::InitAsDefaultInstance() {
  ::LabNetProt::Server::_DataWriteComplete_default_instance_._instance.get_mutable()->pin_ = const_cast< ::LabNetProt::PinId*>(
      ::LabNetProt::PinId::internal_default_instance());
}
void DataWriteComplete::clear_pin() {
  if (GetArenaNoVirtual() == NULL && pin_ != NULL) {
    delete pin_;
  }
  pin_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DataWriteComplete::kPinFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DataWriteComplete::DataWriteComplete()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_LabNetServer_2eproto::scc_info_DataWriteComplete.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:LabNetProt.Server.DataWriteComplete)
}
DataWriteComplete::DataWriteComplete(const DataWriteComplete& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pin()) {
    pin_ = new ::LabNetProt::PinId(*from.pin_);
  } else {
    pin_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:LabNetProt.Server.DataWriteComplete)
}

void DataWriteComplete::SharedCtor() {
  pin_ = NULL;
}

DataWriteComplete::~DataWriteComplete() {
  // @@protoc_insertion_point(destructor:LabNetProt.Server.DataWriteComplete)
  SharedDtor();
}

void DataWriteComplete::SharedDtor() {
  if (this != internal_default_instance()) delete pin_;
}

void DataWriteComplete::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DataWriteComplete::descriptor() {
  ::protobuf_LabNetServer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LabNetServer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DataWriteComplete& DataWriteComplete::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_LabNetServer_2eproto::scc_info_DataWriteComplete.base);
  return *internal_default_instance();
}


void DataWriteComplete::Clear() {
// @@protoc_insertion_point(message_clear_start:LabNetProt.Server.DataWriteComplete)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pin_ != NULL) {
    delete pin_;
  }
  pin_ = NULL;
  _internal_metadata_.Clear();
}

bool DataWriteComplete::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LabNetProt.Server.DataWriteComplete)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .LabNetProt.PinId pin = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LabNetProt.Server.DataWriteComplete)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LabNetProt.Server.DataWriteComplete)
  return false;
#undef DO_
}

void DataWriteComplete::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LabNetProt.Server.DataWriteComplete)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .LabNetProt.PinId pin = 1;
  if (this->has_pin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_pin(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:LabNetProt.Server.DataWriteComplete)
}

::google::protobuf::uint8* DataWriteComplete::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LabNetProt.Server.DataWriteComplete)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .LabNetProt.PinId pin = 1;
  if (this->has_pin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_pin(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LabNetProt.Server.DataWriteComplete)
  return target;
}

size_t DataWriteComplete::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LabNetProt.Server.DataWriteComplete)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .LabNetProt.PinId pin = 1;
  if (this->has_pin()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pin_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DataWriteComplete::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LabNetProt.Server.DataWriteComplete)
  GOOGLE_DCHECK_NE(&from, this);
  const DataWriteComplete* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DataWriteComplete>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LabNetProt.Server.DataWriteComplete)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LabNetProt.Server.DataWriteComplete)
    MergeFrom(*source);
  }
}

void DataWriteComplete::MergeFrom(const DataWriteComplete& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LabNetProt.Server.DataWriteComplete)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pin()) {
    mutable_pin()->::LabNetProt::PinId::MergeFrom(from.pin());
  }
}

void DataWriteComplete::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LabNetProt.Server.DataWriteComplete)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataWriteComplete::CopyFrom(const DataWriteComplete& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LabNetProt.Server.DataWriteComplete)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataWriteComplete::IsInitialized() const {
  return true;
}

void DataWriteComplete::Swap(DataWriteComplete* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DataWriteComplete::InternalSwap(DataWriteComplete* other) {
  using std::swap;
  swap(pin_, other->pin_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DataWriteComplete::GetMetadata() const {
  protobuf_LabNetServer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LabNetServer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void InterfaceInitResult::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InterfaceInitResult::kInterfaceFieldNumber;
const int InterfaceInitResult::kIsSucceedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InterfaceInitResult::InterfaceInitResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_LabNetServer_2eproto::scc_info_InterfaceInitResult.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:LabNetProt.Server.InterfaceInitResult)
}
InterfaceInitResult::InterfaceInitResult(const InterfaceInitResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&interface_, &from.interface_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_succeed_) -
    reinterpret_cast<char*>(&interface_)) + sizeof(is_succeed_));
  // @@protoc_insertion_point(copy_constructor:LabNetProt.Server.InterfaceInitResult)
}

void InterfaceInitResult::SharedCtor() {
  ::memset(&interface_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_succeed_) -
      reinterpret_cast<char*>(&interface_)) + sizeof(is_succeed_));
}

InterfaceInitResult::~InterfaceInitResult() {
  // @@protoc_insertion_point(destructor:LabNetProt.Server.InterfaceInitResult)
  SharedDtor();
}

void InterfaceInitResult::SharedDtor() {
}

void InterfaceInitResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* InterfaceInitResult::descriptor() {
  ::protobuf_LabNetServer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LabNetServer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InterfaceInitResult& InterfaceInitResult::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_LabNetServer_2eproto::scc_info_InterfaceInitResult.base);
  return *internal_default_instance();
}


void InterfaceInitResult::Clear() {
// @@protoc_insertion_point(message_clear_start:LabNetProt.Server.InterfaceInitResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&interface_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_succeed_) -
      reinterpret_cast<char*>(&interface_)) + sizeof(is_succeed_));
  _internal_metadata_.Clear();
}

bool InterfaceInitResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LabNetProt.Server.InterfaceInitResult)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .LabNetProt.Interfaces interface = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_interface(static_cast< ::LabNetProt::Interfaces >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_succeed = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_succeed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LabNetProt.Server.InterfaceInitResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LabNetProt.Server.InterfaceInitResult)
  return false;
#undef DO_
}

void InterfaceInitResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LabNetProt.Server.InterfaceInitResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .LabNetProt.Interfaces interface = 1;
  if (this->interface() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->interface(), output);
  }

  // bool is_succeed = 2;
  if (this->is_succeed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->is_succeed(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:LabNetProt.Server.InterfaceInitResult)
}

::google::protobuf::uint8* InterfaceInitResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LabNetProt.Server.InterfaceInitResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .LabNetProt.Interfaces interface = 1;
  if (this->interface() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->interface(), target);
  }

  // bool is_succeed = 2;
  if (this->is_succeed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->is_succeed(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LabNetProt.Server.InterfaceInitResult)
  return target;
}

size_t InterfaceInitResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LabNetProt.Server.InterfaceInitResult)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .LabNetProt.Interfaces interface = 1;
  if (this->interface() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->interface());
  }

  // bool is_succeed = 2;
  if (this->is_succeed() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InterfaceInitResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LabNetProt.Server.InterfaceInitResult)
  GOOGLE_DCHECK_NE(&from, this);
  const InterfaceInitResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InterfaceInitResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LabNetProt.Server.InterfaceInitResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LabNetProt.Server.InterfaceInitResult)
    MergeFrom(*source);
  }
}

void InterfaceInitResult::MergeFrom(const InterfaceInitResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LabNetProt.Server.InterfaceInitResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.interface() != 0) {
    set_interface(from.interface());
  }
  if (from.is_succeed() != 0) {
    set_is_succeed(from.is_succeed());
  }
}

void InterfaceInitResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LabNetProt.Server.InterfaceInitResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InterfaceInitResult::CopyFrom(const InterfaceInitResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LabNetProt.Server.InterfaceInitResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InterfaceInitResult::IsInitialized() const {
  return true;
}

void InterfaceInitResult::Swap(InterfaceInitResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InterfaceInitResult::InternalSwap(InterfaceInitResult* other) {
  using std::swap;
  swap(interface_, other->interface_);
  swap(is_succeed_, other->is_succeed_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata InterfaceInitResult::GetMetadata() const {
  protobuf_LabNetServer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LabNetServer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void InterfaceLost::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InterfaceLost::kInterfaceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InterfaceLost::InterfaceLost()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_LabNetServer_2eproto::scc_info_InterfaceLost.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:LabNetProt.Server.InterfaceLost)
}
InterfaceLost::InterfaceLost(const InterfaceLost& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  interface_ = from.interface_;
  // @@protoc_insertion_point(copy_constructor:LabNetProt.Server.InterfaceLost)
}

void InterfaceLost::SharedCtor() {
  interface_ = 0;
}

InterfaceLost::~InterfaceLost() {
  // @@protoc_insertion_point(destructor:LabNetProt.Server.InterfaceLost)
  SharedDtor();
}

void InterfaceLost::SharedDtor() {
}

void InterfaceLost::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* InterfaceLost::descriptor() {
  ::protobuf_LabNetServer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LabNetServer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InterfaceLost& InterfaceLost::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_LabNetServer_2eproto::scc_info_InterfaceLost.base);
  return *internal_default_instance();
}


void InterfaceLost::Clear() {
// @@protoc_insertion_point(message_clear_start:LabNetProt.Server.InterfaceLost)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  interface_ = 0;
  _internal_metadata_.Clear();
}

bool InterfaceLost::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LabNetProt.Server.InterfaceLost)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .LabNetProt.Interfaces interface = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_interface(static_cast< ::LabNetProt::Interfaces >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LabNetProt.Server.InterfaceLost)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LabNetProt.Server.InterfaceLost)
  return false;
#undef DO_
}

void InterfaceLost::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LabNetProt.Server.InterfaceLost)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .LabNetProt.Interfaces interface = 1;
  if (this->interface() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->interface(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:LabNetProt.Server.InterfaceLost)
}

::google::protobuf::uint8* InterfaceLost::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LabNetProt.Server.InterfaceLost)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .LabNetProt.Interfaces interface = 1;
  if (this->interface() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->interface(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LabNetProt.Server.InterfaceLost)
  return target;
}

size_t InterfaceLost::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LabNetProt.Server.InterfaceLost)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .LabNetProt.Interfaces interface = 1;
  if (this->interface() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->interface());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InterfaceLost::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LabNetProt.Server.InterfaceLost)
  GOOGLE_DCHECK_NE(&from, this);
  const InterfaceLost* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InterfaceLost>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LabNetProt.Server.InterfaceLost)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LabNetProt.Server.InterfaceLost)
    MergeFrom(*source);
  }
}

void InterfaceLost::MergeFrom(const InterfaceLost& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LabNetProt.Server.InterfaceLost)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.interface() != 0) {
    set_interface(from.interface());
  }
}

void InterfaceLost::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LabNetProt.Server.InterfaceLost)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InterfaceLost::CopyFrom(const InterfaceLost& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LabNetProt.Server.InterfaceLost)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InterfaceLost::IsInitialized() const {
  return true;
}

void InterfaceLost::Swap(InterfaceLost* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InterfaceLost::InternalSwap(InterfaceLost* other) {
  using std::swap;
  swap(interface_, other->interface_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata InterfaceLost::GetMetadata() const {
  protobuf_LabNetServer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LabNetServer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void InterfaceReconnected::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InterfaceReconnected::kInterfaceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InterfaceReconnected::InterfaceReconnected()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_LabNetServer_2eproto::scc_info_InterfaceReconnected.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:LabNetProt.Server.InterfaceReconnected)
}
InterfaceReconnected::InterfaceReconnected(const InterfaceReconnected& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  interface_ = from.interface_;
  // @@protoc_insertion_point(copy_constructor:LabNetProt.Server.InterfaceReconnected)
}

void InterfaceReconnected::SharedCtor() {
  interface_ = 0;
}

InterfaceReconnected::~InterfaceReconnected() {
  // @@protoc_insertion_point(destructor:LabNetProt.Server.InterfaceReconnected)
  SharedDtor();
}

void InterfaceReconnected::SharedDtor() {
}

void InterfaceReconnected::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* InterfaceReconnected::descriptor() {
  ::protobuf_LabNetServer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LabNetServer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InterfaceReconnected& InterfaceReconnected::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_LabNetServer_2eproto::scc_info_InterfaceReconnected.base);
  return *internal_default_instance();
}


void InterfaceReconnected::Clear() {
// @@protoc_insertion_point(message_clear_start:LabNetProt.Server.InterfaceReconnected)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  interface_ = 0;
  _internal_metadata_.Clear();
}

bool InterfaceReconnected::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LabNetProt.Server.InterfaceReconnected)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .LabNetProt.Interfaces interface = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_interface(static_cast< ::LabNetProt::Interfaces >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LabNetProt.Server.InterfaceReconnected)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LabNetProt.Server.InterfaceReconnected)
  return false;
#undef DO_
}

void InterfaceReconnected::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LabNetProt.Server.InterfaceReconnected)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .LabNetProt.Interfaces interface = 1;
  if (this->interface() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->interface(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:LabNetProt.Server.InterfaceReconnected)
}

::google::protobuf::uint8* InterfaceReconnected::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LabNetProt.Server.InterfaceReconnected)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .LabNetProt.Interfaces interface = 1;
  if (this->interface() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->interface(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LabNetProt.Server.InterfaceReconnected)
  return target;
}

size_t InterfaceReconnected::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LabNetProt.Server.InterfaceReconnected)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .LabNetProt.Interfaces interface = 1;
  if (this->interface() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->interface());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InterfaceReconnected::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LabNetProt.Server.InterfaceReconnected)
  GOOGLE_DCHECK_NE(&from, this);
  const InterfaceReconnected* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InterfaceReconnected>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LabNetProt.Server.InterfaceReconnected)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LabNetProt.Server.InterfaceReconnected)
    MergeFrom(*source);
  }
}

void InterfaceReconnected::MergeFrom(const InterfaceReconnected& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LabNetProt.Server.InterfaceReconnected)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.interface() != 0) {
    set_interface(from.interface());
  }
}

void InterfaceReconnected::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LabNetProt.Server.InterfaceReconnected)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InterfaceReconnected::CopyFrom(const InterfaceReconnected& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LabNetProt.Server.InterfaceReconnected)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InterfaceReconnected::IsInitialized() const {
  return true;
}

void InterfaceReconnected::Swap(InterfaceReconnected* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InterfaceReconnected::InternalSwap(InterfaceReconnected* other) {
  using std::swap;
  swap(interface_, other->interface_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata InterfaceReconnected::GetMetadata() const {
  protobuf_LabNetServer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LabNetServer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DigitalInInitResult::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DigitalInInitResult::kInterfaceFieldNumber;
const int DigitalInInitResult::kPinFieldNumber;
const int DigitalInInitResult::kIsSucceedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DigitalInInitResult::DigitalInInitResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_LabNetServer_2eproto::scc_info_DigitalInInitResult.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:LabNetProt.Server.DigitalInInitResult)
}
DigitalInInitResult::DigitalInInitResult(const DigitalInInitResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&interface_, &from.interface_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_succeed_) -
    reinterpret_cast<char*>(&interface_)) + sizeof(is_succeed_));
  // @@protoc_insertion_point(copy_constructor:LabNetProt.Server.DigitalInInitResult)
}

void DigitalInInitResult::SharedCtor() {
  ::memset(&interface_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_succeed_) -
      reinterpret_cast<char*>(&interface_)) + sizeof(is_succeed_));
}

DigitalInInitResult::~DigitalInInitResult() {
  // @@protoc_insertion_point(destructor:LabNetProt.Server.DigitalInInitResult)
  SharedDtor();
}

void DigitalInInitResult::SharedDtor() {
}

void DigitalInInitResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DigitalInInitResult::descriptor() {
  ::protobuf_LabNetServer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LabNetServer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DigitalInInitResult& DigitalInInitResult::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_LabNetServer_2eproto::scc_info_DigitalInInitResult.base);
  return *internal_default_instance();
}


void DigitalInInitResult::Clear() {
// @@protoc_insertion_point(message_clear_start:LabNetProt.Server.DigitalInInitResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&interface_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_succeed_) -
      reinterpret_cast<char*>(&interface_)) + sizeof(is_succeed_));
  _internal_metadata_.Clear();
}

bool DigitalInInitResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LabNetProt.Server.DigitalInInitResult)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .LabNetProt.Interfaces interface = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_interface(static_cast< ::LabNetProt::Interfaces >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 pin = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_succeed = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_succeed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LabNetProt.Server.DigitalInInitResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LabNetProt.Server.DigitalInInitResult)
  return false;
#undef DO_
}

void DigitalInInitResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LabNetProt.Server.DigitalInInitResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .LabNetProt.Interfaces interface = 1;
  if (this->interface() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->interface(), output);
  }

  // uint32 pin = 2;
  if (this->pin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pin(), output);
  }

  // bool is_succeed = 3;
  if (this->is_succeed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_succeed(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:LabNetProt.Server.DigitalInInitResult)
}

::google::protobuf::uint8* DigitalInInitResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LabNetProt.Server.DigitalInInitResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .LabNetProt.Interfaces interface = 1;
  if (this->interface() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->interface(), target);
  }

  // uint32 pin = 2;
  if (this->pin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pin(), target);
  }

  // bool is_succeed = 3;
  if (this->is_succeed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_succeed(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LabNetProt.Server.DigitalInInitResult)
  return target;
}

size_t DigitalInInitResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LabNetProt.Server.DigitalInInitResult)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .LabNetProt.Interfaces interface = 1;
  if (this->interface() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->interface());
  }

  // uint32 pin = 2;
  if (this->pin() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pin());
  }

  // bool is_succeed = 3;
  if (this->is_succeed() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DigitalInInitResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LabNetProt.Server.DigitalInInitResult)
  GOOGLE_DCHECK_NE(&from, this);
  const DigitalInInitResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DigitalInInitResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LabNetProt.Server.DigitalInInitResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LabNetProt.Server.DigitalInInitResult)
    MergeFrom(*source);
  }
}

void DigitalInInitResult::MergeFrom(const DigitalInInitResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LabNetProt.Server.DigitalInInitResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.interface() != 0) {
    set_interface(from.interface());
  }
  if (from.pin() != 0) {
    set_pin(from.pin());
  }
  if (from.is_succeed() != 0) {
    set_is_succeed(from.is_succeed());
  }
}

void DigitalInInitResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LabNetProt.Server.DigitalInInitResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DigitalInInitResult::CopyFrom(const DigitalInInitResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LabNetProt.Server.DigitalInInitResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DigitalInInitResult::IsInitialized() const {
  return true;
}

void DigitalInInitResult::Swap(DigitalInInitResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DigitalInInitResult::InternalSwap(DigitalInInitResult* other) {
  using std::swap;
  swap(interface_, other->interface_);
  swap(pin_, other->pin_);
  swap(is_succeed_, other->is_succeed_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DigitalInInitResult::GetMetadata() const {
  protobuf_LabNetServer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LabNetServer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DigitalOutInitResult::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DigitalOutInitResult::kInterfaceFieldNumber;
const int DigitalOutInitResult::kPinFieldNumber;
const int DigitalOutInitResult::kIsSucceedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DigitalOutInitResult::DigitalOutInitResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_LabNetServer_2eproto::scc_info_DigitalOutInitResult.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:LabNetProt.Server.DigitalOutInitResult)
}
DigitalOutInitResult::DigitalOutInitResult(const DigitalOutInitResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&interface_, &from.interface_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_succeed_) -
    reinterpret_cast<char*>(&interface_)) + sizeof(is_succeed_));
  // @@protoc_insertion_point(copy_constructor:LabNetProt.Server.DigitalOutInitResult)
}

void DigitalOutInitResult::SharedCtor() {
  ::memset(&interface_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_succeed_) -
      reinterpret_cast<char*>(&interface_)) + sizeof(is_succeed_));
}

DigitalOutInitResult::~DigitalOutInitResult() {
  // @@protoc_insertion_point(destructor:LabNetProt.Server.DigitalOutInitResult)
  SharedDtor();
}

void DigitalOutInitResult::SharedDtor() {
}

void DigitalOutInitResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DigitalOutInitResult::descriptor() {
  ::protobuf_LabNetServer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LabNetServer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DigitalOutInitResult& DigitalOutInitResult::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_LabNetServer_2eproto::scc_info_DigitalOutInitResult.base);
  return *internal_default_instance();
}


void DigitalOutInitResult::Clear() {
// @@protoc_insertion_point(message_clear_start:LabNetProt.Server.DigitalOutInitResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&interface_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_succeed_) -
      reinterpret_cast<char*>(&interface_)) + sizeof(is_succeed_));
  _internal_metadata_.Clear();
}

bool DigitalOutInitResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LabNetProt.Server.DigitalOutInitResult)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .LabNetProt.Interfaces interface = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_interface(static_cast< ::LabNetProt::Interfaces >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 pin = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_succeed = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_succeed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LabNetProt.Server.DigitalOutInitResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LabNetProt.Server.DigitalOutInitResult)
  return false;
#undef DO_
}

void DigitalOutInitResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LabNetProt.Server.DigitalOutInitResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .LabNetProt.Interfaces interface = 1;
  if (this->interface() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->interface(), output);
  }

  // uint32 pin = 2;
  if (this->pin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pin(), output);
  }

  // bool is_succeed = 3;
  if (this->is_succeed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_succeed(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:LabNetProt.Server.DigitalOutInitResult)
}

::google::protobuf::uint8* DigitalOutInitResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LabNetProt.Server.DigitalOutInitResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .LabNetProt.Interfaces interface = 1;
  if (this->interface() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->interface(), target);
  }

  // uint32 pin = 2;
  if (this->pin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pin(), target);
  }

  // bool is_succeed = 3;
  if (this->is_succeed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_succeed(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LabNetProt.Server.DigitalOutInitResult)
  return target;
}

size_t DigitalOutInitResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LabNetProt.Server.DigitalOutInitResult)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .LabNetProt.Interfaces interface = 1;
  if (this->interface() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->interface());
  }

  // uint32 pin = 2;
  if (this->pin() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pin());
  }

  // bool is_succeed = 3;
  if (this->is_succeed() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DigitalOutInitResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LabNetProt.Server.DigitalOutInitResult)
  GOOGLE_DCHECK_NE(&from, this);
  const DigitalOutInitResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DigitalOutInitResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LabNetProt.Server.DigitalOutInitResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LabNetProt.Server.DigitalOutInitResult)
    MergeFrom(*source);
  }
}

void DigitalOutInitResult::MergeFrom(const DigitalOutInitResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LabNetProt.Server.DigitalOutInitResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.interface() != 0) {
    set_interface(from.interface());
  }
  if (from.pin() != 0) {
    set_pin(from.pin());
  }
  if (from.is_succeed() != 0) {
    set_is_succeed(from.is_succeed());
  }
}

void DigitalOutInitResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LabNetProt.Server.DigitalOutInitResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DigitalOutInitResult::CopyFrom(const DigitalOutInitResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LabNetProt.Server.DigitalOutInitResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DigitalOutInitResult::IsInitialized() const {
  return true;
}

void DigitalOutInitResult::Swap(DigitalOutInitResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DigitalOutInitResult::InternalSwap(DigitalOutInitResult* other) {
  using std::swap;
  swap(interface_, other->interface_);
  swap(pin_, other->pin_);
  swap(is_succeed_, other->is_succeed_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DigitalOutInitResult::GetMetadata() const {
  protobuf_LabNetServer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LabNetServer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OnlyOneConnectionAllowed::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OnlyOneConnectionAllowed::OnlyOneConnectionAllowed()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_LabNetServer_2eproto::scc_info_OnlyOneConnectionAllowed.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:LabNetProt.Server.OnlyOneConnectionAllowed)
}
OnlyOneConnectionAllowed::OnlyOneConnectionAllowed(const OnlyOneConnectionAllowed& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:LabNetProt.Server.OnlyOneConnectionAllowed)
}

void OnlyOneConnectionAllowed::SharedCtor() {
}

OnlyOneConnectionAllowed::~OnlyOneConnectionAllowed() {
  // @@protoc_insertion_point(destructor:LabNetProt.Server.OnlyOneConnectionAllowed)
  SharedDtor();
}

void OnlyOneConnectionAllowed::SharedDtor() {
}

void OnlyOneConnectionAllowed::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OnlyOneConnectionAllowed::descriptor() {
  ::protobuf_LabNetServer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LabNetServer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OnlyOneConnectionAllowed& OnlyOneConnectionAllowed::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_LabNetServer_2eproto::scc_info_OnlyOneConnectionAllowed.base);
  return *internal_default_instance();
}


void OnlyOneConnectionAllowed::Clear() {
// @@protoc_insertion_point(message_clear_start:LabNetProt.Server.OnlyOneConnectionAllowed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool OnlyOneConnectionAllowed::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LabNetProt.Server.OnlyOneConnectionAllowed)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:LabNetProt.Server.OnlyOneConnectionAllowed)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LabNetProt.Server.OnlyOneConnectionAllowed)
  return false;
#undef DO_
}

void OnlyOneConnectionAllowed::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LabNetProt.Server.OnlyOneConnectionAllowed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:LabNetProt.Server.OnlyOneConnectionAllowed)
}

::google::protobuf::uint8* OnlyOneConnectionAllowed::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LabNetProt.Server.OnlyOneConnectionAllowed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LabNetProt.Server.OnlyOneConnectionAllowed)
  return target;
}

size_t OnlyOneConnectionAllowed::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LabNetProt.Server.OnlyOneConnectionAllowed)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OnlyOneConnectionAllowed::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LabNetProt.Server.OnlyOneConnectionAllowed)
  GOOGLE_DCHECK_NE(&from, this);
  const OnlyOneConnectionAllowed* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OnlyOneConnectionAllowed>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LabNetProt.Server.OnlyOneConnectionAllowed)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LabNetProt.Server.OnlyOneConnectionAllowed)
    MergeFrom(*source);
  }
}

void OnlyOneConnectionAllowed::MergeFrom(const OnlyOneConnectionAllowed& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LabNetProt.Server.OnlyOneConnectionAllowed)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void OnlyOneConnectionAllowed::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LabNetProt.Server.OnlyOneConnectionAllowed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OnlyOneConnectionAllowed::CopyFrom(const OnlyOneConnectionAllowed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LabNetProt.Server.OnlyOneConnectionAllowed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OnlyOneConnectionAllowed::IsInitialized() const {
  return true;
}

void OnlyOneConnectionAllowed::Swap(OnlyOneConnectionAllowed* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OnlyOneConnectionAllowed::InternalSwap(OnlyOneConnectionAllowed* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OnlyOneConnectionAllowed::GetMetadata() const {
  protobuf_LabNetServer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LabNetServer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LabNetResetReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LabNetResetReply::kIsResetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LabNetResetReply::LabNetResetReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_LabNetServer_2eproto::scc_info_LabNetResetReply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:LabNetProt.Server.LabNetResetReply)
}
LabNetResetReply::LabNetResetReply(const LabNetResetReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  is_reset_ = from.is_reset_;
  // @@protoc_insertion_point(copy_constructor:LabNetProt.Server.LabNetResetReply)
}

void LabNetResetReply::SharedCtor() {
  is_reset_ = false;
}

LabNetResetReply::~LabNetResetReply() {
  // @@protoc_insertion_point(destructor:LabNetProt.Server.LabNetResetReply)
  SharedDtor();
}

void LabNetResetReply::SharedDtor() {
}

void LabNetResetReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LabNetResetReply::descriptor() {
  ::protobuf_LabNetServer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LabNetServer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LabNetResetReply& LabNetResetReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_LabNetServer_2eproto::scc_info_LabNetResetReply.base);
  return *internal_default_instance();
}


void LabNetResetReply::Clear() {
// @@protoc_insertion_point(message_clear_start:LabNetProt.Server.LabNetResetReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  is_reset_ = false;
  _internal_metadata_.Clear();
}

bool LabNetResetReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LabNetProt.Server.LabNetResetReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool is_reset = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_reset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LabNetProt.Server.LabNetResetReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LabNetProt.Server.LabNetResetReply)
  return false;
#undef DO_
}

void LabNetResetReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LabNetProt.Server.LabNetResetReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_reset = 1;
  if (this->is_reset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->is_reset(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:LabNetProt.Server.LabNetResetReply)
}

::google::protobuf::uint8* LabNetResetReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LabNetProt.Server.LabNetResetReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_reset = 1;
  if (this->is_reset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->is_reset(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LabNetProt.Server.LabNetResetReply)
  return target;
}

size_t LabNetResetReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LabNetProt.Server.LabNetResetReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool is_reset = 1;
  if (this->is_reset() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LabNetResetReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LabNetProt.Server.LabNetResetReply)
  GOOGLE_DCHECK_NE(&from, this);
  const LabNetResetReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LabNetResetReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LabNetProt.Server.LabNetResetReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LabNetProt.Server.LabNetResetReply)
    MergeFrom(*source);
  }
}

void LabNetResetReply::MergeFrom(const LabNetResetReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LabNetProt.Server.LabNetResetReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.is_reset() != 0) {
    set_is_reset(from.is_reset());
  }
}

void LabNetResetReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LabNetProt.Server.LabNetResetReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LabNetResetReply::CopyFrom(const LabNetResetReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LabNetProt.Server.LabNetResetReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LabNetResetReply::IsInitialized() const {
  return true;
}

void LabNetResetReply::Swap(LabNetResetReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LabNetResetReply::InternalSwap(LabNetResetReply* other) {
  using std::swap;
  swap(is_reset_, other->is_reset_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LabNetResetReply::GetMetadata() const {
  protobuf_LabNetServer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LabNetServer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LabNetIdReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LabNetIdReply::kIdFieldNumber;
const int LabNetIdReply::kMajorVersionFieldNumber;
const int LabNetIdReply::kMinorVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LabNetIdReply::LabNetIdReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_LabNetServer_2eproto::scc_info_LabNetIdReply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:LabNetProt.Server.LabNetIdReply)
}
LabNetIdReply::LabNetIdReply(const LabNetIdReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  ::memcpy(&major_version_, &from.major_version_,
    static_cast<size_t>(reinterpret_cast<char*>(&minor_version_) -
    reinterpret_cast<char*>(&major_version_)) + sizeof(minor_version_));
  // @@protoc_insertion_point(copy_constructor:LabNetProt.Server.LabNetIdReply)
}

void LabNetIdReply::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&major_version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&minor_version_) -
      reinterpret_cast<char*>(&major_version_)) + sizeof(minor_version_));
}

LabNetIdReply::~LabNetIdReply() {
  // @@protoc_insertion_point(destructor:LabNetProt.Server.LabNetIdReply)
  SharedDtor();
}

void LabNetIdReply::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LabNetIdReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LabNetIdReply::descriptor() {
  ::protobuf_LabNetServer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LabNetServer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LabNetIdReply& LabNetIdReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_LabNetServer_2eproto::scc_info_LabNetIdReply.base);
  return *internal_default_instance();
}


void LabNetIdReply::Clear() {
// @@protoc_insertion_point(message_clear_start:LabNetProt.Server.LabNetIdReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&major_version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&minor_version_) -
      reinterpret_cast<char*>(&major_version_)) + sizeof(minor_version_));
  _internal_metadata_.Clear();
}

bool LabNetIdReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LabNetProt.Server.LabNetIdReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LabNetProt.Server.LabNetIdReply.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 major_version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &major_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 minor_version = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &minor_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LabNetProt.Server.LabNetIdReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LabNetProt.Server.LabNetIdReply)
  return false;
#undef DO_
}

void LabNetIdReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LabNetProt.Server.LabNetIdReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LabNetProt.Server.LabNetIdReply.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // uint32 major_version = 2;
  if (this->major_version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->major_version(), output);
  }

  // uint32 minor_version = 3;
  if (this->minor_version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->minor_version(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:LabNetProt.Server.LabNetIdReply)
}

::google::protobuf::uint8* LabNetIdReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LabNetProt.Server.LabNetIdReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LabNetProt.Server.LabNetIdReply.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // uint32 major_version = 2;
  if (this->major_version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->major_version(), target);
  }

  // uint32 minor_version = 3;
  if (this->minor_version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->minor_version(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LabNetProt.Server.LabNetIdReply)
  return target;
}

size_t LabNetIdReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LabNetProt.Server.LabNetIdReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // uint32 major_version = 2;
  if (this->major_version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->major_version());
  }

  // uint32 minor_version = 3;
  if (this->minor_version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->minor_version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LabNetIdReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LabNetProt.Server.LabNetIdReply)
  GOOGLE_DCHECK_NE(&from, this);
  const LabNetIdReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LabNetIdReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LabNetProt.Server.LabNetIdReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LabNetProt.Server.LabNetIdReply)
    MergeFrom(*source);
  }
}

void LabNetIdReply::MergeFrom(const LabNetIdReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LabNetProt.Server.LabNetIdReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.major_version() != 0) {
    set_major_version(from.major_version());
  }
  if (from.minor_version() != 0) {
    set_minor_version(from.minor_version());
  }
}

void LabNetIdReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LabNetProt.Server.LabNetIdReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LabNetIdReply::CopyFrom(const LabNetIdReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LabNetProt.Server.LabNetIdReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LabNetIdReply::IsInitialized() const {
  return true;
}

void LabNetIdReply::Swap(LabNetIdReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LabNetIdReply::InternalSwap(LabNetIdReply* other) {
  using std::swap;
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(major_version_, other->major_version_);
  swap(minor_version_, other->minor_version_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LabNetIdReply::GetMetadata() const {
  protobuf_LabNetServer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LabNetServer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DigitalOutLoopStartResult::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DigitalOutLoopStartResult::kIsSucceedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DigitalOutLoopStartResult::DigitalOutLoopStartResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_LabNetServer_2eproto::scc_info_DigitalOutLoopStartResult.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:LabNetProt.Server.DigitalOutLoopStartResult)
}
DigitalOutLoopStartResult::DigitalOutLoopStartResult(const DigitalOutLoopStartResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  is_succeed_ = from.is_succeed_;
  // @@protoc_insertion_point(copy_constructor:LabNetProt.Server.DigitalOutLoopStartResult)
}

void DigitalOutLoopStartResult::SharedCtor() {
  is_succeed_ = false;
}

DigitalOutLoopStartResult::~DigitalOutLoopStartResult() {
  // @@protoc_insertion_point(destructor:LabNetProt.Server.DigitalOutLoopStartResult)
  SharedDtor();
}

void DigitalOutLoopStartResult::SharedDtor() {
}

void DigitalOutLoopStartResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DigitalOutLoopStartResult::descriptor() {
  ::protobuf_LabNetServer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LabNetServer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DigitalOutLoopStartResult& DigitalOutLoopStartResult::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_LabNetServer_2eproto::scc_info_DigitalOutLoopStartResult.base);
  return *internal_default_instance();
}


void DigitalOutLoopStartResult::Clear() {
// @@protoc_insertion_point(message_clear_start:LabNetProt.Server.DigitalOutLoopStartResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  is_succeed_ = false;
  _internal_metadata_.Clear();
}

bool DigitalOutLoopStartResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LabNetProt.Server.DigitalOutLoopStartResult)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool is_succeed = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_succeed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LabNetProt.Server.DigitalOutLoopStartResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LabNetProt.Server.DigitalOutLoopStartResult)
  return false;
#undef DO_
}

void DigitalOutLoopStartResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LabNetProt.Server.DigitalOutLoopStartResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_succeed = 1;
  if (this->is_succeed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->is_succeed(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:LabNetProt.Server.DigitalOutLoopStartResult)
}

::google::protobuf::uint8* DigitalOutLoopStartResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LabNetProt.Server.DigitalOutLoopStartResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_succeed = 1;
  if (this->is_succeed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->is_succeed(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LabNetProt.Server.DigitalOutLoopStartResult)
  return target;
}

size_t DigitalOutLoopStartResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LabNetProt.Server.DigitalOutLoopStartResult)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool is_succeed = 1;
  if (this->is_succeed() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DigitalOutLoopStartResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LabNetProt.Server.DigitalOutLoopStartResult)
  GOOGLE_DCHECK_NE(&from, this);
  const DigitalOutLoopStartResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DigitalOutLoopStartResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LabNetProt.Server.DigitalOutLoopStartResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LabNetProt.Server.DigitalOutLoopStartResult)
    MergeFrom(*source);
  }
}

void DigitalOutLoopStartResult::MergeFrom(const DigitalOutLoopStartResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LabNetProt.Server.DigitalOutLoopStartResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.is_succeed() != 0) {
    set_is_succeed(from.is_succeed());
  }
}

void DigitalOutLoopStartResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LabNetProt.Server.DigitalOutLoopStartResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DigitalOutLoopStartResult::CopyFrom(const DigitalOutLoopStartResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LabNetProt.Server.DigitalOutLoopStartResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DigitalOutLoopStartResult::IsInitialized() const {
  return true;
}

void DigitalOutLoopStartResult::Swap(DigitalOutLoopStartResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DigitalOutLoopStartResult::InternalSwap(DigitalOutLoopStartResult* other) {
  using std::swap;
  swap(is_succeed_, other->is_succeed_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DigitalOutLoopStartResult::GetMetadata() const {
  protobuf_LabNetServer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LabNetServer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DigitalOutLoopStopped::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DigitalOutLoopStopped::kLoopNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DigitalOutLoopStopped::DigitalOutLoopStopped()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_LabNetServer_2eproto::scc_info_DigitalOutLoopStopped.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:LabNetProt.Server.DigitalOutLoopStopped)
}
DigitalOutLoopStopped::DigitalOutLoopStopped(const DigitalOutLoopStopped& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  loop_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.loop_name().size() > 0) {
    loop_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.loop_name_);
  }
  // @@protoc_insertion_point(copy_constructor:LabNetProt.Server.DigitalOutLoopStopped)
}

void DigitalOutLoopStopped::SharedCtor() {
  loop_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DigitalOutLoopStopped::~DigitalOutLoopStopped() {
  // @@protoc_insertion_point(destructor:LabNetProt.Server.DigitalOutLoopStopped)
  SharedDtor();
}

void DigitalOutLoopStopped::SharedDtor() {
  loop_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DigitalOutLoopStopped::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DigitalOutLoopStopped::descriptor() {
  ::protobuf_LabNetServer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LabNetServer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DigitalOutLoopStopped& DigitalOutLoopStopped::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_LabNetServer_2eproto::scc_info_DigitalOutLoopStopped.base);
  return *internal_default_instance();
}


void DigitalOutLoopStopped::Clear() {
// @@protoc_insertion_point(message_clear_start:LabNetProt.Server.DigitalOutLoopStopped)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  loop_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool DigitalOutLoopStopped::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LabNetProt.Server.DigitalOutLoopStopped)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string loop_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_loop_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->loop_name().data(), static_cast<int>(this->loop_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LabNetProt.Server.DigitalOutLoopStopped.loop_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LabNetProt.Server.DigitalOutLoopStopped)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LabNetProt.Server.DigitalOutLoopStopped)
  return false;
#undef DO_
}

void DigitalOutLoopStopped::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LabNetProt.Server.DigitalOutLoopStopped)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string loop_name = 1;
  if (this->loop_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->loop_name().data(), static_cast<int>(this->loop_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LabNetProt.Server.DigitalOutLoopStopped.loop_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->loop_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:LabNetProt.Server.DigitalOutLoopStopped)
}

::google::protobuf::uint8* DigitalOutLoopStopped::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LabNetProt.Server.DigitalOutLoopStopped)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string loop_name = 1;
  if (this->loop_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->loop_name().data(), static_cast<int>(this->loop_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LabNetProt.Server.DigitalOutLoopStopped.loop_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->loop_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LabNetProt.Server.DigitalOutLoopStopped)
  return target;
}

size_t DigitalOutLoopStopped::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LabNetProt.Server.DigitalOutLoopStopped)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string loop_name = 1;
  if (this->loop_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->loop_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DigitalOutLoopStopped::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LabNetProt.Server.DigitalOutLoopStopped)
  GOOGLE_DCHECK_NE(&from, this);
  const DigitalOutLoopStopped* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DigitalOutLoopStopped>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LabNetProt.Server.DigitalOutLoopStopped)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LabNetProt.Server.DigitalOutLoopStopped)
    MergeFrom(*source);
  }
}

void DigitalOutLoopStopped::MergeFrom(const DigitalOutLoopStopped& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LabNetProt.Server.DigitalOutLoopStopped)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.loop_name().size() > 0) {

    loop_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.loop_name_);
  }
}

void DigitalOutLoopStopped::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LabNetProt.Server.DigitalOutLoopStopped)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DigitalOutLoopStopped::CopyFrom(const DigitalOutLoopStopped& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LabNetProt.Server.DigitalOutLoopStopped)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DigitalOutLoopStopped::IsInitialized() const {
  return true;
}

void DigitalOutLoopStopped::Swap(DigitalOutLoopStopped* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DigitalOutLoopStopped::InternalSwap(DigitalOutLoopStopped* other) {
  using std::swap;
  loop_name_.Swap(&other->loop_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DigitalOutLoopStopped::GetMetadata() const {
  protobuf_LabNetServer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LabNetServer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ServerWrappedMessage::InitAsDefaultInstance() {
  ::LabNetProt::Server::_ServerWrappedMessage_default_instance_.digital_out_state_ = const_cast< ::LabNetProt::Server::DigitalOutState*>(
      ::LabNetProt::Server::DigitalOutState::internal_default_instance());
  ::LabNetProt::Server::_ServerWrappedMessage_default_instance_.digital_in_state_ = const_cast< ::LabNetProt::Server::DigitalInState*>(
      ::LabNetProt::Server::DigitalInState::internal_default_instance());
  ::LabNetProt::Server::_ServerWrappedMessage_default_instance_.new_byte_data_ = const_cast< ::LabNetProt::Server::NewByteData*>(
      ::LabNetProt::Server::NewByteData::internal_default_instance());
  ::LabNetProt::Server::_ServerWrappedMessage_default_instance_.data_write_complete_ = const_cast< ::LabNetProt::Server::DataWriteComplete*>(
      ::LabNetProt::Server::DataWriteComplete::internal_default_instance());
  ::LabNetProt::Server::_ServerWrappedMessage_default_instance_.interface_init_result_ = const_cast< ::LabNetProt::Server::InterfaceInitResult*>(
      ::LabNetProt::Server::InterfaceInitResult::internal_default_instance());
  ::LabNetProt::Server::_ServerWrappedMessage_default_instance_.digital_in_init_result_ = const_cast< ::LabNetProt::Server::DigitalInInitResult*>(
      ::LabNetProt::Server::DigitalInInitResult::internal_default_instance());
  ::LabNetProt::Server::_ServerWrappedMessage_default_instance_.digital_out_init_result_ = const_cast< ::LabNetProt::Server::DigitalOutInitResult*>(
      ::LabNetProt::Server::DigitalOutInitResult::internal_default_instance());
  ::LabNetProt::Server::_ServerWrappedMessage_default_instance_.only_one_connection_allowed_ = const_cast< ::LabNetProt::Server::OnlyOneConnectionAllowed*>(
      ::LabNetProt::Server::OnlyOneConnectionAllowed::internal_default_instance());
  ::LabNetProt::Server::_ServerWrappedMessage_default_instance_.reset_ = const_cast< ::LabNetProt::Server::LabNetResetReply*>(
      ::LabNetProt::Server::LabNetResetReply::internal_default_instance());
  ::LabNetProt::Server::_ServerWrappedMessage_default_instance_.id_ = const_cast< ::LabNetProt::Server::LabNetIdReply*>(
      ::LabNetProt::Server::LabNetIdReply::internal_default_instance());
  ::LabNetProt::Server::_ServerWrappedMessage_default_instance_.interface_lost_ = const_cast< ::LabNetProt::Server::InterfaceLost*>(
      ::LabNetProt::Server::InterfaceLost::internal_default_instance());
  ::LabNetProt::Server::_ServerWrappedMessage_default_instance_.interface_reconnected_ = const_cast< ::LabNetProt::Server::InterfaceReconnected*>(
      ::LabNetProt::Server::InterfaceReconnected::internal_default_instance());
  ::LabNetProt::Server::_ServerWrappedMessage_default_instance_.digital_out_loop_start_result_ = const_cast< ::LabNetProt::Server::DigitalOutLoopStartResult*>(
      ::LabNetProt::Server::DigitalOutLoopStartResult::internal_default_instance());
  ::LabNetProt::Server::_ServerWrappedMessage_default_instance_.digital_out_loop_stopped_ = const_cast< ::LabNetProt::Server::DigitalOutLoopStopped*>(
      ::LabNetProt::Server::DigitalOutLoopStopped::internal_default_instance());
}
void ServerWrappedMessage::set_allocated_digital_out_state(::LabNetProt::Server::DigitalOutState* digital_out_state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_server_message();
  if (digital_out_state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      digital_out_state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, digital_out_state, submessage_arena);
    }
    set_has_digital_out_state();
    server_message_.digital_out_state_ = digital_out_state;
  }
  // @@protoc_insertion_point(field_set_allocated:LabNetProt.Server.ServerWrappedMessage.digital_out_state)
}
void ServerWrappedMessage::set_allocated_digital_in_state(::LabNetProt::Server::DigitalInState* digital_in_state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_server_message();
  if (digital_in_state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      digital_in_state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, digital_in_state, submessage_arena);
    }
    set_has_digital_in_state();
    server_message_.digital_in_state_ = digital_in_state;
  }
  // @@protoc_insertion_point(field_set_allocated:LabNetProt.Server.ServerWrappedMessage.digital_in_state)
}
void ServerWrappedMessage::set_allocated_new_byte_data(::LabNetProt::Server::NewByteData* new_byte_data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_server_message();
  if (new_byte_data) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      new_byte_data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, new_byte_data, submessage_arena);
    }
    set_has_new_byte_data();
    server_message_.new_byte_data_ = new_byte_data;
  }
  // @@protoc_insertion_point(field_set_allocated:LabNetProt.Server.ServerWrappedMessage.new_byte_data)
}
void ServerWrappedMessage::set_allocated_data_write_complete(::LabNetProt::Server::DataWriteComplete* data_write_complete) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_server_message();
  if (data_write_complete) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      data_write_complete = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, data_write_complete, submessage_arena);
    }
    set_has_data_write_complete();
    server_message_.data_write_complete_ = data_write_complete;
  }
  // @@protoc_insertion_point(field_set_allocated:LabNetProt.Server.ServerWrappedMessage.data_write_complete)
}
void ServerWrappedMessage::set_allocated_interface_init_result(::LabNetProt::Server::InterfaceInitResult* interface_init_result) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_server_message();
  if (interface_init_result) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      interface_init_result = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, interface_init_result, submessage_arena);
    }
    set_has_interface_init_result();
    server_message_.interface_init_result_ = interface_init_result;
  }
  // @@protoc_insertion_point(field_set_allocated:LabNetProt.Server.ServerWrappedMessage.interface_init_result)
}
void ServerWrappedMessage::set_allocated_digital_in_init_result(::LabNetProt::Server::DigitalInInitResult* digital_in_init_result) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_server_message();
  if (digital_in_init_result) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      digital_in_init_result = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, digital_in_init_result, submessage_arena);
    }
    set_has_digital_in_init_result();
    server_message_.digital_in_init_result_ = digital_in_init_result;
  }
  // @@protoc_insertion_point(field_set_allocated:LabNetProt.Server.ServerWrappedMessage.digital_in_init_result)
}
void ServerWrappedMessage::set_allocated_digital_out_init_result(::LabNetProt::Server::DigitalOutInitResult* digital_out_init_result) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_server_message();
  if (digital_out_init_result) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      digital_out_init_result = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, digital_out_init_result, submessage_arena);
    }
    set_has_digital_out_init_result();
    server_message_.digital_out_init_result_ = digital_out_init_result;
  }
  // @@protoc_insertion_point(field_set_allocated:LabNetProt.Server.ServerWrappedMessage.digital_out_init_result)
}
void ServerWrappedMessage::set_allocated_only_one_connection_allowed(::LabNetProt::Server::OnlyOneConnectionAllowed* only_one_connection_allowed) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_server_message();
  if (only_one_connection_allowed) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      only_one_connection_allowed = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, only_one_connection_allowed, submessage_arena);
    }
    set_has_only_one_connection_allowed();
    server_message_.only_one_connection_allowed_ = only_one_connection_allowed;
  }
  // @@protoc_insertion_point(field_set_allocated:LabNetProt.Server.ServerWrappedMessage.only_one_connection_allowed)
}
void ServerWrappedMessage::set_allocated_reset(::LabNetProt::Server::LabNetResetReply* reset) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_server_message();
  if (reset) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      reset = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, reset, submessage_arena);
    }
    set_has_reset();
    server_message_.reset_ = reset;
  }
  // @@protoc_insertion_point(field_set_allocated:LabNetProt.Server.ServerWrappedMessage.reset)
}
void ServerWrappedMessage::set_allocated_id(::LabNetProt::Server::LabNetIdReply* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_server_message();
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    set_has_id();
    server_message_.id_ = id;
  }
  // @@protoc_insertion_point(field_set_allocated:LabNetProt.Server.ServerWrappedMessage.id)
}
void ServerWrappedMessage::set_allocated_interface_lost(::LabNetProt::Server::InterfaceLost* interface_lost) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_server_message();
  if (interface_lost) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      interface_lost = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, interface_lost, submessage_arena);
    }
    set_has_interface_lost();
    server_message_.interface_lost_ = interface_lost;
  }
  // @@protoc_insertion_point(field_set_allocated:LabNetProt.Server.ServerWrappedMessage.interface_lost)
}
void ServerWrappedMessage::set_allocated_interface_reconnected(::LabNetProt::Server::InterfaceReconnected* interface_reconnected) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_server_message();
  if (interface_reconnected) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      interface_reconnected = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, interface_reconnected, submessage_arena);
    }
    set_has_interface_reconnected();
    server_message_.interface_reconnected_ = interface_reconnected;
  }
  // @@protoc_insertion_point(field_set_allocated:LabNetProt.Server.ServerWrappedMessage.interface_reconnected)
}
void ServerWrappedMessage::set_allocated_digital_out_loop_start_result(::LabNetProt::Server::DigitalOutLoopStartResult* digital_out_loop_start_result) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_server_message();
  if (digital_out_loop_start_result) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      digital_out_loop_start_result = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, digital_out_loop_start_result, submessage_arena);
    }
    set_has_digital_out_loop_start_result();
    server_message_.digital_out_loop_start_result_ = digital_out_loop_start_result;
  }
  // @@protoc_insertion_point(field_set_allocated:LabNetProt.Server.ServerWrappedMessage.digital_out_loop_start_result)
}
void ServerWrappedMessage::set_allocated_digital_out_loop_stopped(::LabNetProt::Server::DigitalOutLoopStopped* digital_out_loop_stopped) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_server_message();
  if (digital_out_loop_stopped) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      digital_out_loop_stopped = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, digital_out_loop_stopped, submessage_arena);
    }
    set_has_digital_out_loop_stopped();
    server_message_.digital_out_loop_stopped_ = digital_out_loop_stopped;
  }
  // @@protoc_insertion_point(field_set_allocated:LabNetProt.Server.ServerWrappedMessage.digital_out_loop_stopped)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerWrappedMessage::kDigitalOutStateFieldNumber;
const int ServerWrappedMessage::kDigitalInStateFieldNumber;
const int ServerWrappedMessage::kNewByteDataFieldNumber;
const int ServerWrappedMessage::kDataWriteCompleteFieldNumber;
const int ServerWrappedMessage::kInterfaceInitResultFieldNumber;
const int ServerWrappedMessage::kDigitalInInitResultFieldNumber;
const int ServerWrappedMessage::kDigitalOutInitResultFieldNumber;
const int ServerWrappedMessage::kOnlyOneConnectionAllowedFieldNumber;
const int ServerWrappedMessage::kResetFieldNumber;
const int ServerWrappedMessage::kIdFieldNumber;
const int ServerWrappedMessage::kInterfaceLostFieldNumber;
const int ServerWrappedMessage::kInterfaceReconnectedFieldNumber;
const int ServerWrappedMessage::kDigitalOutLoopStartResultFieldNumber;
const int ServerWrappedMessage::kDigitalOutLoopStoppedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerWrappedMessage::ServerWrappedMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_LabNetServer_2eproto::scc_info_ServerWrappedMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:LabNetProt.Server.ServerWrappedMessage)
}
ServerWrappedMessage::ServerWrappedMessage(const ServerWrappedMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_server_message();
  switch (from.server_message_case()) {
    case kDigitalOutState: {
      mutable_digital_out_state()->::LabNetProt::Server::DigitalOutState::MergeFrom(from.digital_out_state());
      break;
    }
    case kDigitalInState: {
      mutable_digital_in_state()->::LabNetProt::Server::DigitalInState::MergeFrom(from.digital_in_state());
      break;
    }
    case kNewByteData: {
      mutable_new_byte_data()->::LabNetProt::Server::NewByteData::MergeFrom(from.new_byte_data());
      break;
    }
    case kDataWriteComplete: {
      mutable_data_write_complete()->::LabNetProt::Server::DataWriteComplete::MergeFrom(from.data_write_complete());
      break;
    }
    case kInterfaceInitResult: {
      mutable_interface_init_result()->::LabNetProt::Server::InterfaceInitResult::MergeFrom(from.interface_init_result());
      break;
    }
    case kDigitalInInitResult: {
      mutable_digital_in_init_result()->::LabNetProt::Server::DigitalInInitResult::MergeFrom(from.digital_in_init_result());
      break;
    }
    case kDigitalOutInitResult: {
      mutable_digital_out_init_result()->::LabNetProt::Server::DigitalOutInitResult::MergeFrom(from.digital_out_init_result());
      break;
    }
    case kOnlyOneConnectionAllowed: {
      mutable_only_one_connection_allowed()->::LabNetProt::Server::OnlyOneConnectionAllowed::MergeFrom(from.only_one_connection_allowed());
      break;
    }
    case kReset: {
      mutable_reset()->::LabNetProt::Server::LabNetResetReply::MergeFrom(from.reset());
      break;
    }
    case kId: {
      mutable_id()->::LabNetProt::Server::LabNetIdReply::MergeFrom(from.id());
      break;
    }
    case kInterfaceLost: {
      mutable_interface_lost()->::LabNetProt::Server::InterfaceLost::MergeFrom(from.interface_lost());
      break;
    }
    case kInterfaceReconnected: {
      mutable_interface_reconnected()->::LabNetProt::Server::InterfaceReconnected::MergeFrom(from.interface_reconnected());
      break;
    }
    case kDigitalOutLoopStartResult: {
      mutable_digital_out_loop_start_result()->::LabNetProt::Server::DigitalOutLoopStartResult::MergeFrom(from.digital_out_loop_start_result());
      break;
    }
    case kDigitalOutLoopStopped: {
      mutable_digital_out_loop_stopped()->::LabNetProt::Server::DigitalOutLoopStopped::MergeFrom(from.digital_out_loop_stopped());
      break;
    }
    case SERVER_MESSAGE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:LabNetProt.Server.ServerWrappedMessage)
}

void ServerWrappedMessage::SharedCtor() {
  clear_has_server_message();
}

ServerWrappedMessage::~ServerWrappedMessage() {
  // @@protoc_insertion_point(destructor:LabNetProt.Server.ServerWrappedMessage)
  SharedDtor();
}

void ServerWrappedMessage::SharedDtor() {
  if (has_server_message()) {
    clear_server_message();
  }
}

void ServerWrappedMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ServerWrappedMessage::descriptor() {
  ::protobuf_LabNetServer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LabNetServer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerWrappedMessage& ServerWrappedMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_LabNetServer_2eproto::scc_info_ServerWrappedMessage.base);
  return *internal_default_instance();
}


void ServerWrappedMessage::clear_server_message() {
// @@protoc_insertion_point(one_of_clear_start:LabNetProt.Server.ServerWrappedMessage)
  switch (server_message_case()) {
    case kDigitalOutState: {
      delete server_message_.digital_out_state_;
      break;
    }
    case kDigitalInState: {
      delete server_message_.digital_in_state_;
      break;
    }
    case kNewByteData: {
      delete server_message_.new_byte_data_;
      break;
    }
    case kDataWriteComplete: {
      delete server_message_.data_write_complete_;
      break;
    }
    case kInterfaceInitResult: {
      delete server_message_.interface_init_result_;
      break;
    }
    case kDigitalInInitResult: {
      delete server_message_.digital_in_init_result_;
      break;
    }
    case kDigitalOutInitResult: {
      delete server_message_.digital_out_init_result_;
      break;
    }
    case kOnlyOneConnectionAllowed: {
      delete server_message_.only_one_connection_allowed_;
      break;
    }
    case kReset: {
      delete server_message_.reset_;
      break;
    }
    case kId: {
      delete server_message_.id_;
      break;
    }
    case kInterfaceLost: {
      delete server_message_.interface_lost_;
      break;
    }
    case kInterfaceReconnected: {
      delete server_message_.interface_reconnected_;
      break;
    }
    case kDigitalOutLoopStartResult: {
      delete server_message_.digital_out_loop_start_result_;
      break;
    }
    case kDigitalOutLoopStopped: {
      delete server_message_.digital_out_loop_stopped_;
      break;
    }
    case SERVER_MESSAGE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = SERVER_MESSAGE_NOT_SET;
}


void ServerWrappedMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:LabNetProt.Server.ServerWrappedMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_server_message();
  _internal_metadata_.Clear();
}

bool ServerWrappedMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LabNetProt.Server.ServerWrappedMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .LabNetProt.Server.DigitalOutState digital_out_state = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_digital_out_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .LabNetProt.Server.DigitalInState digital_in_state = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_digital_in_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .LabNetProt.Server.NewByteData new_byte_data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_new_byte_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .LabNetProt.Server.DataWriteComplete data_write_complete = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data_write_complete()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .LabNetProt.Server.InterfaceInitResult interface_init_result = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_interface_init_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .LabNetProt.Server.DigitalInInitResult digital_in_init_result = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_digital_in_init_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .LabNetProt.Server.DigitalOutInitResult digital_out_init_result = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_digital_out_init_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .LabNetProt.Server.OnlyOneConnectionAllowed only_one_connection_allowed = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_only_one_connection_allowed()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .LabNetProt.Server.LabNetResetReply reset = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_reset()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .LabNetProt.Server.LabNetIdReply id = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .LabNetProt.Server.InterfaceLost interface_lost = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_interface_lost()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .LabNetProt.Server.InterfaceReconnected interface_reconnected = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_interface_reconnected()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .LabNetProt.Server.DigitalOutLoopStartResult digital_out_loop_start_result = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_digital_out_loop_start_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .LabNetProt.Server.DigitalOutLoopStopped digital_out_loop_stopped = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_digital_out_loop_stopped()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LabNetProt.Server.ServerWrappedMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LabNetProt.Server.ServerWrappedMessage)
  return false;
#undef DO_
}

void ServerWrappedMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LabNetProt.Server.ServerWrappedMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .LabNetProt.Server.DigitalOutState digital_out_state = 1;
  if (has_digital_out_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_digital_out_state(), output);
  }

  // .LabNetProt.Server.DigitalInState digital_in_state = 2;
  if (has_digital_in_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_digital_in_state(), output);
  }

  // .LabNetProt.Server.NewByteData new_byte_data = 3;
  if (has_new_byte_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_new_byte_data(), output);
  }

  // .LabNetProt.Server.DataWriteComplete data_write_complete = 4;
  if (has_data_write_complete()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_data_write_complete(), output);
  }

  // .LabNetProt.Server.InterfaceInitResult interface_init_result = 5;
  if (has_interface_init_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_interface_init_result(), output);
  }

  // .LabNetProt.Server.DigitalInInitResult digital_in_init_result = 6;
  if (has_digital_in_init_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_digital_in_init_result(), output);
  }

  // .LabNetProt.Server.DigitalOutInitResult digital_out_init_result = 7;
  if (has_digital_out_init_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_digital_out_init_result(), output);
  }

  // .LabNetProt.Server.OnlyOneConnectionAllowed only_one_connection_allowed = 8;
  if (has_only_one_connection_allowed()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_only_one_connection_allowed(), output);
  }

  // .LabNetProt.Server.LabNetResetReply reset = 9;
  if (has_reset()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_reset(), output);
  }

  // .LabNetProt.Server.LabNetIdReply id = 10;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_id(), output);
  }

  // .LabNetProt.Server.InterfaceLost interface_lost = 11;
  if (has_interface_lost()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_interface_lost(), output);
  }

  // .LabNetProt.Server.InterfaceReconnected interface_reconnected = 12;
  if (has_interface_reconnected()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_internal_interface_reconnected(), output);
  }

  // .LabNetProt.Server.DigitalOutLoopStartResult digital_out_loop_start_result = 13;
  if (has_digital_out_loop_start_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->_internal_digital_out_loop_start_result(), output);
  }

  // .LabNetProt.Server.DigitalOutLoopStopped digital_out_loop_stopped = 14;
  if (has_digital_out_loop_stopped()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->_internal_digital_out_loop_stopped(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:LabNetProt.Server.ServerWrappedMessage)
}

::google::protobuf::uint8* ServerWrappedMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LabNetProt.Server.ServerWrappedMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .LabNetProt.Server.DigitalOutState digital_out_state = 1;
  if (has_digital_out_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_digital_out_state(), deterministic, target);
  }

  // .LabNetProt.Server.DigitalInState digital_in_state = 2;
  if (has_digital_in_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_digital_in_state(), deterministic, target);
  }

  // .LabNetProt.Server.NewByteData new_byte_data = 3;
  if (has_new_byte_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_new_byte_data(), deterministic, target);
  }

  // .LabNetProt.Server.DataWriteComplete data_write_complete = 4;
  if (has_data_write_complete()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_data_write_complete(), deterministic, target);
  }

  // .LabNetProt.Server.InterfaceInitResult interface_init_result = 5;
  if (has_interface_init_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_interface_init_result(), deterministic, target);
  }

  // .LabNetProt.Server.DigitalInInitResult digital_in_init_result = 6;
  if (has_digital_in_init_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_digital_in_init_result(), deterministic, target);
  }

  // .LabNetProt.Server.DigitalOutInitResult digital_out_init_result = 7;
  if (has_digital_out_init_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_digital_out_init_result(), deterministic, target);
  }

  // .LabNetProt.Server.OnlyOneConnectionAllowed only_one_connection_allowed = 8;
  if (has_only_one_connection_allowed()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_only_one_connection_allowed(), deterministic, target);
  }

  // .LabNetProt.Server.LabNetResetReply reset = 9;
  if (has_reset()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_reset(), deterministic, target);
  }

  // .LabNetProt.Server.LabNetIdReply id = 10;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_id(), deterministic, target);
  }

  // .LabNetProt.Server.InterfaceLost interface_lost = 11;
  if (has_interface_lost()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_interface_lost(), deterministic, target);
  }

  // .LabNetProt.Server.InterfaceReconnected interface_reconnected = 12;
  if (has_interface_reconnected()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->_internal_interface_reconnected(), deterministic, target);
  }

  // .LabNetProt.Server.DigitalOutLoopStartResult digital_out_loop_start_result = 13;
  if (has_digital_out_loop_start_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->_internal_digital_out_loop_start_result(), deterministic, target);
  }

  // .LabNetProt.Server.DigitalOutLoopStopped digital_out_loop_stopped = 14;
  if (has_digital_out_loop_stopped()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->_internal_digital_out_loop_stopped(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LabNetProt.Server.ServerWrappedMessage)
  return target;
}

size_t ServerWrappedMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LabNetProt.Server.ServerWrappedMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (server_message_case()) {
    // .LabNetProt.Server.DigitalOutState digital_out_state = 1;
    case kDigitalOutState: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *server_message_.digital_out_state_);
      break;
    }
    // .LabNetProt.Server.DigitalInState digital_in_state = 2;
    case kDigitalInState: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *server_message_.digital_in_state_);
      break;
    }
    // .LabNetProt.Server.NewByteData new_byte_data = 3;
    case kNewByteData: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *server_message_.new_byte_data_);
      break;
    }
    // .LabNetProt.Server.DataWriteComplete data_write_complete = 4;
    case kDataWriteComplete: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *server_message_.data_write_complete_);
      break;
    }
    // .LabNetProt.Server.InterfaceInitResult interface_init_result = 5;
    case kInterfaceInitResult: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *server_message_.interface_init_result_);
      break;
    }
    // .LabNetProt.Server.DigitalInInitResult digital_in_init_result = 6;
    case kDigitalInInitResult: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *server_message_.digital_in_init_result_);
      break;
    }
    // .LabNetProt.Server.DigitalOutInitResult digital_out_init_result = 7;
    case kDigitalOutInitResult: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *server_message_.digital_out_init_result_);
      break;
    }
    // .LabNetProt.Server.OnlyOneConnectionAllowed only_one_connection_allowed = 8;
    case kOnlyOneConnectionAllowed: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *server_message_.only_one_connection_allowed_);
      break;
    }
    // .LabNetProt.Server.LabNetResetReply reset = 9;
    case kReset: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *server_message_.reset_);
      break;
    }
    // .LabNetProt.Server.LabNetIdReply id = 10;
    case kId: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *server_message_.id_);
      break;
    }
    // .LabNetProt.Server.InterfaceLost interface_lost = 11;
    case kInterfaceLost: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *server_message_.interface_lost_);
      break;
    }
    // .LabNetProt.Server.InterfaceReconnected interface_reconnected = 12;
    case kInterfaceReconnected: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *server_message_.interface_reconnected_);
      break;
    }
    // .LabNetProt.Server.DigitalOutLoopStartResult digital_out_loop_start_result = 13;
    case kDigitalOutLoopStartResult: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *server_message_.digital_out_loop_start_result_);
      break;
    }
    // .LabNetProt.Server.DigitalOutLoopStopped digital_out_loop_stopped = 14;
    case kDigitalOutLoopStopped: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *server_message_.digital_out_loop_stopped_);
      break;
    }
    case SERVER_MESSAGE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServerWrappedMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LabNetProt.Server.ServerWrappedMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerWrappedMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerWrappedMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LabNetProt.Server.ServerWrappedMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LabNetProt.Server.ServerWrappedMessage)
    MergeFrom(*source);
  }
}

void ServerWrappedMessage::MergeFrom(const ServerWrappedMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LabNetProt.Server.ServerWrappedMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.server_message_case()) {
    case kDigitalOutState: {
      mutable_digital_out_state()->::LabNetProt::Server::DigitalOutState::MergeFrom(from.digital_out_state());
      break;
    }
    case kDigitalInState: {
      mutable_digital_in_state()->::LabNetProt::Server::DigitalInState::MergeFrom(from.digital_in_state());
      break;
    }
    case kNewByteData: {
      mutable_new_byte_data()->::LabNetProt::Server::NewByteData::MergeFrom(from.new_byte_data());
      break;
    }
    case kDataWriteComplete: {
      mutable_data_write_complete()->::LabNetProt::Server::DataWriteComplete::MergeFrom(from.data_write_complete());
      break;
    }
    case kInterfaceInitResult: {
      mutable_interface_init_result()->::LabNetProt::Server::InterfaceInitResult::MergeFrom(from.interface_init_result());
      break;
    }
    case kDigitalInInitResult: {
      mutable_digital_in_init_result()->::LabNetProt::Server::DigitalInInitResult::MergeFrom(from.digital_in_init_result());
      break;
    }
    case kDigitalOutInitResult: {
      mutable_digital_out_init_result()->::LabNetProt::Server::DigitalOutInitResult::MergeFrom(from.digital_out_init_result());
      break;
    }
    case kOnlyOneConnectionAllowed: {
      mutable_only_one_connection_allowed()->::LabNetProt::Server::OnlyOneConnectionAllowed::MergeFrom(from.only_one_connection_allowed());
      break;
    }
    case kReset: {
      mutable_reset()->::LabNetProt::Server::LabNetResetReply::MergeFrom(from.reset());
      break;
    }
    case kId: {
      mutable_id()->::LabNetProt::Server::LabNetIdReply::MergeFrom(from.id());
      break;
    }
    case kInterfaceLost: {
      mutable_interface_lost()->::LabNetProt::Server::InterfaceLost::MergeFrom(from.interface_lost());
      break;
    }
    case kInterfaceReconnected: {
      mutable_interface_reconnected()->::LabNetProt::Server::InterfaceReconnected::MergeFrom(from.interface_reconnected());
      break;
    }
    case kDigitalOutLoopStartResult: {
      mutable_digital_out_loop_start_result()->::LabNetProt::Server::DigitalOutLoopStartResult::MergeFrom(from.digital_out_loop_start_result());
      break;
    }
    case kDigitalOutLoopStopped: {
      mutable_digital_out_loop_stopped()->::LabNetProt::Server::DigitalOutLoopStopped::MergeFrom(from.digital_out_loop_stopped());
      break;
    }
    case SERVER_MESSAGE_NOT_SET: {
      break;
    }
  }
}

void ServerWrappedMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LabNetProt.Server.ServerWrappedMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerWrappedMessage::CopyFrom(const ServerWrappedMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LabNetProt.Server.ServerWrappedMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerWrappedMessage::IsInitialized() const {
  return true;
}

void ServerWrappedMessage::Swap(ServerWrappedMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerWrappedMessage::InternalSwap(ServerWrappedMessage* other) {
  using std::swap;
  swap(server_message_, other->server_message_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ServerWrappedMessage::GetMetadata() const {
  protobuf_LabNetServer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LabNetServer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Server
}  // namespace LabNetProt
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::LabNetProt::Server::DigitalOutState* Arena::CreateMaybeMessage< ::LabNetProt::Server::DigitalOutState >(Arena* arena) {
  return Arena::CreateInternal< ::LabNetProt::Server::DigitalOutState >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::LabNetProt::Server::DigitalInState* Arena::CreateMaybeMessage< ::LabNetProt::Server::DigitalInState >(Arena* arena) {
  return Arena::CreateInternal< ::LabNetProt::Server::DigitalInState >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::LabNetProt::Server::NewByteData* Arena::CreateMaybeMessage< ::LabNetProt::Server::NewByteData >(Arena* arena) {
  return Arena::CreateInternal< ::LabNetProt::Server::NewByteData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::LabNetProt::Server::DataWriteComplete* Arena::CreateMaybeMessage< ::LabNetProt::Server::DataWriteComplete >(Arena* arena) {
  return Arena::CreateInternal< ::LabNetProt::Server::DataWriteComplete >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::LabNetProt::Server::InterfaceInitResult* Arena::CreateMaybeMessage< ::LabNetProt::Server::InterfaceInitResult >(Arena* arena) {
  return Arena::CreateInternal< ::LabNetProt::Server::InterfaceInitResult >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::LabNetProt::Server::InterfaceLost* Arena::CreateMaybeMessage< ::LabNetProt::Server::InterfaceLost >(Arena* arena) {
  return Arena::CreateInternal< ::LabNetProt::Server::InterfaceLost >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::LabNetProt::Server::InterfaceReconnected* Arena::CreateMaybeMessage< ::LabNetProt::Server::InterfaceReconnected >(Arena* arena) {
  return Arena::CreateInternal< ::LabNetProt::Server::InterfaceReconnected >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::LabNetProt::Server::DigitalInInitResult* Arena::CreateMaybeMessage< ::LabNetProt::Server::DigitalInInitResult >(Arena* arena) {
  return Arena::CreateInternal< ::LabNetProt::Server::DigitalInInitResult >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::LabNetProt::Server::DigitalOutInitResult* Arena::CreateMaybeMessage< ::LabNetProt::Server::DigitalOutInitResult >(Arena* arena) {
  return Arena::CreateInternal< ::LabNetProt::Server::DigitalOutInitResult >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::LabNetProt::Server::OnlyOneConnectionAllowed* Arena::CreateMaybeMessage< ::LabNetProt::Server::OnlyOneConnectionAllowed >(Arena* arena) {
  return Arena::CreateInternal< ::LabNetProt::Server::OnlyOneConnectionAllowed >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::LabNetProt::Server::LabNetResetReply* Arena::CreateMaybeMessage< ::LabNetProt::Server::LabNetResetReply >(Arena* arena) {
  return Arena::CreateInternal< ::LabNetProt::Server::LabNetResetReply >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::LabNetProt::Server::LabNetIdReply* Arena::CreateMaybeMessage< ::LabNetProt::Server::LabNetIdReply >(Arena* arena) {
  return Arena::CreateInternal< ::LabNetProt::Server::LabNetIdReply >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::LabNetProt::Server::DigitalOutLoopStartResult* Arena::CreateMaybeMessage< ::LabNetProt::Server::DigitalOutLoopStartResult >(Arena* arena) {
  return Arena::CreateInternal< ::LabNetProt::Server::DigitalOutLoopStartResult >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::LabNetProt::Server::DigitalOutLoopStopped* Arena::CreateMaybeMessage< ::LabNetProt::Server::DigitalOutLoopStopped >(Arena* arena) {
  return Arena::CreateInternal< ::LabNetProt::Server::DigitalOutLoopStopped >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::LabNetProt::Server::ServerWrappedMessage* Arena::CreateMaybeMessage< ::LabNetProt::Server::ServerWrappedMessage >(Arena* arena) {
  return Arena::CreateInternal< ::LabNetProt::Server::ServerWrappedMessage >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
