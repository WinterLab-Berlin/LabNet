// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: LabNetClient.proto

#include "LabNetClient.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_LabNetClient_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_LabNetClient_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_StartDigitalOutLoop_DigitalOutputParameter;
}  // namespace protobuf_LabNetClient_2eproto
namespace protobuf_LabNet_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_LabNet_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PinId;
}  // namespace protobuf_LabNet_2eproto
namespace LabNetProt {
namespace Client {
class IoBoardInitDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IoBoardInit>
      _instance;
} _IoBoardInit_default_instance_;
class IoBoardInitDigitalInDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IoBoardInitDigitalIn>
      _instance;
} _IoBoardInitDigitalIn_default_instance_;
class IoBoardInitDigitalOutDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IoBoardInitDigitalOut>
      _instance;
} _IoBoardInitDigitalOut_default_instance_;
class RfidBoardInitDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RfidBoardInit>
      _instance;
} _RfidBoardInit_default_instance_;
class RfidBoardSetPhaseMatrixDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RfidBoardSetPhaseMatrix>
      _instance;
} _RfidBoardSetPhaseMatrix_default_instance_;
class UartInitDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UartInit>
      _instance;
} _UartInit_default_instance_;
class UartWriteDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UartWriteData>
      _instance;
} _UartWriteData_default_instance_;
class GpioWiringPiInitDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GpioWiringPiInit>
      _instance;
} _GpioWiringPiInit_default_instance_;
class GpioWiringPiInitDigitalInDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GpioWiringPiInitDigitalIn>
      _instance;
} _GpioWiringPiInitDigitalIn_default_instance_;
class GpioWiringPiInitDigitalOutDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GpioWiringPiInitDigitalOut>
      _instance;
} _GpioWiringPiInitDigitalOut_default_instance_;
class DigitalOutSetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DigitalOutSet>
      _instance;
} _DigitalOutSet_default_instance_;
class DigitalOutPulseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DigitalOutPulse>
      _instance;
} _DigitalOutPulse_default_instance_;
class StartDigitalOutLoop_DigitalOutputParameterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StartDigitalOutLoop_DigitalOutputParameter>
      _instance;
} _StartDigitalOutLoop_DigitalOutputParameter_default_instance_;
class StartDigitalOutLoopDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StartDigitalOutLoop>
      _instance;
} _StartDigitalOutLoop_default_instance_;
class StopDigitalOutLoopDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StopDigitalOutLoop>
      _instance;
} _StopDigitalOutLoop_default_instance_;
class LabNetResetRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LabNetResetRequest>
      _instance;
} _LabNetResetRequest_default_instance_;
class LabNetIdRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LabNetIdRequest>
      _instance;
} _LabNetIdRequest_default_instance_;
}  // namespace Client
}  // namespace LabNetProt
namespace protobuf_LabNetClient_2eproto {
static void InitDefaultsIoBoardInit() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::LabNetProt::Client::_IoBoardInit_default_instance_;
    new (ptr) ::LabNetProt::Client::IoBoardInit();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LabNetProt::Client::IoBoardInit::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_IoBoardInit =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsIoBoardInit}, {}};

static void InitDefaultsIoBoardInitDigitalIn() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::LabNetProt::Client::_IoBoardInitDigitalIn_default_instance_;
    new (ptr) ::LabNetProt::Client::IoBoardInitDigitalIn();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LabNetProt::Client::IoBoardInitDigitalIn::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_IoBoardInitDigitalIn =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsIoBoardInitDigitalIn}, {}};

static void InitDefaultsIoBoardInitDigitalOut() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::LabNetProt::Client::_IoBoardInitDigitalOut_default_instance_;
    new (ptr) ::LabNetProt::Client::IoBoardInitDigitalOut();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LabNetProt::Client::IoBoardInitDigitalOut::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_IoBoardInitDigitalOut =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsIoBoardInitDigitalOut}, {}};

static void InitDefaultsRfidBoardInit() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::LabNetProt::Client::_RfidBoardInit_default_instance_;
    new (ptr) ::LabNetProt::Client::RfidBoardInit();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LabNetProt::Client::RfidBoardInit::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RfidBoardInit =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRfidBoardInit}, {}};

static void InitDefaultsRfidBoardSetPhaseMatrix() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::LabNetProt::Client::_RfidBoardSetPhaseMatrix_default_instance_;
    new (ptr) ::LabNetProt::Client::RfidBoardSetPhaseMatrix();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LabNetProt::Client::RfidBoardSetPhaseMatrix::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RfidBoardSetPhaseMatrix =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRfidBoardSetPhaseMatrix}, {}};

static void InitDefaultsUartInit() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::LabNetProt::Client::_UartInit_default_instance_;
    new (ptr) ::LabNetProt::Client::UartInit();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LabNetProt::Client::UartInit::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UartInit =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUartInit}, {}};

static void InitDefaultsUartWriteData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::LabNetProt::Client::_UartWriteData_default_instance_;
    new (ptr) ::LabNetProt::Client::UartWriteData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LabNetProt::Client::UartWriteData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UartWriteData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUartWriteData}, {}};

static void InitDefaultsGpioWiringPiInit() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::LabNetProt::Client::_GpioWiringPiInit_default_instance_;
    new (ptr) ::LabNetProt::Client::GpioWiringPiInit();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LabNetProt::Client::GpioWiringPiInit::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GpioWiringPiInit =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGpioWiringPiInit}, {}};

static void InitDefaultsGpioWiringPiInitDigitalIn() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::LabNetProt::Client::_GpioWiringPiInitDigitalIn_default_instance_;
    new (ptr) ::LabNetProt::Client::GpioWiringPiInitDigitalIn();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LabNetProt::Client::GpioWiringPiInitDigitalIn::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GpioWiringPiInitDigitalIn =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGpioWiringPiInitDigitalIn}, {}};

static void InitDefaultsGpioWiringPiInitDigitalOut() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::LabNetProt::Client::_GpioWiringPiInitDigitalOut_default_instance_;
    new (ptr) ::LabNetProt::Client::GpioWiringPiInitDigitalOut();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LabNetProt::Client::GpioWiringPiInitDigitalOut::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GpioWiringPiInitDigitalOut =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGpioWiringPiInitDigitalOut}, {}};

static void InitDefaultsDigitalOutSet() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::LabNetProt::Client::_DigitalOutSet_default_instance_;
    new (ptr) ::LabNetProt::Client::DigitalOutSet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LabNetProt::Client::DigitalOutSet::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DigitalOutSet =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDigitalOutSet}, {
      &protobuf_LabNet_2eproto::scc_info_PinId.base,}};

static void InitDefaultsDigitalOutPulse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::LabNetProt::Client::_DigitalOutPulse_default_instance_;
    new (ptr) ::LabNetProt::Client::DigitalOutPulse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LabNetProt::Client::DigitalOutPulse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DigitalOutPulse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDigitalOutPulse}, {
      &protobuf_LabNet_2eproto::scc_info_PinId.base,}};

static void InitDefaultsStartDigitalOutLoop_DigitalOutputParameter() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::LabNetProt::Client::_StartDigitalOutLoop_DigitalOutputParameter_default_instance_;
    new (ptr) ::LabNetProt::Client::StartDigitalOutLoop_DigitalOutputParameter();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LabNetProt::Client::StartDigitalOutLoop_DigitalOutputParameter::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_StartDigitalOutLoop_DigitalOutputParameter =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsStartDigitalOutLoop_DigitalOutputParameter}, {
      &protobuf_LabNet_2eproto::scc_info_PinId.base,}};

static void InitDefaultsStartDigitalOutLoop() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::LabNetProt::Client::_StartDigitalOutLoop_default_instance_;
    new (ptr) ::LabNetProt::Client::StartDigitalOutLoop();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LabNetProt::Client::StartDigitalOutLoop::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_StartDigitalOutLoop =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsStartDigitalOutLoop}, {
      &protobuf_LabNetClient_2eproto::scc_info_StartDigitalOutLoop_DigitalOutputParameter.base,}};

static void InitDefaultsStopDigitalOutLoop() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::LabNetProt::Client::_StopDigitalOutLoop_default_instance_;
    new (ptr) ::LabNetProt::Client::StopDigitalOutLoop();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LabNetProt::Client::StopDigitalOutLoop::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_StopDigitalOutLoop =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStopDigitalOutLoop}, {}};

static void InitDefaultsLabNetResetRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::LabNetProt::Client::_LabNetResetRequest_default_instance_;
    new (ptr) ::LabNetProt::Client::LabNetResetRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LabNetProt::Client::LabNetResetRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LabNetResetRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLabNetResetRequest}, {}};

static void InitDefaultsLabNetIdRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::LabNetProt::Client::_LabNetIdRequest_default_instance_;
    new (ptr) ::LabNetProt::Client::LabNetIdRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::LabNetProt::Client::LabNetIdRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LabNetIdRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLabNetIdRequest}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_IoBoardInit.base);
  ::google::protobuf::internal::InitSCC(&scc_info_IoBoardInitDigitalIn.base);
  ::google::protobuf::internal::InitSCC(&scc_info_IoBoardInitDigitalOut.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RfidBoardInit.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RfidBoardSetPhaseMatrix.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UartInit.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UartWriteData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GpioWiringPiInit.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GpioWiringPiInitDigitalIn.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GpioWiringPiInitDigitalOut.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DigitalOutSet.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DigitalOutPulse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StartDigitalOutLoop_DigitalOutputParameter.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StartDigitalOutLoop.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StopDigitalOutLoop.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LabNetResetRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LabNetIdRequest.base);
}

::google::protobuf::Metadata file_level_metadata[17];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Client::IoBoardInit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Client::IoBoardInitDigitalIn, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Client::IoBoardInitDigitalIn, pin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Client::IoBoardInitDigitalIn, resistor_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Client::IoBoardInitDigitalIn, is_inverted_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Client::IoBoardInitDigitalOut, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Client::IoBoardInitDigitalOut, pin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Client::IoBoardInitDigitalOut, is_inverted_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Client::RfidBoardInit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Client::RfidBoardInit, antenna_phase1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Client::RfidBoardInit, antenna_phase2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Client::RfidBoardInit, phase_duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Client::RfidBoardInit, inverted_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Client::RfidBoardSetPhaseMatrix, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Client::RfidBoardSetPhaseMatrix, antenna_phase1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Client::RfidBoardSetPhaseMatrix, antenna_phase2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Client::RfidBoardSetPhaseMatrix, phase_duration_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Client::UartInit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Client::UartInit, port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Client::UartInit, baud_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Client::UartWriteData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Client::UartWriteData, port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Client::UartWriteData, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Client::GpioWiringPiInit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Client::GpioWiringPiInitDigitalIn, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Client::GpioWiringPiInitDigitalIn, pin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Client::GpioWiringPiInitDigitalIn, resistor_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Client::GpioWiringPiInitDigitalIn, is_inverted_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Client::GpioWiringPiInitDigitalOut, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Client::GpioWiringPiInitDigitalOut, pin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Client::GpioWiringPiInitDigitalOut, is_inverted_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Client::DigitalOutSet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Client::DigitalOutSet, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Client::DigitalOutSet, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Client::DigitalOutPulse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Client::DigitalOutPulse, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Client::DigitalOutPulse, high_duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Client::DigitalOutPulse, low_duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Client::DigitalOutPulse, pulses_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Client::StartDigitalOutLoop_DigitalOutputParameter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Client::StartDigitalOutLoop_DigitalOutputParameter, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Client::StartDigitalOutLoop_DigitalOutputParameter, offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Client::StartDigitalOutLoop_DigitalOutputParameter, duration_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Client::StartDigitalOutLoop, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Client::StartDigitalOutLoop, loop_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Client::StartDigitalOutLoop, loop_pause_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Client::StartDigitalOutLoop, digital_outputs_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Client::StopDigitalOutLoop, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Client::StopDigitalOutLoop, loop_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Client::LabNetResetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::LabNetProt::Client::LabNetIdRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::LabNetProt::Client::IoBoardInit)},
  { 5, -1, sizeof(::LabNetProt::Client::IoBoardInitDigitalIn)},
  { 13, -1, sizeof(::LabNetProt::Client::IoBoardInitDigitalOut)},
  { 20, -1, sizeof(::LabNetProt::Client::RfidBoardInit)},
  { 29, -1, sizeof(::LabNetProt::Client::RfidBoardSetPhaseMatrix)},
  { 37, -1, sizeof(::LabNetProt::Client::UartInit)},
  { 44, -1, sizeof(::LabNetProt::Client::UartWriteData)},
  { 51, -1, sizeof(::LabNetProt::Client::GpioWiringPiInit)},
  { 56, -1, sizeof(::LabNetProt::Client::GpioWiringPiInitDigitalIn)},
  { 64, -1, sizeof(::LabNetProt::Client::GpioWiringPiInitDigitalOut)},
  { 71, -1, sizeof(::LabNetProt::Client::DigitalOutSet)},
  { 78, -1, sizeof(::LabNetProt::Client::DigitalOutPulse)},
  { 87, -1, sizeof(::LabNetProt::Client::StartDigitalOutLoop_DigitalOutputParameter)},
  { 95, -1, sizeof(::LabNetProt::Client::StartDigitalOutLoop)},
  { 103, -1, sizeof(::LabNetProt::Client::StopDigitalOutLoop)},
  { 109, -1, sizeof(::LabNetProt::Client::LabNetResetRequest)},
  { 114, -1, sizeof(::LabNetProt::Client::LabNetIdRequest)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::LabNetProt::Client::_IoBoardInit_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::LabNetProt::Client::_IoBoardInitDigitalIn_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::LabNetProt::Client::_IoBoardInitDigitalOut_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::LabNetProt::Client::_RfidBoardInit_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::LabNetProt::Client::_RfidBoardSetPhaseMatrix_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::LabNetProt::Client::_UartInit_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::LabNetProt::Client::_UartWriteData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::LabNetProt::Client::_GpioWiringPiInit_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::LabNetProt::Client::_GpioWiringPiInitDigitalIn_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::LabNetProt::Client::_GpioWiringPiInitDigitalOut_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::LabNetProt::Client::_DigitalOutSet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::LabNetProt::Client::_DigitalOutPulse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::LabNetProt::Client::_StartDigitalOutLoop_DigitalOutputParameter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::LabNetProt::Client::_StartDigitalOutLoop_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::LabNetProt::Client::_StopDigitalOutLoop_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::LabNetProt::Client::_LabNetResetRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::LabNetProt::Client::_LabNetIdRequest_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "LabNetClient.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 17);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\022LabNetClient.proto\022\021LabNetProt.Client\032"
      "\014LabNet.proto\"\r\n\013IoBoardInit\"\263\001\n\024IoBoard"
      "InitDigitalIn\022\013\n\003pin\030\001 \001(\r\022H\n\016resistor_s"
      "tate\030\002 \001(\01620.LabNetProt.Client.IoBoardIn"
      "itDigitalIn.Resistor\022\023\n\013is_inverted\030\003 \001("
      "\010\"/\n\010Resistor\022\007\n\003OFF\020\000\022\r\n\tPULL_DOWN\020\001\022\013\n"
      "\007PULL_UP\020\002\"9\n\025IoBoardInitDigitalOut\022\013\n\003p"
      "in\030\001 \001(\r\022\023\n\013is_inverted\030\002 \001(\010\"i\n\rRfidBoa"
      "rdInit\022\026\n\016antenna_phase1\030\001 \001(\r\022\026\n\016antenn"
      "a_phase2\030\002 \001(\r\022\026\n\016phase_duration\030\003 \001(\r\022\020"
      "\n\010inverted\030\004 \001(\010\"a\n\027RfidBoardSetPhaseMat"
      "rix\022\026\n\016antenna_phase1\030\001 \001(\r\022\026\n\016antenna_p"
      "hase2\030\002 \001(\r\022\026\n\016phase_duration\030\003 \001(\r\"9\n\010U"
      "artInit\022\037\n\004port\030\001 \001(\0162\021.LabNetProt.Uarts"
      "\022\014\n\004baud\030\002 \001(\r\">\n\rUartWriteData\022\037\n\004port\030"
      "\001 \001(\0162\021.LabNetProt.Uarts\022\014\n\004data\030\002 \001(\014\"\022"
      "\n\020GpioWiringPiInit\"\275\001\n\031GpioWiringPiInitD"
      "igitalIn\022\013\n\003pin\030\001 \001(\r\022M\n\016resistor_state\030"
      "\002 \001(\01625.LabNetProt.Client.GpioWiringPiIn"
      "itDigitalIn.Resistor\022\023\n\013is_inverted\030\003 \001("
      "\010\"/\n\010Resistor\022\007\n\003OFF\020\000\022\r\n\tPULL_DOWN\020\001\022\013\n"
      "\007PULL_UP\020\002\">\n\032GpioWiringPiInitDigitalOut"
      "\022\013\n\003pin\030\001 \001(\r\022\023\n\013is_inverted\030\002 \001(\010\"=\n\rDi"
      "gitalOutSet\022\035\n\002id\030\001 \001(\0132\021.LabNetProt.Pin"
      "Id\022\r\n\005state\030\002 \001(\010\"m\n\017DigitalOutPulse\022\035\n\002"
      "id\030\001 \001(\0132\021.LabNetProt.PinId\022\025\n\rhigh_dura"
      "tion\030\002 \001(\r\022\024\n\014low_duration\030\003 \001(\r\022\016\n\006puls"
      "es\030\004 \001(\r\"\357\001\n\023StartDigitalOutLoop\022\021\n\tloop"
      "_name\030\001 \001(\t\022\022\n\nloop_pause\030\002 \001(\r\022V\n\017digit"
      "al_outputs\030\003 \003(\0132=.LabNetProt.Client.Sta"
      "rtDigitalOutLoop.DigitalOutputParameter\032"
      "Y\n\026DigitalOutputParameter\022\035\n\002id\030\001 \001(\0132\021."
      "LabNetProt.PinId\022\016\n\006offset\030\002 \001(\r\022\020\n\010dura"
      "tion\030\003 \001(\r\"\'\n\022StopDigitalOutLoop\022\021\n\tloop"
      "_name\030\001 \001(\t\"\024\n\022LabNetResetRequest\"\021\n\017Lab"
      "NetIdRequest*\272\003\n\021ClientMessageType\022\010\n\004NO"
      "NE\020\000\022\025\n\021LABNET_ID_REQUEST\020\001\022\030\n\024LABNET_RE"
      "SET_REQUEST\020\002\022\021\n\rIO_BOARD_INIT\020\003\022\034\n\030IO_B"
      "OARD_INIT_DIGITAL_IN\020\004\022\035\n\031IO_BOARD_INIT_"
      "DIGITAL_OUT\020\005\022\023\n\017RFID_BOARD_INIT\020\006\022\037\n\033RF"
      "ID_BOARD_SET_PHASE_MATRIX\020\007\022\r\n\tUART_INIT"
      "\020\010\022\023\n\017UART_WRITE_DATA\020\t\022\023\n\017DIGITAL_OUT_S"
      "ET\020\n\022\025\n\021DIGITAL_OUT_PULSE\020\013\022\032\n\026START_DIG"
      "ITAL_OUT_LOOP\020\014\022\031\n\025STOP_DIGITAL_OUT_LOOP"
      "\020\r\022\026\n\022GPIO_WIRINGPI_INIT\020\016\022!\n\035GPIO_WIRIN"
      "GPI_INIT_DIGITAL_IN\020\017\022\"\n\036GPIO_WIRINGPI_I"
      "NIT_DIGITAL_OUT\020\020b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1865);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "LabNetClient.proto", &protobuf_RegisterTypes);
  ::protobuf_LabNet_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_LabNetClient_2eproto
namespace LabNetProt {
namespace Client {
const ::google::protobuf::EnumDescriptor* IoBoardInitDigitalIn_Resistor_descriptor() {
  protobuf_LabNetClient_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LabNetClient_2eproto::file_level_enum_descriptors[0];
}
bool IoBoardInitDigitalIn_Resistor_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const IoBoardInitDigitalIn_Resistor IoBoardInitDigitalIn::OFF;
const IoBoardInitDigitalIn_Resistor IoBoardInitDigitalIn::PULL_DOWN;
const IoBoardInitDigitalIn_Resistor IoBoardInitDigitalIn::PULL_UP;
const IoBoardInitDigitalIn_Resistor IoBoardInitDigitalIn::Resistor_MIN;
const IoBoardInitDigitalIn_Resistor IoBoardInitDigitalIn::Resistor_MAX;
const int IoBoardInitDigitalIn::Resistor_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* GpioWiringPiInitDigitalIn_Resistor_descriptor() {
  protobuf_LabNetClient_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LabNetClient_2eproto::file_level_enum_descriptors[1];
}
bool GpioWiringPiInitDigitalIn_Resistor_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const GpioWiringPiInitDigitalIn_Resistor GpioWiringPiInitDigitalIn::OFF;
const GpioWiringPiInitDigitalIn_Resistor GpioWiringPiInitDigitalIn::PULL_DOWN;
const GpioWiringPiInitDigitalIn_Resistor GpioWiringPiInitDigitalIn::PULL_UP;
const GpioWiringPiInitDigitalIn_Resistor GpioWiringPiInitDigitalIn::Resistor_MIN;
const GpioWiringPiInitDigitalIn_Resistor GpioWiringPiInitDigitalIn::Resistor_MAX;
const int GpioWiringPiInitDigitalIn::Resistor_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ClientMessageType_descriptor() {
  protobuf_LabNetClient_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LabNetClient_2eproto::file_level_enum_descriptors[2];
}
bool ClientMessageType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void IoBoardInit::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IoBoardInit::IoBoardInit()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_LabNetClient_2eproto::scc_info_IoBoardInit.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:LabNetProt.Client.IoBoardInit)
}
IoBoardInit::IoBoardInit(const IoBoardInit& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:LabNetProt.Client.IoBoardInit)
}

void IoBoardInit::SharedCtor() {
}

IoBoardInit::~IoBoardInit() {
  // @@protoc_insertion_point(destructor:LabNetProt.Client.IoBoardInit)
  SharedDtor();
}

void IoBoardInit::SharedDtor() {
}

void IoBoardInit::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* IoBoardInit::descriptor() {
  ::protobuf_LabNetClient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LabNetClient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IoBoardInit& IoBoardInit::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_LabNetClient_2eproto::scc_info_IoBoardInit.base);
  return *internal_default_instance();
}


void IoBoardInit::Clear() {
// @@protoc_insertion_point(message_clear_start:LabNetProt.Client.IoBoardInit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool IoBoardInit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LabNetProt.Client.IoBoardInit)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:LabNetProt.Client.IoBoardInit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LabNetProt.Client.IoBoardInit)
  return false;
#undef DO_
}

void IoBoardInit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LabNetProt.Client.IoBoardInit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:LabNetProt.Client.IoBoardInit)
}

::google::protobuf::uint8* IoBoardInit::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LabNetProt.Client.IoBoardInit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LabNetProt.Client.IoBoardInit)
  return target;
}

size_t IoBoardInit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LabNetProt.Client.IoBoardInit)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IoBoardInit::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LabNetProt.Client.IoBoardInit)
  GOOGLE_DCHECK_NE(&from, this);
  const IoBoardInit* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IoBoardInit>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LabNetProt.Client.IoBoardInit)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LabNetProt.Client.IoBoardInit)
    MergeFrom(*source);
  }
}

void IoBoardInit::MergeFrom(const IoBoardInit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LabNetProt.Client.IoBoardInit)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void IoBoardInit::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LabNetProt.Client.IoBoardInit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IoBoardInit::CopyFrom(const IoBoardInit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LabNetProt.Client.IoBoardInit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IoBoardInit::IsInitialized() const {
  return true;
}

void IoBoardInit::Swap(IoBoardInit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IoBoardInit::InternalSwap(IoBoardInit* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata IoBoardInit::GetMetadata() const {
  protobuf_LabNetClient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LabNetClient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void IoBoardInitDigitalIn::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IoBoardInitDigitalIn::kPinFieldNumber;
const int IoBoardInitDigitalIn::kResistorStateFieldNumber;
const int IoBoardInitDigitalIn::kIsInvertedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IoBoardInitDigitalIn::IoBoardInitDigitalIn()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_LabNetClient_2eproto::scc_info_IoBoardInitDigitalIn.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:LabNetProt.Client.IoBoardInitDigitalIn)
}
IoBoardInitDigitalIn::IoBoardInitDigitalIn(const IoBoardInitDigitalIn& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&pin_, &from.pin_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_inverted_) -
    reinterpret_cast<char*>(&pin_)) + sizeof(is_inverted_));
  // @@protoc_insertion_point(copy_constructor:LabNetProt.Client.IoBoardInitDigitalIn)
}

void IoBoardInitDigitalIn::SharedCtor() {
  ::memset(&pin_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_inverted_) -
      reinterpret_cast<char*>(&pin_)) + sizeof(is_inverted_));
}

IoBoardInitDigitalIn::~IoBoardInitDigitalIn() {
  // @@protoc_insertion_point(destructor:LabNetProt.Client.IoBoardInitDigitalIn)
  SharedDtor();
}

void IoBoardInitDigitalIn::SharedDtor() {
}

void IoBoardInitDigitalIn::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* IoBoardInitDigitalIn::descriptor() {
  ::protobuf_LabNetClient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LabNetClient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IoBoardInitDigitalIn& IoBoardInitDigitalIn::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_LabNetClient_2eproto::scc_info_IoBoardInitDigitalIn.base);
  return *internal_default_instance();
}


void IoBoardInitDigitalIn::Clear() {
// @@protoc_insertion_point(message_clear_start:LabNetProt.Client.IoBoardInitDigitalIn)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&pin_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_inverted_) -
      reinterpret_cast<char*>(&pin_)) + sizeof(is_inverted_));
  _internal_metadata_.Clear();
}

bool IoBoardInitDigitalIn::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LabNetProt.Client.IoBoardInitDigitalIn)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 pin = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .LabNetProt.Client.IoBoardInitDigitalIn.Resistor resistor_state = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_resistor_state(static_cast< ::LabNetProt::Client::IoBoardInitDigitalIn_Resistor >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_inverted = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_inverted_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LabNetProt.Client.IoBoardInitDigitalIn)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LabNetProt.Client.IoBoardInitDigitalIn)
  return false;
#undef DO_
}

void IoBoardInitDigitalIn::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LabNetProt.Client.IoBoardInitDigitalIn)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 pin = 1;
  if (this->pin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->pin(), output);
  }

  // .LabNetProt.Client.IoBoardInitDigitalIn.Resistor resistor_state = 2;
  if (this->resistor_state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->resistor_state(), output);
  }

  // bool is_inverted = 3;
  if (this->is_inverted() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_inverted(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:LabNetProt.Client.IoBoardInitDigitalIn)
}

::google::protobuf::uint8* IoBoardInitDigitalIn::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LabNetProt.Client.IoBoardInitDigitalIn)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 pin = 1;
  if (this->pin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->pin(), target);
  }

  // .LabNetProt.Client.IoBoardInitDigitalIn.Resistor resistor_state = 2;
  if (this->resistor_state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->resistor_state(), target);
  }

  // bool is_inverted = 3;
  if (this->is_inverted() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_inverted(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LabNetProt.Client.IoBoardInitDigitalIn)
  return target;
}

size_t IoBoardInitDigitalIn::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LabNetProt.Client.IoBoardInitDigitalIn)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 pin = 1;
  if (this->pin() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pin());
  }

  // .LabNetProt.Client.IoBoardInitDigitalIn.Resistor resistor_state = 2;
  if (this->resistor_state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->resistor_state());
  }

  // bool is_inverted = 3;
  if (this->is_inverted() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IoBoardInitDigitalIn::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LabNetProt.Client.IoBoardInitDigitalIn)
  GOOGLE_DCHECK_NE(&from, this);
  const IoBoardInitDigitalIn* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IoBoardInitDigitalIn>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LabNetProt.Client.IoBoardInitDigitalIn)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LabNetProt.Client.IoBoardInitDigitalIn)
    MergeFrom(*source);
  }
}

void IoBoardInitDigitalIn::MergeFrom(const IoBoardInitDigitalIn& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LabNetProt.Client.IoBoardInitDigitalIn)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.pin() != 0) {
    set_pin(from.pin());
  }
  if (from.resistor_state() != 0) {
    set_resistor_state(from.resistor_state());
  }
  if (from.is_inverted() != 0) {
    set_is_inverted(from.is_inverted());
  }
}

void IoBoardInitDigitalIn::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LabNetProt.Client.IoBoardInitDigitalIn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IoBoardInitDigitalIn::CopyFrom(const IoBoardInitDigitalIn& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LabNetProt.Client.IoBoardInitDigitalIn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IoBoardInitDigitalIn::IsInitialized() const {
  return true;
}

void IoBoardInitDigitalIn::Swap(IoBoardInitDigitalIn* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IoBoardInitDigitalIn::InternalSwap(IoBoardInitDigitalIn* other) {
  using std::swap;
  swap(pin_, other->pin_);
  swap(resistor_state_, other->resistor_state_);
  swap(is_inverted_, other->is_inverted_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata IoBoardInitDigitalIn::GetMetadata() const {
  protobuf_LabNetClient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LabNetClient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void IoBoardInitDigitalOut::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IoBoardInitDigitalOut::kPinFieldNumber;
const int IoBoardInitDigitalOut::kIsInvertedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IoBoardInitDigitalOut::IoBoardInitDigitalOut()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_LabNetClient_2eproto::scc_info_IoBoardInitDigitalOut.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:LabNetProt.Client.IoBoardInitDigitalOut)
}
IoBoardInitDigitalOut::IoBoardInitDigitalOut(const IoBoardInitDigitalOut& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&pin_, &from.pin_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_inverted_) -
    reinterpret_cast<char*>(&pin_)) + sizeof(is_inverted_));
  // @@protoc_insertion_point(copy_constructor:LabNetProt.Client.IoBoardInitDigitalOut)
}

void IoBoardInitDigitalOut::SharedCtor() {
  ::memset(&pin_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_inverted_) -
      reinterpret_cast<char*>(&pin_)) + sizeof(is_inverted_));
}

IoBoardInitDigitalOut::~IoBoardInitDigitalOut() {
  // @@protoc_insertion_point(destructor:LabNetProt.Client.IoBoardInitDigitalOut)
  SharedDtor();
}

void IoBoardInitDigitalOut::SharedDtor() {
}

void IoBoardInitDigitalOut::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* IoBoardInitDigitalOut::descriptor() {
  ::protobuf_LabNetClient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LabNetClient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IoBoardInitDigitalOut& IoBoardInitDigitalOut::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_LabNetClient_2eproto::scc_info_IoBoardInitDigitalOut.base);
  return *internal_default_instance();
}


void IoBoardInitDigitalOut::Clear() {
// @@protoc_insertion_point(message_clear_start:LabNetProt.Client.IoBoardInitDigitalOut)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&pin_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_inverted_) -
      reinterpret_cast<char*>(&pin_)) + sizeof(is_inverted_));
  _internal_metadata_.Clear();
}

bool IoBoardInitDigitalOut::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LabNetProt.Client.IoBoardInitDigitalOut)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 pin = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_inverted = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_inverted_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LabNetProt.Client.IoBoardInitDigitalOut)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LabNetProt.Client.IoBoardInitDigitalOut)
  return false;
#undef DO_
}

void IoBoardInitDigitalOut::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LabNetProt.Client.IoBoardInitDigitalOut)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 pin = 1;
  if (this->pin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->pin(), output);
  }

  // bool is_inverted = 2;
  if (this->is_inverted() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->is_inverted(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:LabNetProt.Client.IoBoardInitDigitalOut)
}

::google::protobuf::uint8* IoBoardInitDigitalOut::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LabNetProt.Client.IoBoardInitDigitalOut)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 pin = 1;
  if (this->pin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->pin(), target);
  }

  // bool is_inverted = 2;
  if (this->is_inverted() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->is_inverted(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LabNetProt.Client.IoBoardInitDigitalOut)
  return target;
}

size_t IoBoardInitDigitalOut::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LabNetProt.Client.IoBoardInitDigitalOut)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 pin = 1;
  if (this->pin() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pin());
  }

  // bool is_inverted = 2;
  if (this->is_inverted() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IoBoardInitDigitalOut::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LabNetProt.Client.IoBoardInitDigitalOut)
  GOOGLE_DCHECK_NE(&from, this);
  const IoBoardInitDigitalOut* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IoBoardInitDigitalOut>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LabNetProt.Client.IoBoardInitDigitalOut)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LabNetProt.Client.IoBoardInitDigitalOut)
    MergeFrom(*source);
  }
}

void IoBoardInitDigitalOut::MergeFrom(const IoBoardInitDigitalOut& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LabNetProt.Client.IoBoardInitDigitalOut)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.pin() != 0) {
    set_pin(from.pin());
  }
  if (from.is_inverted() != 0) {
    set_is_inverted(from.is_inverted());
  }
}

void IoBoardInitDigitalOut::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LabNetProt.Client.IoBoardInitDigitalOut)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IoBoardInitDigitalOut::CopyFrom(const IoBoardInitDigitalOut& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LabNetProt.Client.IoBoardInitDigitalOut)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IoBoardInitDigitalOut::IsInitialized() const {
  return true;
}

void IoBoardInitDigitalOut::Swap(IoBoardInitDigitalOut* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IoBoardInitDigitalOut::InternalSwap(IoBoardInitDigitalOut* other) {
  using std::swap;
  swap(pin_, other->pin_);
  swap(is_inverted_, other->is_inverted_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata IoBoardInitDigitalOut::GetMetadata() const {
  protobuf_LabNetClient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LabNetClient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RfidBoardInit::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RfidBoardInit::kAntennaPhase1FieldNumber;
const int RfidBoardInit::kAntennaPhase2FieldNumber;
const int RfidBoardInit::kPhaseDurationFieldNumber;
const int RfidBoardInit::kInvertedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RfidBoardInit::RfidBoardInit()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_LabNetClient_2eproto::scc_info_RfidBoardInit.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:LabNetProt.Client.RfidBoardInit)
}
RfidBoardInit::RfidBoardInit(const RfidBoardInit& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&antenna_phase1_, &from.antenna_phase1_,
    static_cast<size_t>(reinterpret_cast<char*>(&inverted_) -
    reinterpret_cast<char*>(&antenna_phase1_)) + sizeof(inverted_));
  // @@protoc_insertion_point(copy_constructor:LabNetProt.Client.RfidBoardInit)
}

void RfidBoardInit::SharedCtor() {
  ::memset(&antenna_phase1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&inverted_) -
      reinterpret_cast<char*>(&antenna_phase1_)) + sizeof(inverted_));
}

RfidBoardInit::~RfidBoardInit() {
  // @@protoc_insertion_point(destructor:LabNetProt.Client.RfidBoardInit)
  SharedDtor();
}

void RfidBoardInit::SharedDtor() {
}

void RfidBoardInit::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RfidBoardInit::descriptor() {
  ::protobuf_LabNetClient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LabNetClient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RfidBoardInit& RfidBoardInit::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_LabNetClient_2eproto::scc_info_RfidBoardInit.base);
  return *internal_default_instance();
}


void RfidBoardInit::Clear() {
// @@protoc_insertion_point(message_clear_start:LabNetProt.Client.RfidBoardInit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&antenna_phase1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&inverted_) -
      reinterpret_cast<char*>(&antenna_phase1_)) + sizeof(inverted_));
  _internal_metadata_.Clear();
}

bool RfidBoardInit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LabNetProt.Client.RfidBoardInit)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 antenna_phase1 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &antenna_phase1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 antenna_phase2 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &antenna_phase2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 phase_duration = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &phase_duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool inverted = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &inverted_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LabNetProt.Client.RfidBoardInit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LabNetProt.Client.RfidBoardInit)
  return false;
#undef DO_
}

void RfidBoardInit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LabNetProt.Client.RfidBoardInit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 antenna_phase1 = 1;
  if (this->antenna_phase1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->antenna_phase1(), output);
  }

  // uint32 antenna_phase2 = 2;
  if (this->antenna_phase2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->antenna_phase2(), output);
  }

  // uint32 phase_duration = 3;
  if (this->phase_duration() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->phase_duration(), output);
  }

  // bool inverted = 4;
  if (this->inverted() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->inverted(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:LabNetProt.Client.RfidBoardInit)
}

::google::protobuf::uint8* RfidBoardInit::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LabNetProt.Client.RfidBoardInit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 antenna_phase1 = 1;
  if (this->antenna_phase1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->antenna_phase1(), target);
  }

  // uint32 antenna_phase2 = 2;
  if (this->antenna_phase2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->antenna_phase2(), target);
  }

  // uint32 phase_duration = 3;
  if (this->phase_duration() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->phase_duration(), target);
  }

  // bool inverted = 4;
  if (this->inverted() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->inverted(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LabNetProt.Client.RfidBoardInit)
  return target;
}

size_t RfidBoardInit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LabNetProt.Client.RfidBoardInit)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 antenna_phase1 = 1;
  if (this->antenna_phase1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->antenna_phase1());
  }

  // uint32 antenna_phase2 = 2;
  if (this->antenna_phase2() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->antenna_phase2());
  }

  // uint32 phase_duration = 3;
  if (this->phase_duration() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->phase_duration());
  }

  // bool inverted = 4;
  if (this->inverted() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RfidBoardInit::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LabNetProt.Client.RfidBoardInit)
  GOOGLE_DCHECK_NE(&from, this);
  const RfidBoardInit* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RfidBoardInit>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LabNetProt.Client.RfidBoardInit)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LabNetProt.Client.RfidBoardInit)
    MergeFrom(*source);
  }
}

void RfidBoardInit::MergeFrom(const RfidBoardInit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LabNetProt.Client.RfidBoardInit)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.antenna_phase1() != 0) {
    set_antenna_phase1(from.antenna_phase1());
  }
  if (from.antenna_phase2() != 0) {
    set_antenna_phase2(from.antenna_phase2());
  }
  if (from.phase_duration() != 0) {
    set_phase_duration(from.phase_duration());
  }
  if (from.inverted() != 0) {
    set_inverted(from.inverted());
  }
}

void RfidBoardInit::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LabNetProt.Client.RfidBoardInit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RfidBoardInit::CopyFrom(const RfidBoardInit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LabNetProt.Client.RfidBoardInit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RfidBoardInit::IsInitialized() const {
  return true;
}

void RfidBoardInit::Swap(RfidBoardInit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RfidBoardInit::InternalSwap(RfidBoardInit* other) {
  using std::swap;
  swap(antenna_phase1_, other->antenna_phase1_);
  swap(antenna_phase2_, other->antenna_phase2_);
  swap(phase_duration_, other->phase_duration_);
  swap(inverted_, other->inverted_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RfidBoardInit::GetMetadata() const {
  protobuf_LabNetClient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LabNetClient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RfidBoardSetPhaseMatrix::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RfidBoardSetPhaseMatrix::kAntennaPhase1FieldNumber;
const int RfidBoardSetPhaseMatrix::kAntennaPhase2FieldNumber;
const int RfidBoardSetPhaseMatrix::kPhaseDurationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RfidBoardSetPhaseMatrix::RfidBoardSetPhaseMatrix()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_LabNetClient_2eproto::scc_info_RfidBoardSetPhaseMatrix.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:LabNetProt.Client.RfidBoardSetPhaseMatrix)
}
RfidBoardSetPhaseMatrix::RfidBoardSetPhaseMatrix(const RfidBoardSetPhaseMatrix& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&antenna_phase1_, &from.antenna_phase1_,
    static_cast<size_t>(reinterpret_cast<char*>(&phase_duration_) -
    reinterpret_cast<char*>(&antenna_phase1_)) + sizeof(phase_duration_));
  // @@protoc_insertion_point(copy_constructor:LabNetProt.Client.RfidBoardSetPhaseMatrix)
}

void RfidBoardSetPhaseMatrix::SharedCtor() {
  ::memset(&antenna_phase1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&phase_duration_) -
      reinterpret_cast<char*>(&antenna_phase1_)) + sizeof(phase_duration_));
}

RfidBoardSetPhaseMatrix::~RfidBoardSetPhaseMatrix() {
  // @@protoc_insertion_point(destructor:LabNetProt.Client.RfidBoardSetPhaseMatrix)
  SharedDtor();
}

void RfidBoardSetPhaseMatrix::SharedDtor() {
}

void RfidBoardSetPhaseMatrix::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RfidBoardSetPhaseMatrix::descriptor() {
  ::protobuf_LabNetClient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LabNetClient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RfidBoardSetPhaseMatrix& RfidBoardSetPhaseMatrix::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_LabNetClient_2eproto::scc_info_RfidBoardSetPhaseMatrix.base);
  return *internal_default_instance();
}


void RfidBoardSetPhaseMatrix::Clear() {
// @@protoc_insertion_point(message_clear_start:LabNetProt.Client.RfidBoardSetPhaseMatrix)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&antenna_phase1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&phase_duration_) -
      reinterpret_cast<char*>(&antenna_phase1_)) + sizeof(phase_duration_));
  _internal_metadata_.Clear();
}

bool RfidBoardSetPhaseMatrix::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LabNetProt.Client.RfidBoardSetPhaseMatrix)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 antenna_phase1 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &antenna_phase1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 antenna_phase2 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &antenna_phase2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 phase_duration = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &phase_duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LabNetProt.Client.RfidBoardSetPhaseMatrix)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LabNetProt.Client.RfidBoardSetPhaseMatrix)
  return false;
#undef DO_
}

void RfidBoardSetPhaseMatrix::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LabNetProt.Client.RfidBoardSetPhaseMatrix)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 antenna_phase1 = 1;
  if (this->antenna_phase1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->antenna_phase1(), output);
  }

  // uint32 antenna_phase2 = 2;
  if (this->antenna_phase2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->antenna_phase2(), output);
  }

  // uint32 phase_duration = 3;
  if (this->phase_duration() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->phase_duration(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:LabNetProt.Client.RfidBoardSetPhaseMatrix)
}

::google::protobuf::uint8* RfidBoardSetPhaseMatrix::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LabNetProt.Client.RfidBoardSetPhaseMatrix)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 antenna_phase1 = 1;
  if (this->antenna_phase1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->antenna_phase1(), target);
  }

  // uint32 antenna_phase2 = 2;
  if (this->antenna_phase2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->antenna_phase2(), target);
  }

  // uint32 phase_duration = 3;
  if (this->phase_duration() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->phase_duration(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LabNetProt.Client.RfidBoardSetPhaseMatrix)
  return target;
}

size_t RfidBoardSetPhaseMatrix::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LabNetProt.Client.RfidBoardSetPhaseMatrix)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 antenna_phase1 = 1;
  if (this->antenna_phase1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->antenna_phase1());
  }

  // uint32 antenna_phase2 = 2;
  if (this->antenna_phase2() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->antenna_phase2());
  }

  // uint32 phase_duration = 3;
  if (this->phase_duration() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->phase_duration());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RfidBoardSetPhaseMatrix::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LabNetProt.Client.RfidBoardSetPhaseMatrix)
  GOOGLE_DCHECK_NE(&from, this);
  const RfidBoardSetPhaseMatrix* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RfidBoardSetPhaseMatrix>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LabNetProt.Client.RfidBoardSetPhaseMatrix)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LabNetProt.Client.RfidBoardSetPhaseMatrix)
    MergeFrom(*source);
  }
}

void RfidBoardSetPhaseMatrix::MergeFrom(const RfidBoardSetPhaseMatrix& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LabNetProt.Client.RfidBoardSetPhaseMatrix)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.antenna_phase1() != 0) {
    set_antenna_phase1(from.antenna_phase1());
  }
  if (from.antenna_phase2() != 0) {
    set_antenna_phase2(from.antenna_phase2());
  }
  if (from.phase_duration() != 0) {
    set_phase_duration(from.phase_duration());
  }
}

void RfidBoardSetPhaseMatrix::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LabNetProt.Client.RfidBoardSetPhaseMatrix)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RfidBoardSetPhaseMatrix::CopyFrom(const RfidBoardSetPhaseMatrix& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LabNetProt.Client.RfidBoardSetPhaseMatrix)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RfidBoardSetPhaseMatrix::IsInitialized() const {
  return true;
}

void RfidBoardSetPhaseMatrix::Swap(RfidBoardSetPhaseMatrix* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RfidBoardSetPhaseMatrix::InternalSwap(RfidBoardSetPhaseMatrix* other) {
  using std::swap;
  swap(antenna_phase1_, other->antenna_phase1_);
  swap(antenna_phase2_, other->antenna_phase2_);
  swap(phase_duration_, other->phase_duration_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RfidBoardSetPhaseMatrix::GetMetadata() const {
  protobuf_LabNetClient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LabNetClient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UartInit::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UartInit::kPortFieldNumber;
const int UartInit::kBaudFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UartInit::UartInit()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_LabNetClient_2eproto::scc_info_UartInit.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:LabNetProt.Client.UartInit)
}
UartInit::UartInit(const UartInit& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&port_, &from.port_,
    static_cast<size_t>(reinterpret_cast<char*>(&baud_) -
    reinterpret_cast<char*>(&port_)) + sizeof(baud_));
  // @@protoc_insertion_point(copy_constructor:LabNetProt.Client.UartInit)
}

void UartInit::SharedCtor() {
  ::memset(&port_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&baud_) -
      reinterpret_cast<char*>(&port_)) + sizeof(baud_));
}

UartInit::~UartInit() {
  // @@protoc_insertion_point(destructor:LabNetProt.Client.UartInit)
  SharedDtor();
}

void UartInit::SharedDtor() {
}

void UartInit::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UartInit::descriptor() {
  ::protobuf_LabNetClient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LabNetClient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UartInit& UartInit::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_LabNetClient_2eproto::scc_info_UartInit.base);
  return *internal_default_instance();
}


void UartInit::Clear() {
// @@protoc_insertion_point(message_clear_start:LabNetProt.Client.UartInit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&port_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&baud_) -
      reinterpret_cast<char*>(&port_)) + sizeof(baud_));
  _internal_metadata_.Clear();
}

bool UartInit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LabNetProt.Client.UartInit)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .LabNetProt.Uarts port = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_port(static_cast< ::LabNetProt::Uarts >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 baud = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &baud_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LabNetProt.Client.UartInit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LabNetProt.Client.UartInit)
  return false;
#undef DO_
}

void UartInit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LabNetProt.Client.UartInit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .LabNetProt.Uarts port = 1;
  if (this->port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->port(), output);
  }

  // uint32 baud = 2;
  if (this->baud() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->baud(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:LabNetProt.Client.UartInit)
}

::google::protobuf::uint8* UartInit::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LabNetProt.Client.UartInit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .LabNetProt.Uarts port = 1;
  if (this->port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->port(), target);
  }

  // uint32 baud = 2;
  if (this->baud() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->baud(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LabNetProt.Client.UartInit)
  return target;
}

size_t UartInit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LabNetProt.Client.UartInit)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .LabNetProt.Uarts port = 1;
  if (this->port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->port());
  }

  // uint32 baud = 2;
  if (this->baud() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->baud());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UartInit::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LabNetProt.Client.UartInit)
  GOOGLE_DCHECK_NE(&from, this);
  const UartInit* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UartInit>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LabNetProt.Client.UartInit)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LabNetProt.Client.UartInit)
    MergeFrom(*source);
  }
}

void UartInit::MergeFrom(const UartInit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LabNetProt.Client.UartInit)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.port() != 0) {
    set_port(from.port());
  }
  if (from.baud() != 0) {
    set_baud(from.baud());
  }
}

void UartInit::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LabNetProt.Client.UartInit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UartInit::CopyFrom(const UartInit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LabNetProt.Client.UartInit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UartInit::IsInitialized() const {
  return true;
}

void UartInit::Swap(UartInit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UartInit::InternalSwap(UartInit* other) {
  using std::swap;
  swap(port_, other->port_);
  swap(baud_, other->baud_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UartInit::GetMetadata() const {
  protobuf_LabNetClient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LabNetClient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UartWriteData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UartWriteData::kPortFieldNumber;
const int UartWriteData::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UartWriteData::UartWriteData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_LabNetClient_2eproto::scc_info_UartWriteData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:LabNetProt.Client.UartWriteData)
}
UartWriteData::UartWriteData(const UartWriteData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  port_ = from.port_;
  // @@protoc_insertion_point(copy_constructor:LabNetProt.Client.UartWriteData)
}

void UartWriteData::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  port_ = 0;
}

UartWriteData::~UartWriteData() {
  // @@protoc_insertion_point(destructor:LabNetProt.Client.UartWriteData)
  SharedDtor();
}

void UartWriteData::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UartWriteData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UartWriteData::descriptor() {
  ::protobuf_LabNetClient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LabNetClient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UartWriteData& UartWriteData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_LabNetClient_2eproto::scc_info_UartWriteData.base);
  return *internal_default_instance();
}


void UartWriteData::Clear() {
// @@protoc_insertion_point(message_clear_start:LabNetProt.Client.UartWriteData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  port_ = 0;
  _internal_metadata_.Clear();
}

bool UartWriteData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LabNetProt.Client.UartWriteData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .LabNetProt.Uarts port = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_port(static_cast< ::LabNetProt::Uarts >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LabNetProt.Client.UartWriteData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LabNetProt.Client.UartWriteData)
  return false;
#undef DO_
}

void UartWriteData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LabNetProt.Client.UartWriteData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .LabNetProt.Uarts port = 1;
  if (this->port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->port(), output);
  }

  // bytes data = 2;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:LabNetProt.Client.UartWriteData)
}

::google::protobuf::uint8* UartWriteData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LabNetProt.Client.UartWriteData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .LabNetProt.Uarts port = 1;
  if (this->port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->port(), target);
  }

  // bytes data = 2;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LabNetProt.Client.UartWriteData)
  return target;
}

size_t UartWriteData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LabNetProt.Client.UartWriteData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes data = 2;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  // .LabNetProt.Uarts port = 1;
  if (this->port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->port());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UartWriteData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LabNetProt.Client.UartWriteData)
  GOOGLE_DCHECK_NE(&from, this);
  const UartWriteData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UartWriteData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LabNetProt.Client.UartWriteData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LabNetProt.Client.UartWriteData)
    MergeFrom(*source);
  }
}

void UartWriteData::MergeFrom(const UartWriteData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LabNetProt.Client.UartWriteData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.port() != 0) {
    set_port(from.port());
  }
}

void UartWriteData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LabNetProt.Client.UartWriteData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UartWriteData::CopyFrom(const UartWriteData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LabNetProt.Client.UartWriteData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UartWriteData::IsInitialized() const {
  return true;
}

void UartWriteData::Swap(UartWriteData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UartWriteData::InternalSwap(UartWriteData* other) {
  using std::swap;
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(port_, other->port_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UartWriteData::GetMetadata() const {
  protobuf_LabNetClient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LabNetClient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GpioWiringPiInit::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GpioWiringPiInit::GpioWiringPiInit()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_LabNetClient_2eproto::scc_info_GpioWiringPiInit.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:LabNetProt.Client.GpioWiringPiInit)
}
GpioWiringPiInit::GpioWiringPiInit(const GpioWiringPiInit& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:LabNetProt.Client.GpioWiringPiInit)
}

void GpioWiringPiInit::SharedCtor() {
}

GpioWiringPiInit::~GpioWiringPiInit() {
  // @@protoc_insertion_point(destructor:LabNetProt.Client.GpioWiringPiInit)
  SharedDtor();
}

void GpioWiringPiInit::SharedDtor() {
}

void GpioWiringPiInit::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GpioWiringPiInit::descriptor() {
  ::protobuf_LabNetClient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LabNetClient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GpioWiringPiInit& GpioWiringPiInit::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_LabNetClient_2eproto::scc_info_GpioWiringPiInit.base);
  return *internal_default_instance();
}


void GpioWiringPiInit::Clear() {
// @@protoc_insertion_point(message_clear_start:LabNetProt.Client.GpioWiringPiInit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool GpioWiringPiInit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LabNetProt.Client.GpioWiringPiInit)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:LabNetProt.Client.GpioWiringPiInit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LabNetProt.Client.GpioWiringPiInit)
  return false;
#undef DO_
}

void GpioWiringPiInit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LabNetProt.Client.GpioWiringPiInit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:LabNetProt.Client.GpioWiringPiInit)
}

::google::protobuf::uint8* GpioWiringPiInit::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LabNetProt.Client.GpioWiringPiInit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LabNetProt.Client.GpioWiringPiInit)
  return target;
}

size_t GpioWiringPiInit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LabNetProt.Client.GpioWiringPiInit)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GpioWiringPiInit::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LabNetProt.Client.GpioWiringPiInit)
  GOOGLE_DCHECK_NE(&from, this);
  const GpioWiringPiInit* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GpioWiringPiInit>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LabNetProt.Client.GpioWiringPiInit)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LabNetProt.Client.GpioWiringPiInit)
    MergeFrom(*source);
  }
}

void GpioWiringPiInit::MergeFrom(const GpioWiringPiInit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LabNetProt.Client.GpioWiringPiInit)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GpioWiringPiInit::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LabNetProt.Client.GpioWiringPiInit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GpioWiringPiInit::CopyFrom(const GpioWiringPiInit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LabNetProt.Client.GpioWiringPiInit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GpioWiringPiInit::IsInitialized() const {
  return true;
}

void GpioWiringPiInit::Swap(GpioWiringPiInit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GpioWiringPiInit::InternalSwap(GpioWiringPiInit* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GpioWiringPiInit::GetMetadata() const {
  protobuf_LabNetClient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LabNetClient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GpioWiringPiInitDigitalIn::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GpioWiringPiInitDigitalIn::kPinFieldNumber;
const int GpioWiringPiInitDigitalIn::kResistorStateFieldNumber;
const int GpioWiringPiInitDigitalIn::kIsInvertedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GpioWiringPiInitDigitalIn::GpioWiringPiInitDigitalIn()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_LabNetClient_2eproto::scc_info_GpioWiringPiInitDigitalIn.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:LabNetProt.Client.GpioWiringPiInitDigitalIn)
}
GpioWiringPiInitDigitalIn::GpioWiringPiInitDigitalIn(const GpioWiringPiInitDigitalIn& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&pin_, &from.pin_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_inverted_) -
    reinterpret_cast<char*>(&pin_)) + sizeof(is_inverted_));
  // @@protoc_insertion_point(copy_constructor:LabNetProt.Client.GpioWiringPiInitDigitalIn)
}

void GpioWiringPiInitDigitalIn::SharedCtor() {
  ::memset(&pin_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_inverted_) -
      reinterpret_cast<char*>(&pin_)) + sizeof(is_inverted_));
}

GpioWiringPiInitDigitalIn::~GpioWiringPiInitDigitalIn() {
  // @@protoc_insertion_point(destructor:LabNetProt.Client.GpioWiringPiInitDigitalIn)
  SharedDtor();
}

void GpioWiringPiInitDigitalIn::SharedDtor() {
}

void GpioWiringPiInitDigitalIn::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GpioWiringPiInitDigitalIn::descriptor() {
  ::protobuf_LabNetClient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LabNetClient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GpioWiringPiInitDigitalIn& GpioWiringPiInitDigitalIn::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_LabNetClient_2eproto::scc_info_GpioWiringPiInitDigitalIn.base);
  return *internal_default_instance();
}


void GpioWiringPiInitDigitalIn::Clear() {
// @@protoc_insertion_point(message_clear_start:LabNetProt.Client.GpioWiringPiInitDigitalIn)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&pin_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_inverted_) -
      reinterpret_cast<char*>(&pin_)) + sizeof(is_inverted_));
  _internal_metadata_.Clear();
}

bool GpioWiringPiInitDigitalIn::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LabNetProt.Client.GpioWiringPiInitDigitalIn)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 pin = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .LabNetProt.Client.GpioWiringPiInitDigitalIn.Resistor resistor_state = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_resistor_state(static_cast< ::LabNetProt::Client::GpioWiringPiInitDigitalIn_Resistor >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_inverted = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_inverted_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LabNetProt.Client.GpioWiringPiInitDigitalIn)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LabNetProt.Client.GpioWiringPiInitDigitalIn)
  return false;
#undef DO_
}

void GpioWiringPiInitDigitalIn::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LabNetProt.Client.GpioWiringPiInitDigitalIn)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 pin = 1;
  if (this->pin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->pin(), output);
  }

  // .LabNetProt.Client.GpioWiringPiInitDigitalIn.Resistor resistor_state = 2;
  if (this->resistor_state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->resistor_state(), output);
  }

  // bool is_inverted = 3;
  if (this->is_inverted() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_inverted(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:LabNetProt.Client.GpioWiringPiInitDigitalIn)
}

::google::protobuf::uint8* GpioWiringPiInitDigitalIn::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LabNetProt.Client.GpioWiringPiInitDigitalIn)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 pin = 1;
  if (this->pin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->pin(), target);
  }

  // .LabNetProt.Client.GpioWiringPiInitDigitalIn.Resistor resistor_state = 2;
  if (this->resistor_state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->resistor_state(), target);
  }

  // bool is_inverted = 3;
  if (this->is_inverted() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_inverted(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LabNetProt.Client.GpioWiringPiInitDigitalIn)
  return target;
}

size_t GpioWiringPiInitDigitalIn::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LabNetProt.Client.GpioWiringPiInitDigitalIn)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 pin = 1;
  if (this->pin() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pin());
  }

  // .LabNetProt.Client.GpioWiringPiInitDigitalIn.Resistor resistor_state = 2;
  if (this->resistor_state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->resistor_state());
  }

  // bool is_inverted = 3;
  if (this->is_inverted() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GpioWiringPiInitDigitalIn::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LabNetProt.Client.GpioWiringPiInitDigitalIn)
  GOOGLE_DCHECK_NE(&from, this);
  const GpioWiringPiInitDigitalIn* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GpioWiringPiInitDigitalIn>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LabNetProt.Client.GpioWiringPiInitDigitalIn)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LabNetProt.Client.GpioWiringPiInitDigitalIn)
    MergeFrom(*source);
  }
}

void GpioWiringPiInitDigitalIn::MergeFrom(const GpioWiringPiInitDigitalIn& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LabNetProt.Client.GpioWiringPiInitDigitalIn)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.pin() != 0) {
    set_pin(from.pin());
  }
  if (from.resistor_state() != 0) {
    set_resistor_state(from.resistor_state());
  }
  if (from.is_inverted() != 0) {
    set_is_inverted(from.is_inverted());
  }
}

void GpioWiringPiInitDigitalIn::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LabNetProt.Client.GpioWiringPiInitDigitalIn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GpioWiringPiInitDigitalIn::CopyFrom(const GpioWiringPiInitDigitalIn& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LabNetProt.Client.GpioWiringPiInitDigitalIn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GpioWiringPiInitDigitalIn::IsInitialized() const {
  return true;
}

void GpioWiringPiInitDigitalIn::Swap(GpioWiringPiInitDigitalIn* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GpioWiringPiInitDigitalIn::InternalSwap(GpioWiringPiInitDigitalIn* other) {
  using std::swap;
  swap(pin_, other->pin_);
  swap(resistor_state_, other->resistor_state_);
  swap(is_inverted_, other->is_inverted_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GpioWiringPiInitDigitalIn::GetMetadata() const {
  protobuf_LabNetClient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LabNetClient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GpioWiringPiInitDigitalOut::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GpioWiringPiInitDigitalOut::kPinFieldNumber;
const int GpioWiringPiInitDigitalOut::kIsInvertedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GpioWiringPiInitDigitalOut::GpioWiringPiInitDigitalOut()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_LabNetClient_2eproto::scc_info_GpioWiringPiInitDigitalOut.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:LabNetProt.Client.GpioWiringPiInitDigitalOut)
}
GpioWiringPiInitDigitalOut::GpioWiringPiInitDigitalOut(const GpioWiringPiInitDigitalOut& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&pin_, &from.pin_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_inverted_) -
    reinterpret_cast<char*>(&pin_)) + sizeof(is_inverted_));
  // @@protoc_insertion_point(copy_constructor:LabNetProt.Client.GpioWiringPiInitDigitalOut)
}

void GpioWiringPiInitDigitalOut::SharedCtor() {
  ::memset(&pin_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_inverted_) -
      reinterpret_cast<char*>(&pin_)) + sizeof(is_inverted_));
}

GpioWiringPiInitDigitalOut::~GpioWiringPiInitDigitalOut() {
  // @@protoc_insertion_point(destructor:LabNetProt.Client.GpioWiringPiInitDigitalOut)
  SharedDtor();
}

void GpioWiringPiInitDigitalOut::SharedDtor() {
}

void GpioWiringPiInitDigitalOut::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GpioWiringPiInitDigitalOut::descriptor() {
  ::protobuf_LabNetClient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LabNetClient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GpioWiringPiInitDigitalOut& GpioWiringPiInitDigitalOut::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_LabNetClient_2eproto::scc_info_GpioWiringPiInitDigitalOut.base);
  return *internal_default_instance();
}


void GpioWiringPiInitDigitalOut::Clear() {
// @@protoc_insertion_point(message_clear_start:LabNetProt.Client.GpioWiringPiInitDigitalOut)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&pin_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_inverted_) -
      reinterpret_cast<char*>(&pin_)) + sizeof(is_inverted_));
  _internal_metadata_.Clear();
}

bool GpioWiringPiInitDigitalOut::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LabNetProt.Client.GpioWiringPiInitDigitalOut)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 pin = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_inverted = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_inverted_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LabNetProt.Client.GpioWiringPiInitDigitalOut)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LabNetProt.Client.GpioWiringPiInitDigitalOut)
  return false;
#undef DO_
}

void GpioWiringPiInitDigitalOut::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LabNetProt.Client.GpioWiringPiInitDigitalOut)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 pin = 1;
  if (this->pin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->pin(), output);
  }

  // bool is_inverted = 2;
  if (this->is_inverted() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->is_inverted(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:LabNetProt.Client.GpioWiringPiInitDigitalOut)
}

::google::protobuf::uint8* GpioWiringPiInitDigitalOut::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LabNetProt.Client.GpioWiringPiInitDigitalOut)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 pin = 1;
  if (this->pin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->pin(), target);
  }

  // bool is_inverted = 2;
  if (this->is_inverted() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->is_inverted(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LabNetProt.Client.GpioWiringPiInitDigitalOut)
  return target;
}

size_t GpioWiringPiInitDigitalOut::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LabNetProt.Client.GpioWiringPiInitDigitalOut)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 pin = 1;
  if (this->pin() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pin());
  }

  // bool is_inverted = 2;
  if (this->is_inverted() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GpioWiringPiInitDigitalOut::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LabNetProt.Client.GpioWiringPiInitDigitalOut)
  GOOGLE_DCHECK_NE(&from, this);
  const GpioWiringPiInitDigitalOut* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GpioWiringPiInitDigitalOut>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LabNetProt.Client.GpioWiringPiInitDigitalOut)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LabNetProt.Client.GpioWiringPiInitDigitalOut)
    MergeFrom(*source);
  }
}

void GpioWiringPiInitDigitalOut::MergeFrom(const GpioWiringPiInitDigitalOut& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LabNetProt.Client.GpioWiringPiInitDigitalOut)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.pin() != 0) {
    set_pin(from.pin());
  }
  if (from.is_inverted() != 0) {
    set_is_inverted(from.is_inverted());
  }
}

void GpioWiringPiInitDigitalOut::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LabNetProt.Client.GpioWiringPiInitDigitalOut)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GpioWiringPiInitDigitalOut::CopyFrom(const GpioWiringPiInitDigitalOut& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LabNetProt.Client.GpioWiringPiInitDigitalOut)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GpioWiringPiInitDigitalOut::IsInitialized() const {
  return true;
}

void GpioWiringPiInitDigitalOut::Swap(GpioWiringPiInitDigitalOut* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GpioWiringPiInitDigitalOut::InternalSwap(GpioWiringPiInitDigitalOut* other) {
  using std::swap;
  swap(pin_, other->pin_);
  swap(is_inverted_, other->is_inverted_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GpioWiringPiInitDigitalOut::GetMetadata() const {
  protobuf_LabNetClient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LabNetClient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DigitalOutSet::InitAsDefaultInstance() {
  ::LabNetProt::Client::_DigitalOutSet_default_instance_._instance.get_mutable()->id_ = const_cast< ::LabNetProt::PinId*>(
      ::LabNetProt::PinId::internal_default_instance());
}
void DigitalOutSet::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DigitalOutSet::kIdFieldNumber;
const int DigitalOutSet::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DigitalOutSet::DigitalOutSet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_LabNetClient_2eproto::scc_info_DigitalOutSet.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:LabNetProt.Client.DigitalOutSet)
}
DigitalOutSet::DigitalOutSet(const DigitalOutSet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::LabNetProt::PinId(*from.id_);
  } else {
    id_ = NULL;
  }
  state_ = from.state_;
  // @@protoc_insertion_point(copy_constructor:LabNetProt.Client.DigitalOutSet)
}

void DigitalOutSet::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&id_)) + sizeof(state_));
}

DigitalOutSet::~DigitalOutSet() {
  // @@protoc_insertion_point(destructor:LabNetProt.Client.DigitalOutSet)
  SharedDtor();
}

void DigitalOutSet::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
}

void DigitalOutSet::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DigitalOutSet::descriptor() {
  ::protobuf_LabNetClient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LabNetClient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DigitalOutSet& DigitalOutSet::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_LabNetClient_2eproto::scc_info_DigitalOutSet.base);
  return *internal_default_instance();
}


void DigitalOutSet::Clear() {
// @@protoc_insertion_point(message_clear_start:LabNetProt.Client.DigitalOutSet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  state_ = false;
  _internal_metadata_.Clear();
}

bool DigitalOutSet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LabNetProt.Client.DigitalOutSet)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .LabNetProt.PinId id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool state = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LabNetProt.Client.DigitalOutSet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LabNetProt.Client.DigitalOutSet)
  return false;
#undef DO_
}

void DigitalOutSet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LabNetProt.Client.DigitalOutSet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .LabNetProt.PinId id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // bool state = 2;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->state(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:LabNetProt.Client.DigitalOutSet)
}

::google::protobuf::uint8* DigitalOutSet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LabNetProt.Client.DigitalOutSet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .LabNetProt.PinId id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // bool state = 2;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->state(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LabNetProt.Client.DigitalOutSet)
  return target;
}

size_t DigitalOutSet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LabNetProt.Client.DigitalOutSet)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .LabNetProt.PinId id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // bool state = 2;
  if (this->state() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DigitalOutSet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LabNetProt.Client.DigitalOutSet)
  GOOGLE_DCHECK_NE(&from, this);
  const DigitalOutSet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DigitalOutSet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LabNetProt.Client.DigitalOutSet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LabNetProt.Client.DigitalOutSet)
    MergeFrom(*source);
  }
}

void DigitalOutSet::MergeFrom(const DigitalOutSet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LabNetProt.Client.DigitalOutSet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_id()) {
    mutable_id()->::LabNetProt::PinId::MergeFrom(from.id());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
}

void DigitalOutSet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LabNetProt.Client.DigitalOutSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DigitalOutSet::CopyFrom(const DigitalOutSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LabNetProt.Client.DigitalOutSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DigitalOutSet::IsInitialized() const {
  return true;
}

void DigitalOutSet::Swap(DigitalOutSet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DigitalOutSet::InternalSwap(DigitalOutSet* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DigitalOutSet::GetMetadata() const {
  protobuf_LabNetClient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LabNetClient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DigitalOutPulse::InitAsDefaultInstance() {
  ::LabNetProt::Client::_DigitalOutPulse_default_instance_._instance.get_mutable()->id_ = const_cast< ::LabNetProt::PinId*>(
      ::LabNetProt::PinId::internal_default_instance());
}
void DigitalOutPulse::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DigitalOutPulse::kIdFieldNumber;
const int DigitalOutPulse::kHighDurationFieldNumber;
const int DigitalOutPulse::kLowDurationFieldNumber;
const int DigitalOutPulse::kPulsesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DigitalOutPulse::DigitalOutPulse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_LabNetClient_2eproto::scc_info_DigitalOutPulse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:LabNetProt.Client.DigitalOutPulse)
}
DigitalOutPulse::DigitalOutPulse(const DigitalOutPulse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::LabNetProt::PinId(*from.id_);
  } else {
    id_ = NULL;
  }
  ::memcpy(&high_duration_, &from.high_duration_,
    static_cast<size_t>(reinterpret_cast<char*>(&pulses_) -
    reinterpret_cast<char*>(&high_duration_)) + sizeof(pulses_));
  // @@protoc_insertion_point(copy_constructor:LabNetProt.Client.DigitalOutPulse)
}

void DigitalOutPulse::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pulses_) -
      reinterpret_cast<char*>(&id_)) + sizeof(pulses_));
}

DigitalOutPulse::~DigitalOutPulse() {
  // @@protoc_insertion_point(destructor:LabNetProt.Client.DigitalOutPulse)
  SharedDtor();
}

void DigitalOutPulse::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
}

void DigitalOutPulse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DigitalOutPulse::descriptor() {
  ::protobuf_LabNetClient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LabNetClient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DigitalOutPulse& DigitalOutPulse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_LabNetClient_2eproto::scc_info_DigitalOutPulse.base);
  return *internal_default_instance();
}


void DigitalOutPulse::Clear() {
// @@protoc_insertion_point(message_clear_start:LabNetProt.Client.DigitalOutPulse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  ::memset(&high_duration_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pulses_) -
      reinterpret_cast<char*>(&high_duration_)) + sizeof(pulses_));
  _internal_metadata_.Clear();
}

bool DigitalOutPulse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LabNetProt.Client.DigitalOutPulse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .LabNetProt.PinId id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 high_duration = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &high_duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 low_duration = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &low_duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 pulses = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pulses_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LabNetProt.Client.DigitalOutPulse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LabNetProt.Client.DigitalOutPulse)
  return false;
#undef DO_
}

void DigitalOutPulse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LabNetProt.Client.DigitalOutPulse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .LabNetProt.PinId id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // uint32 high_duration = 2;
  if (this->high_duration() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->high_duration(), output);
  }

  // uint32 low_duration = 3;
  if (this->low_duration() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->low_duration(), output);
  }

  // uint32 pulses = 4;
  if (this->pulses() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->pulses(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:LabNetProt.Client.DigitalOutPulse)
}

::google::protobuf::uint8* DigitalOutPulse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LabNetProt.Client.DigitalOutPulse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .LabNetProt.PinId id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // uint32 high_duration = 2;
  if (this->high_duration() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->high_duration(), target);
  }

  // uint32 low_duration = 3;
  if (this->low_duration() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->low_duration(), target);
  }

  // uint32 pulses = 4;
  if (this->pulses() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->pulses(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LabNetProt.Client.DigitalOutPulse)
  return target;
}

size_t DigitalOutPulse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LabNetProt.Client.DigitalOutPulse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .LabNetProt.PinId id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // uint32 high_duration = 2;
  if (this->high_duration() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->high_duration());
  }

  // uint32 low_duration = 3;
  if (this->low_duration() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->low_duration());
  }

  // uint32 pulses = 4;
  if (this->pulses() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pulses());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DigitalOutPulse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LabNetProt.Client.DigitalOutPulse)
  GOOGLE_DCHECK_NE(&from, this);
  const DigitalOutPulse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DigitalOutPulse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LabNetProt.Client.DigitalOutPulse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LabNetProt.Client.DigitalOutPulse)
    MergeFrom(*source);
  }
}

void DigitalOutPulse::MergeFrom(const DigitalOutPulse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LabNetProt.Client.DigitalOutPulse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_id()) {
    mutable_id()->::LabNetProt::PinId::MergeFrom(from.id());
  }
  if (from.high_duration() != 0) {
    set_high_duration(from.high_duration());
  }
  if (from.low_duration() != 0) {
    set_low_duration(from.low_duration());
  }
  if (from.pulses() != 0) {
    set_pulses(from.pulses());
  }
}

void DigitalOutPulse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LabNetProt.Client.DigitalOutPulse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DigitalOutPulse::CopyFrom(const DigitalOutPulse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LabNetProt.Client.DigitalOutPulse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DigitalOutPulse::IsInitialized() const {
  return true;
}

void DigitalOutPulse::Swap(DigitalOutPulse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DigitalOutPulse::InternalSwap(DigitalOutPulse* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(high_duration_, other->high_duration_);
  swap(low_duration_, other->low_duration_);
  swap(pulses_, other->pulses_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DigitalOutPulse::GetMetadata() const {
  protobuf_LabNetClient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LabNetClient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StartDigitalOutLoop_DigitalOutputParameter::InitAsDefaultInstance() {
  ::LabNetProt::Client::_StartDigitalOutLoop_DigitalOutputParameter_default_instance_._instance.get_mutable()->id_ = const_cast< ::LabNetProt::PinId*>(
      ::LabNetProt::PinId::internal_default_instance());
}
void StartDigitalOutLoop_DigitalOutputParameter::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StartDigitalOutLoop_DigitalOutputParameter::kIdFieldNumber;
const int StartDigitalOutLoop_DigitalOutputParameter::kOffsetFieldNumber;
const int StartDigitalOutLoop_DigitalOutputParameter::kDurationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StartDigitalOutLoop_DigitalOutputParameter::StartDigitalOutLoop_DigitalOutputParameter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_LabNetClient_2eproto::scc_info_StartDigitalOutLoop_DigitalOutputParameter.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:LabNetProt.Client.StartDigitalOutLoop.DigitalOutputParameter)
}
StartDigitalOutLoop_DigitalOutputParameter::StartDigitalOutLoop_DigitalOutputParameter(const StartDigitalOutLoop_DigitalOutputParameter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::LabNetProt::PinId(*from.id_);
  } else {
    id_ = NULL;
  }
  ::memcpy(&offset_, &from.offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&duration_) -
    reinterpret_cast<char*>(&offset_)) + sizeof(duration_));
  // @@protoc_insertion_point(copy_constructor:LabNetProt.Client.StartDigitalOutLoop.DigitalOutputParameter)
}

void StartDigitalOutLoop_DigitalOutputParameter::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&duration_) -
      reinterpret_cast<char*>(&id_)) + sizeof(duration_));
}

StartDigitalOutLoop_DigitalOutputParameter::~StartDigitalOutLoop_DigitalOutputParameter() {
  // @@protoc_insertion_point(destructor:LabNetProt.Client.StartDigitalOutLoop.DigitalOutputParameter)
  SharedDtor();
}

void StartDigitalOutLoop_DigitalOutputParameter::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
}

void StartDigitalOutLoop_DigitalOutputParameter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* StartDigitalOutLoop_DigitalOutputParameter::descriptor() {
  ::protobuf_LabNetClient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LabNetClient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StartDigitalOutLoop_DigitalOutputParameter& StartDigitalOutLoop_DigitalOutputParameter::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_LabNetClient_2eproto::scc_info_StartDigitalOutLoop_DigitalOutputParameter.base);
  return *internal_default_instance();
}


void StartDigitalOutLoop_DigitalOutputParameter::Clear() {
// @@protoc_insertion_point(message_clear_start:LabNetProt.Client.StartDigitalOutLoop.DigitalOutputParameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&duration_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(duration_));
  _internal_metadata_.Clear();
}

bool StartDigitalOutLoop_DigitalOutputParameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LabNetProt.Client.StartDigitalOutLoop.DigitalOutputParameter)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .LabNetProt.PinId id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 offset = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 duration = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LabNetProt.Client.StartDigitalOutLoop.DigitalOutputParameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LabNetProt.Client.StartDigitalOutLoop.DigitalOutputParameter)
  return false;
#undef DO_
}

void StartDigitalOutLoop_DigitalOutputParameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LabNetProt.Client.StartDigitalOutLoop.DigitalOutputParameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .LabNetProt.PinId id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // uint32 offset = 2;
  if (this->offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->offset(), output);
  }

  // uint32 duration = 3;
  if (this->duration() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->duration(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:LabNetProt.Client.StartDigitalOutLoop.DigitalOutputParameter)
}

::google::protobuf::uint8* StartDigitalOutLoop_DigitalOutputParameter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LabNetProt.Client.StartDigitalOutLoop.DigitalOutputParameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .LabNetProt.PinId id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // uint32 offset = 2;
  if (this->offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->offset(), target);
  }

  // uint32 duration = 3;
  if (this->duration() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->duration(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LabNetProt.Client.StartDigitalOutLoop.DigitalOutputParameter)
  return target;
}

size_t StartDigitalOutLoop_DigitalOutputParameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LabNetProt.Client.StartDigitalOutLoop.DigitalOutputParameter)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .LabNetProt.PinId id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // uint32 offset = 2;
  if (this->offset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->offset());
  }

  // uint32 duration = 3;
  if (this->duration() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->duration());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StartDigitalOutLoop_DigitalOutputParameter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LabNetProt.Client.StartDigitalOutLoop.DigitalOutputParameter)
  GOOGLE_DCHECK_NE(&from, this);
  const StartDigitalOutLoop_DigitalOutputParameter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StartDigitalOutLoop_DigitalOutputParameter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LabNetProt.Client.StartDigitalOutLoop.DigitalOutputParameter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LabNetProt.Client.StartDigitalOutLoop.DigitalOutputParameter)
    MergeFrom(*source);
  }
}

void StartDigitalOutLoop_DigitalOutputParameter::MergeFrom(const StartDigitalOutLoop_DigitalOutputParameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LabNetProt.Client.StartDigitalOutLoop.DigitalOutputParameter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_id()) {
    mutable_id()->::LabNetProt::PinId::MergeFrom(from.id());
  }
  if (from.offset() != 0) {
    set_offset(from.offset());
  }
  if (from.duration() != 0) {
    set_duration(from.duration());
  }
}

void StartDigitalOutLoop_DigitalOutputParameter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LabNetProt.Client.StartDigitalOutLoop.DigitalOutputParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StartDigitalOutLoop_DigitalOutputParameter::CopyFrom(const StartDigitalOutLoop_DigitalOutputParameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LabNetProt.Client.StartDigitalOutLoop.DigitalOutputParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartDigitalOutLoop_DigitalOutputParameter::IsInitialized() const {
  return true;
}

void StartDigitalOutLoop_DigitalOutputParameter::Swap(StartDigitalOutLoop_DigitalOutputParameter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StartDigitalOutLoop_DigitalOutputParameter::InternalSwap(StartDigitalOutLoop_DigitalOutputParameter* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(offset_, other->offset_);
  swap(duration_, other->duration_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata StartDigitalOutLoop_DigitalOutputParameter::GetMetadata() const {
  protobuf_LabNetClient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LabNetClient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StartDigitalOutLoop::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StartDigitalOutLoop::kLoopNameFieldNumber;
const int StartDigitalOutLoop::kLoopPauseFieldNumber;
const int StartDigitalOutLoop::kDigitalOutputsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StartDigitalOutLoop::StartDigitalOutLoop()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_LabNetClient_2eproto::scc_info_StartDigitalOutLoop.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:LabNetProt.Client.StartDigitalOutLoop)
}
StartDigitalOutLoop::StartDigitalOutLoop(const StartDigitalOutLoop& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      digital_outputs_(from.digital_outputs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  loop_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.loop_name().size() > 0) {
    loop_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.loop_name_);
  }
  loop_pause_ = from.loop_pause_;
  // @@protoc_insertion_point(copy_constructor:LabNetProt.Client.StartDigitalOutLoop)
}

void StartDigitalOutLoop::SharedCtor() {
  loop_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  loop_pause_ = 0u;
}

StartDigitalOutLoop::~StartDigitalOutLoop() {
  // @@protoc_insertion_point(destructor:LabNetProt.Client.StartDigitalOutLoop)
  SharedDtor();
}

void StartDigitalOutLoop::SharedDtor() {
  loop_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StartDigitalOutLoop::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* StartDigitalOutLoop::descriptor() {
  ::protobuf_LabNetClient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LabNetClient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StartDigitalOutLoop& StartDigitalOutLoop::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_LabNetClient_2eproto::scc_info_StartDigitalOutLoop.base);
  return *internal_default_instance();
}


void StartDigitalOutLoop::Clear() {
// @@protoc_insertion_point(message_clear_start:LabNetProt.Client.StartDigitalOutLoop)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  digital_outputs_.Clear();
  loop_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  loop_pause_ = 0u;
  _internal_metadata_.Clear();
}

bool StartDigitalOutLoop::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LabNetProt.Client.StartDigitalOutLoop)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string loop_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_loop_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->loop_name().data(), static_cast<int>(this->loop_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LabNetProt.Client.StartDigitalOutLoop.loop_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 loop_pause = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &loop_pause_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .LabNetProt.Client.StartDigitalOutLoop.DigitalOutputParameter digital_outputs = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_digital_outputs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LabNetProt.Client.StartDigitalOutLoop)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LabNetProt.Client.StartDigitalOutLoop)
  return false;
#undef DO_
}

void StartDigitalOutLoop::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LabNetProt.Client.StartDigitalOutLoop)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string loop_name = 1;
  if (this->loop_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->loop_name().data(), static_cast<int>(this->loop_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LabNetProt.Client.StartDigitalOutLoop.loop_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->loop_name(), output);
  }

  // uint32 loop_pause = 2;
  if (this->loop_pause() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->loop_pause(), output);
  }

  // repeated .LabNetProt.Client.StartDigitalOutLoop.DigitalOutputParameter digital_outputs = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->digital_outputs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->digital_outputs(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:LabNetProt.Client.StartDigitalOutLoop)
}

::google::protobuf::uint8* StartDigitalOutLoop::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LabNetProt.Client.StartDigitalOutLoop)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string loop_name = 1;
  if (this->loop_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->loop_name().data(), static_cast<int>(this->loop_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LabNetProt.Client.StartDigitalOutLoop.loop_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->loop_name(), target);
  }

  // uint32 loop_pause = 2;
  if (this->loop_pause() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->loop_pause(), target);
  }

  // repeated .LabNetProt.Client.StartDigitalOutLoop.DigitalOutputParameter digital_outputs = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->digital_outputs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->digital_outputs(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LabNetProt.Client.StartDigitalOutLoop)
  return target;
}

size_t StartDigitalOutLoop::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LabNetProt.Client.StartDigitalOutLoop)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .LabNetProt.Client.StartDigitalOutLoop.DigitalOutputParameter digital_outputs = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->digital_outputs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->digital_outputs(static_cast<int>(i)));
    }
  }

  // string loop_name = 1;
  if (this->loop_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->loop_name());
  }

  // uint32 loop_pause = 2;
  if (this->loop_pause() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->loop_pause());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StartDigitalOutLoop::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LabNetProt.Client.StartDigitalOutLoop)
  GOOGLE_DCHECK_NE(&from, this);
  const StartDigitalOutLoop* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StartDigitalOutLoop>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LabNetProt.Client.StartDigitalOutLoop)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LabNetProt.Client.StartDigitalOutLoop)
    MergeFrom(*source);
  }
}

void StartDigitalOutLoop::MergeFrom(const StartDigitalOutLoop& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LabNetProt.Client.StartDigitalOutLoop)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  digital_outputs_.MergeFrom(from.digital_outputs_);
  if (from.loop_name().size() > 0) {

    loop_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.loop_name_);
  }
  if (from.loop_pause() != 0) {
    set_loop_pause(from.loop_pause());
  }
}

void StartDigitalOutLoop::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LabNetProt.Client.StartDigitalOutLoop)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StartDigitalOutLoop::CopyFrom(const StartDigitalOutLoop& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LabNetProt.Client.StartDigitalOutLoop)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartDigitalOutLoop::IsInitialized() const {
  return true;
}

void StartDigitalOutLoop::Swap(StartDigitalOutLoop* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StartDigitalOutLoop::InternalSwap(StartDigitalOutLoop* other) {
  using std::swap;
  CastToBase(&digital_outputs_)->InternalSwap(CastToBase(&other->digital_outputs_));
  loop_name_.Swap(&other->loop_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(loop_pause_, other->loop_pause_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata StartDigitalOutLoop::GetMetadata() const {
  protobuf_LabNetClient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LabNetClient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StopDigitalOutLoop::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StopDigitalOutLoop::kLoopNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StopDigitalOutLoop::StopDigitalOutLoop()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_LabNetClient_2eproto::scc_info_StopDigitalOutLoop.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:LabNetProt.Client.StopDigitalOutLoop)
}
StopDigitalOutLoop::StopDigitalOutLoop(const StopDigitalOutLoop& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  loop_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.loop_name().size() > 0) {
    loop_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.loop_name_);
  }
  // @@protoc_insertion_point(copy_constructor:LabNetProt.Client.StopDigitalOutLoop)
}

void StopDigitalOutLoop::SharedCtor() {
  loop_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

StopDigitalOutLoop::~StopDigitalOutLoop() {
  // @@protoc_insertion_point(destructor:LabNetProt.Client.StopDigitalOutLoop)
  SharedDtor();
}

void StopDigitalOutLoop::SharedDtor() {
  loop_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StopDigitalOutLoop::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* StopDigitalOutLoop::descriptor() {
  ::protobuf_LabNetClient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LabNetClient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StopDigitalOutLoop& StopDigitalOutLoop::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_LabNetClient_2eproto::scc_info_StopDigitalOutLoop.base);
  return *internal_default_instance();
}


void StopDigitalOutLoop::Clear() {
// @@protoc_insertion_point(message_clear_start:LabNetProt.Client.StopDigitalOutLoop)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  loop_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool StopDigitalOutLoop::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LabNetProt.Client.StopDigitalOutLoop)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string loop_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_loop_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->loop_name().data(), static_cast<int>(this->loop_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "LabNetProt.Client.StopDigitalOutLoop.loop_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LabNetProt.Client.StopDigitalOutLoop)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LabNetProt.Client.StopDigitalOutLoop)
  return false;
#undef DO_
}

void StopDigitalOutLoop::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LabNetProt.Client.StopDigitalOutLoop)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string loop_name = 1;
  if (this->loop_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->loop_name().data(), static_cast<int>(this->loop_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LabNetProt.Client.StopDigitalOutLoop.loop_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->loop_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:LabNetProt.Client.StopDigitalOutLoop)
}

::google::protobuf::uint8* StopDigitalOutLoop::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LabNetProt.Client.StopDigitalOutLoop)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string loop_name = 1;
  if (this->loop_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->loop_name().data(), static_cast<int>(this->loop_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "LabNetProt.Client.StopDigitalOutLoop.loop_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->loop_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LabNetProt.Client.StopDigitalOutLoop)
  return target;
}

size_t StopDigitalOutLoop::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LabNetProt.Client.StopDigitalOutLoop)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string loop_name = 1;
  if (this->loop_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->loop_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StopDigitalOutLoop::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LabNetProt.Client.StopDigitalOutLoop)
  GOOGLE_DCHECK_NE(&from, this);
  const StopDigitalOutLoop* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StopDigitalOutLoop>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LabNetProt.Client.StopDigitalOutLoop)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LabNetProt.Client.StopDigitalOutLoop)
    MergeFrom(*source);
  }
}

void StopDigitalOutLoop::MergeFrom(const StopDigitalOutLoop& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LabNetProt.Client.StopDigitalOutLoop)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.loop_name().size() > 0) {

    loop_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.loop_name_);
  }
}

void StopDigitalOutLoop::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LabNetProt.Client.StopDigitalOutLoop)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StopDigitalOutLoop::CopyFrom(const StopDigitalOutLoop& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LabNetProt.Client.StopDigitalOutLoop)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopDigitalOutLoop::IsInitialized() const {
  return true;
}

void StopDigitalOutLoop::Swap(StopDigitalOutLoop* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StopDigitalOutLoop::InternalSwap(StopDigitalOutLoop* other) {
  using std::swap;
  loop_name_.Swap(&other->loop_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata StopDigitalOutLoop::GetMetadata() const {
  protobuf_LabNetClient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LabNetClient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LabNetResetRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LabNetResetRequest::LabNetResetRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_LabNetClient_2eproto::scc_info_LabNetResetRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:LabNetProt.Client.LabNetResetRequest)
}
LabNetResetRequest::LabNetResetRequest(const LabNetResetRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:LabNetProt.Client.LabNetResetRequest)
}

void LabNetResetRequest::SharedCtor() {
}

LabNetResetRequest::~LabNetResetRequest() {
  // @@protoc_insertion_point(destructor:LabNetProt.Client.LabNetResetRequest)
  SharedDtor();
}

void LabNetResetRequest::SharedDtor() {
}

void LabNetResetRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LabNetResetRequest::descriptor() {
  ::protobuf_LabNetClient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LabNetClient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LabNetResetRequest& LabNetResetRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_LabNetClient_2eproto::scc_info_LabNetResetRequest.base);
  return *internal_default_instance();
}


void LabNetResetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:LabNetProt.Client.LabNetResetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool LabNetResetRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LabNetProt.Client.LabNetResetRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:LabNetProt.Client.LabNetResetRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LabNetProt.Client.LabNetResetRequest)
  return false;
#undef DO_
}

void LabNetResetRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LabNetProt.Client.LabNetResetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:LabNetProt.Client.LabNetResetRequest)
}

::google::protobuf::uint8* LabNetResetRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LabNetProt.Client.LabNetResetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LabNetProt.Client.LabNetResetRequest)
  return target;
}

size_t LabNetResetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LabNetProt.Client.LabNetResetRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LabNetResetRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LabNetProt.Client.LabNetResetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const LabNetResetRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LabNetResetRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LabNetProt.Client.LabNetResetRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LabNetProt.Client.LabNetResetRequest)
    MergeFrom(*source);
  }
}

void LabNetResetRequest::MergeFrom(const LabNetResetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LabNetProt.Client.LabNetResetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void LabNetResetRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LabNetProt.Client.LabNetResetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LabNetResetRequest::CopyFrom(const LabNetResetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LabNetProt.Client.LabNetResetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LabNetResetRequest::IsInitialized() const {
  return true;
}

void LabNetResetRequest::Swap(LabNetResetRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LabNetResetRequest::InternalSwap(LabNetResetRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LabNetResetRequest::GetMetadata() const {
  protobuf_LabNetClient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LabNetClient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LabNetIdRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LabNetIdRequest::LabNetIdRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_LabNetClient_2eproto::scc_info_LabNetIdRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:LabNetProt.Client.LabNetIdRequest)
}
LabNetIdRequest::LabNetIdRequest(const LabNetIdRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:LabNetProt.Client.LabNetIdRequest)
}

void LabNetIdRequest::SharedCtor() {
}

LabNetIdRequest::~LabNetIdRequest() {
  // @@protoc_insertion_point(destructor:LabNetProt.Client.LabNetIdRequest)
  SharedDtor();
}

void LabNetIdRequest::SharedDtor() {
}

void LabNetIdRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LabNetIdRequest::descriptor() {
  ::protobuf_LabNetClient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LabNetClient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LabNetIdRequest& LabNetIdRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_LabNetClient_2eproto::scc_info_LabNetIdRequest.base);
  return *internal_default_instance();
}


void LabNetIdRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:LabNetProt.Client.LabNetIdRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool LabNetIdRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LabNetProt.Client.LabNetIdRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:LabNetProt.Client.LabNetIdRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LabNetProt.Client.LabNetIdRequest)
  return false;
#undef DO_
}

void LabNetIdRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LabNetProt.Client.LabNetIdRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:LabNetProt.Client.LabNetIdRequest)
}

::google::protobuf::uint8* LabNetIdRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:LabNetProt.Client.LabNetIdRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LabNetProt.Client.LabNetIdRequest)
  return target;
}

size_t LabNetIdRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LabNetProt.Client.LabNetIdRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LabNetIdRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:LabNetProt.Client.LabNetIdRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const LabNetIdRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LabNetIdRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:LabNetProt.Client.LabNetIdRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:LabNetProt.Client.LabNetIdRequest)
    MergeFrom(*source);
  }
}

void LabNetIdRequest::MergeFrom(const LabNetIdRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LabNetProt.Client.LabNetIdRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void LabNetIdRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:LabNetProt.Client.LabNetIdRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LabNetIdRequest::CopyFrom(const LabNetIdRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LabNetProt.Client.LabNetIdRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LabNetIdRequest::IsInitialized() const {
  return true;
}

void LabNetIdRequest::Swap(LabNetIdRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LabNetIdRequest::InternalSwap(LabNetIdRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LabNetIdRequest::GetMetadata() const {
  protobuf_LabNetClient_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_LabNetClient_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Client
}  // namespace LabNetProt
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::LabNetProt::Client::IoBoardInit* Arena::CreateMaybeMessage< ::LabNetProt::Client::IoBoardInit >(Arena* arena) {
  return Arena::CreateInternal< ::LabNetProt::Client::IoBoardInit >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::LabNetProt::Client::IoBoardInitDigitalIn* Arena::CreateMaybeMessage< ::LabNetProt::Client::IoBoardInitDigitalIn >(Arena* arena) {
  return Arena::CreateInternal< ::LabNetProt::Client::IoBoardInitDigitalIn >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::LabNetProt::Client::IoBoardInitDigitalOut* Arena::CreateMaybeMessage< ::LabNetProt::Client::IoBoardInitDigitalOut >(Arena* arena) {
  return Arena::CreateInternal< ::LabNetProt::Client::IoBoardInitDigitalOut >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::LabNetProt::Client::RfidBoardInit* Arena::CreateMaybeMessage< ::LabNetProt::Client::RfidBoardInit >(Arena* arena) {
  return Arena::CreateInternal< ::LabNetProt::Client::RfidBoardInit >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::LabNetProt::Client::RfidBoardSetPhaseMatrix* Arena::CreateMaybeMessage< ::LabNetProt::Client::RfidBoardSetPhaseMatrix >(Arena* arena) {
  return Arena::CreateInternal< ::LabNetProt::Client::RfidBoardSetPhaseMatrix >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::LabNetProt::Client::UartInit* Arena::CreateMaybeMessage< ::LabNetProt::Client::UartInit >(Arena* arena) {
  return Arena::CreateInternal< ::LabNetProt::Client::UartInit >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::LabNetProt::Client::UartWriteData* Arena::CreateMaybeMessage< ::LabNetProt::Client::UartWriteData >(Arena* arena) {
  return Arena::CreateInternal< ::LabNetProt::Client::UartWriteData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::LabNetProt::Client::GpioWiringPiInit* Arena::CreateMaybeMessage< ::LabNetProt::Client::GpioWiringPiInit >(Arena* arena) {
  return Arena::CreateInternal< ::LabNetProt::Client::GpioWiringPiInit >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::LabNetProt::Client::GpioWiringPiInitDigitalIn* Arena::CreateMaybeMessage< ::LabNetProt::Client::GpioWiringPiInitDigitalIn >(Arena* arena) {
  return Arena::CreateInternal< ::LabNetProt::Client::GpioWiringPiInitDigitalIn >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::LabNetProt::Client::GpioWiringPiInitDigitalOut* Arena::CreateMaybeMessage< ::LabNetProt::Client::GpioWiringPiInitDigitalOut >(Arena* arena) {
  return Arena::CreateInternal< ::LabNetProt::Client::GpioWiringPiInitDigitalOut >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::LabNetProt::Client::DigitalOutSet* Arena::CreateMaybeMessage< ::LabNetProt::Client::DigitalOutSet >(Arena* arena) {
  return Arena::CreateInternal< ::LabNetProt::Client::DigitalOutSet >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::LabNetProt::Client::DigitalOutPulse* Arena::CreateMaybeMessage< ::LabNetProt::Client::DigitalOutPulse >(Arena* arena) {
  return Arena::CreateInternal< ::LabNetProt::Client::DigitalOutPulse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::LabNetProt::Client::StartDigitalOutLoop_DigitalOutputParameter* Arena::CreateMaybeMessage< ::LabNetProt::Client::StartDigitalOutLoop_DigitalOutputParameter >(Arena* arena) {
  return Arena::CreateInternal< ::LabNetProt::Client::StartDigitalOutLoop_DigitalOutputParameter >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::LabNetProt::Client::StartDigitalOutLoop* Arena::CreateMaybeMessage< ::LabNetProt::Client::StartDigitalOutLoop >(Arena* arena) {
  return Arena::CreateInternal< ::LabNetProt::Client::StartDigitalOutLoop >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::LabNetProt::Client::StopDigitalOutLoop* Arena::CreateMaybeMessage< ::LabNetProt::Client::StopDigitalOutLoop >(Arena* arena) {
  return Arena::CreateInternal< ::LabNetProt::Client::StopDigitalOutLoop >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::LabNetProt::Client::LabNetResetRequest* Arena::CreateMaybeMessage< ::LabNetProt::Client::LabNetResetRequest >(Arena* arena) {
  return Arena::CreateInternal< ::LabNetProt::Client::LabNetResetRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::LabNetProt::Client::LabNetIdRequest* Arena::CreateMaybeMessage< ::LabNetProt::Client::LabNetIdRequest >(Arena* arena) {
  return Arena::CreateInternal< ::LabNetProt::Client::LabNetIdRequest >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
