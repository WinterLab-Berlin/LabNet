syntax = "proto3";
package LabNetProt.Client;
import "LabNet.proto";

enum ClientMessageType {
	NONE = 0;
	LABNET_ID_REQUEST = 1;
	LABNET_RESET_REQUEST = 2;
	IO_BOARD_INIT = 3;
	IO_BOARD_INIT_DIGITAL_IN = 4;
	IO_BOARD_INIT_DIGITAL_OUT = 5;
	RFID_BOARD_INIT = 6;
	RFID_BOARD_SET_PHASE_MATRIX = 7;
	UART_INIT = 8;
	UART_WRITE_DATA = 9;
	DIGITAL_OUT_SET = 10;
	DIGITAL_OUT_PULSE = 11;
	START_DIGITAL_OUT_LOOP = 12;
	STOP_DIGITAL_OUT_LOOP = 13;
	GPIO_WIRINGPI_INIT = 14;
	GPIO_WIRINGPI_INIT_DIGITAL_IN = 15;
	GPIO_WIRINGPI_INIT_DIGITAL_OUT = 16;
	INIT_SOUND = 17;
	INIT_SOUND_SIGNAL = 18;
	UART_INIT_DIGITAL_IN = 19;
	UART_INIT_DIGITAL_OUT = 20;
	CHI_BIO_INIT = 21;
	MOVE_CHI_BIO_PUMP = 22;
    BLE_UART_INIT = 23;
}

// IO board messages
message IoBoardInit {
}

message IoBoardInitDigitalIn {
	enum Resistor {
		OFF = 0;
		PULL_DOWN = 1;
		PULL_UP = 2;
	}
	uint32 pin = 1;
	Resistor resistor_state = 2;
	bool is_inverted = 3;
}

message IoBoardInitDigitalOut {
	uint32 pin = 1;
	bool is_inverted = 2;
}
// IO board messages


// RFID board messages
message RfidBoardInit {
	uint32 antenna_phase1 = 1;
	uint32 antenna_phase2 = 2;
	uint32 phase_duration = 3;
	bool inverted = 4;
}

message RfidBoardSetPhaseMatrix {
	uint32 antenna_phase1 = 1;
	uint32 antenna_phase2 = 2;
	uint32 phase_duration = 3;
}
// RFID board messages


// UART messages
message UartInit {
	Uarts port = 1;
	uint32 baud = 2;
}

message UartWriteData {
	Uarts port = 1;
	bytes data = 2;
}

message UartInitDigitalIn {
	Uarts port = 1;
	uint32 pin = 2;
	bool is_inverted = 3;
}

message UartInitDigitalOut {
	Uarts port = 1;
	uint32 pin = 2;
	bool is_inverted = 3;
}
// UART messages


// Gpio with WiringPi
message GpioWiringPiInit {
}

message GpioWiringPiInitDigitalIn {
	enum Resistor {
		OFF = 0;
		PULL_DOWN = 1;
		PULL_UP = 2;
	}
	uint32 pin = 1;
	Resistor resistor_state = 2;
	bool is_inverted = 3;
}

message GpioWiringPiInitDigitalOut {
	uint32 pin = 1;
	bool is_inverted = 2;
}
// Gpio with WiringPi

// digital out messages
message DigitalOutSet {
	PinId id = 1;
	bool state = 2;
}

message DigitalOutPulse {
	PinId id = 1;
	uint32 high_duration = 2;
	uint32 low_duration = 3;
	uint32 pulses = 4;
}
// digital out messages


// digital out loop
message StartDigitalOutLoop {
	message DigitalOutputParameter {
		PinId id = 1;
		uint32 offset = 2;
		uint32 duration = 3;
	}
	string loop_name = 1;
	uint32 loop_pause = 2;
	repeated DigitalOutputParameter digital_outputs = 3;
}

message StopDigitalOutLoop {
	string loop_name = 1;
}
// digital out loop


// general messages
message LabNetResetRequest {
}

message LabNetIdRequest {
}
// general messages


// sound
message InitSound {
}

enum SoundSignalType {
	SINE_WAVE = 0;
	SQUARE_WAVE = 1;
	TRIANGLE_WAVE = 2;
	SAW_TOOTH_WAVE = 3;
	WHITE_NOISE = 4;
	PINK_NOISE = 5;
	SWEEP = 6;
}

message InitSoundSignal {
	SoundSignalType signal_type = 1;
	uint32 id = 2;
	uint32 frequency = 3;
	uint32 frequency_end = 4;
	float sweep_length_seconds = 5;
	float volume = 6;
}
// sound

// ChiBio
message ChiBioInit {

}

message MoveChiBioPump {
	uint32 pump_id = 1;
	int32 move = 2;
}
// ChiBio

// BLE uart 
message BleUartInit {
    string device = 1;
}
// BLE uart 