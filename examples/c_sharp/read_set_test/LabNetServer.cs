// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: LabNetServer.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace LabNetProt.Server {

  /// <summary>Holder for reflection information generated from LabNetServer.proto</summary>
  public static partial class LabNetServerReflection {

    #region Descriptor
    /// <summary>File descriptor for LabNetServer.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LabNetServerReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChJMYWJOZXRTZXJ2ZXIucHJvdG8SEUxhYk5ldFByb3QuU2VydmVyGgxMYWJO",
            "ZXQucHJvdG8aH2dvb2dsZS9wcm90b2J1Zi90aW1lc3RhbXAucHJvdG8iagoP",
            "RGlnaXRhbE91dFN0YXRlEh4KA3BpbhgBIAEoCzIRLkxhYk5ldFByb3QuUGlu",
            "SWQSDQoFc3RhdGUYAiABKAgSKAoEdGltZRgDIAEoCzIaLmdvb2dsZS5wcm90",
            "b2J1Zi5UaW1lc3RhbXAiaQoORGlnaXRhbEluU3RhdGUSHgoDcGluGAEgASgL",
            "MhEuTGFiTmV0UHJvdC5QaW5JZBINCgVzdGF0ZRgCIAEoCBIoCgR0aW1lGAMg",
            "ASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcCJlCgtOZXdCeXRlRGF0",
            "YRIeCgNwaW4YASABKAsyES5MYWJOZXRQcm90LlBpbklkEgwKBGRhdGEYAiAB",
            "KAwSKAoEdGltZRgDIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAi",
            "MwoRRGF0YVdyaXRlQ29tcGxldGUSHgoDcGluGAEgASgLMhEuTGFiTmV0UHJv",
            "dC5QaW5JZCJUChNJbnRlcmZhY2VJbml0UmVzdWx0EikKCWludGVyZmFjZRgB",
            "IAEoDjIWLkxhYk5ldFByb3QuSW50ZXJmYWNlcxISCgppc19zdWNjZWVkGAIg",
            "ASgIIjoKDUludGVyZmFjZUxvc3QSKQoJaW50ZXJmYWNlGAEgASgOMhYuTGFi",
            "TmV0UHJvdC5JbnRlcmZhY2VzIkEKFEludGVyZmFjZVJlY29ubmVjdGVkEikK",
            "CWludGVyZmFjZRgBIAEoDjIWLkxhYk5ldFByb3QuSW50ZXJmYWNlcyJhChNE",
            "aWdpdGFsSW5Jbml0UmVzdWx0EikKCWludGVyZmFjZRgBIAEoDjIWLkxhYk5l",
            "dFByb3QuSW50ZXJmYWNlcxILCgNwaW4YAiABKA0SEgoKaXNfc3VjY2VlZBgD",
            "IAEoCCJiChREaWdpdGFsT3V0SW5pdFJlc3VsdBIpCglpbnRlcmZhY2UYASAB",
            "KA4yFi5MYWJOZXRQcm90LkludGVyZmFjZXMSCwoDcGluGAIgASgNEhIKCmlz",
            "X3N1Y2NlZWQYAyABKAgiGgoYT25seU9uZUNvbm5lY3Rpb25BbGxvd2VkIiQK",
            "EExhYk5ldFJlc2V0UmVwbHkSEAoIaXNfcmVzZXQYASABKAgiSQoNTGFiTmV0",
            "SWRSZXBseRIKCgJpZBgBIAEoCRIVCg1tYWpvcl92ZXJzaW9uGAIgASgNEhUK",
            "DW1pbm9yX3ZlcnNpb24YAyABKA0iQgoZRGlnaXRhbE91dExvb3BTdGFydFJl",
            "c3VsdBIRCglsb29wX25hbWUYASABKAkSEgoKaXNfc3VjY2VlZBgCIAEoCCIq",
            "ChVEaWdpdGFsT3V0TG9vcFN0b3BwZWQSEQoJbG9vcF9uYW1lGAEgASgJKogD",
            "ChFTZXJ2ZXJNZXNzYWdlVHlwZRIICgROT05FEAASEwoPTEFCTkVUX0lEX1JF",
            "UExZEAESFgoSTEFCTkVUX1JFU0VUX1JFUExZEAISFQoRRElHSVRBTF9PVVRf",
            "U1RBVEUQAxIUChBESUdJVEFMX0lOX1NUQVRFEAQSEQoNTkVXX0JZVEVfREFU",
            "QRAFEhcKE0RBVEFfV1JJVEVfQ09NUExFVEUQBhIZChVJTlRFUkZBQ0VfSU5J",
            "VF9SRVNVTFQQBxIaChZESUdJVEFMX0lOX0lOSVRfUkVTVUxUEAgSGwoXRElH",
            "SVRBTF9PVVRfSU5JVF9SRVNVTFQQCRIfChtPTkxZX09ORV9DT05ORUNUSU9O",
            "X0FMTE9XRUQQChISCg5JTlRFUkZBQ0VfTE9TVBALEhkKFUlOVEVSRkFDRV9S",
            "RUNPTk5FQ1RFRBAMEiEKHURJR0lUQUxfT1VUX0xPT1BfU1RBUlRfUkVTVUxU",
            "EA0SHAoYRElHSVRBTF9PVVRfTE9PUF9TVE9QUEVEEA5iBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::LabNetProt.LabNetReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::LabNetProt.Server.ServerMessageType), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::LabNetProt.Server.DigitalOutState), global::LabNetProt.Server.DigitalOutState.Parser, new[]{ "Pin", "State", "Time" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LabNetProt.Server.DigitalInState), global::LabNetProt.Server.DigitalInState.Parser, new[]{ "Pin", "State", "Time" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LabNetProt.Server.NewByteData), global::LabNetProt.Server.NewByteData.Parser, new[]{ "Pin", "Data", "Time" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LabNetProt.Server.DataWriteComplete), global::LabNetProt.Server.DataWriteComplete.Parser, new[]{ "Pin" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LabNetProt.Server.InterfaceInitResult), global::LabNetProt.Server.InterfaceInitResult.Parser, new[]{ "Interface", "IsSucceed" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LabNetProt.Server.InterfaceLost), global::LabNetProt.Server.InterfaceLost.Parser, new[]{ "Interface" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LabNetProt.Server.InterfaceReconnected), global::LabNetProt.Server.InterfaceReconnected.Parser, new[]{ "Interface" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LabNetProt.Server.DigitalInInitResult), global::LabNetProt.Server.DigitalInInitResult.Parser, new[]{ "Interface", "Pin", "IsSucceed" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LabNetProt.Server.DigitalOutInitResult), global::LabNetProt.Server.DigitalOutInitResult.Parser, new[]{ "Interface", "Pin", "IsSucceed" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LabNetProt.Server.OnlyOneConnectionAllowed), global::LabNetProt.Server.OnlyOneConnectionAllowed.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LabNetProt.Server.LabNetResetReply), global::LabNetProt.Server.LabNetResetReply.Parser, new[]{ "IsReset" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LabNetProt.Server.LabNetIdReply), global::LabNetProt.Server.LabNetIdReply.Parser, new[]{ "Id", "MajorVersion", "MinorVersion" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LabNetProt.Server.DigitalOutLoopStartResult), global::LabNetProt.Server.DigitalOutLoopStartResult.Parser, new[]{ "LoopName", "IsSucceed" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LabNetProt.Server.DigitalOutLoopStopped), global::LabNetProt.Server.DigitalOutLoopStopped.Parser, new[]{ "LoopName" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum ServerMessageType {
    [pbr::OriginalName("NONE")] None = 0,
    [pbr::OriginalName("LABNET_ID_REPLY")] LabnetIdReply = 1,
    [pbr::OriginalName("LABNET_RESET_REPLY")] LabnetResetReply = 2,
    [pbr::OriginalName("DIGITAL_OUT_STATE")] DigitalOutState = 3,
    [pbr::OriginalName("DIGITAL_IN_STATE")] DigitalInState = 4,
    [pbr::OriginalName("NEW_BYTE_DATA")] NewByteData = 5,
    [pbr::OriginalName("DATA_WRITE_COMPLETE")] DataWriteComplete = 6,
    [pbr::OriginalName("INTERFACE_INIT_RESULT")] InterfaceInitResult = 7,
    [pbr::OriginalName("DIGITAL_IN_INIT_RESULT")] DigitalInInitResult = 8,
    [pbr::OriginalName("DIGITAL_OUT_INIT_RESULT")] DigitalOutInitResult = 9,
    [pbr::OriginalName("ONLY_ONE_CONNECTION_ALLOWED")] OnlyOneConnectionAllowed = 10,
    [pbr::OriginalName("INTERFACE_LOST")] InterfaceLost = 11,
    [pbr::OriginalName("INTERFACE_RECONNECTED")] InterfaceReconnected = 12,
    [pbr::OriginalName("DIGITAL_OUT_LOOP_START_RESULT")] DigitalOutLoopStartResult = 13,
    [pbr::OriginalName("DIGITAL_OUT_LOOP_STOPPED")] DigitalOutLoopStopped = 14,
  }

  #endregion

  #region Messages
  public sealed partial class DigitalOutState : pb::IMessage<DigitalOutState> {
    private static readonly pb::MessageParser<DigitalOutState> _parser = new pb::MessageParser<DigitalOutState>(() => new DigitalOutState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DigitalOutState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LabNetProt.Server.LabNetServerReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DigitalOutState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DigitalOutState(DigitalOutState other) : this() {
      pin_ = other.pin_ != null ? other.pin_.Clone() : null;
      state_ = other.state_;
      time_ = other.time_ != null ? other.time_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DigitalOutState Clone() {
      return new DigitalOutState(this);
    }

    /// <summary>Field number for the "pin" field.</summary>
    public const int PinFieldNumber = 1;
    private global::LabNetProt.PinId pin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LabNetProt.PinId Pin {
      get { return pin_; }
      set {
        pin_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 2;
    private bool state_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp time_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Time {
      get { return time_; }
      set {
        time_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DigitalOutState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DigitalOutState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Pin, other.Pin)) return false;
      if (State != other.State) return false;
      if (!object.Equals(Time, other.Time)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (pin_ != null) hash ^= Pin.GetHashCode();
      if (State != false) hash ^= State.GetHashCode();
      if (time_ != null) hash ^= Time.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (pin_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Pin);
      }
      if (State != false) {
        output.WriteRawTag(16);
        output.WriteBool(State);
      }
      if (time_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Time);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (pin_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pin);
      }
      if (State != false) {
        size += 1 + 1;
      }
      if (time_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Time);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DigitalOutState other) {
      if (other == null) {
        return;
      }
      if (other.pin_ != null) {
        if (pin_ == null) {
          pin_ = new global::LabNetProt.PinId();
        }
        Pin.MergeFrom(other.Pin);
      }
      if (other.State != false) {
        State = other.State;
      }
      if (other.time_ != null) {
        if (time_ == null) {
          time_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Time.MergeFrom(other.Time);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (pin_ == null) {
              pin_ = new global::LabNetProt.PinId();
            }
            input.ReadMessage(pin_);
            break;
          }
          case 16: {
            State = input.ReadBool();
            break;
          }
          case 26: {
            if (time_ == null) {
              time_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(time_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DigitalInState : pb::IMessage<DigitalInState> {
    private static readonly pb::MessageParser<DigitalInState> _parser = new pb::MessageParser<DigitalInState>(() => new DigitalInState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DigitalInState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LabNetProt.Server.LabNetServerReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DigitalInState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DigitalInState(DigitalInState other) : this() {
      pin_ = other.pin_ != null ? other.pin_.Clone() : null;
      state_ = other.state_;
      time_ = other.time_ != null ? other.time_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DigitalInState Clone() {
      return new DigitalInState(this);
    }

    /// <summary>Field number for the "pin" field.</summary>
    public const int PinFieldNumber = 1;
    private global::LabNetProt.PinId pin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LabNetProt.PinId Pin {
      get { return pin_; }
      set {
        pin_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 2;
    private bool state_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp time_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Time {
      get { return time_; }
      set {
        time_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DigitalInState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DigitalInState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Pin, other.Pin)) return false;
      if (State != other.State) return false;
      if (!object.Equals(Time, other.Time)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (pin_ != null) hash ^= Pin.GetHashCode();
      if (State != false) hash ^= State.GetHashCode();
      if (time_ != null) hash ^= Time.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (pin_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Pin);
      }
      if (State != false) {
        output.WriteRawTag(16);
        output.WriteBool(State);
      }
      if (time_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Time);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (pin_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pin);
      }
      if (State != false) {
        size += 1 + 1;
      }
      if (time_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Time);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DigitalInState other) {
      if (other == null) {
        return;
      }
      if (other.pin_ != null) {
        if (pin_ == null) {
          pin_ = new global::LabNetProt.PinId();
        }
        Pin.MergeFrom(other.Pin);
      }
      if (other.State != false) {
        State = other.State;
      }
      if (other.time_ != null) {
        if (time_ == null) {
          time_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Time.MergeFrom(other.Time);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (pin_ == null) {
              pin_ = new global::LabNetProt.PinId();
            }
            input.ReadMessage(pin_);
            break;
          }
          case 16: {
            State = input.ReadBool();
            break;
          }
          case 26: {
            if (time_ == null) {
              time_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(time_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class NewByteData : pb::IMessage<NewByteData> {
    private static readonly pb::MessageParser<NewByteData> _parser = new pb::MessageParser<NewByteData>(() => new NewByteData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NewByteData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LabNetProt.Server.LabNetServerReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewByteData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewByteData(NewByteData other) : this() {
      pin_ = other.pin_ != null ? other.pin_.Clone() : null;
      data_ = other.data_;
      time_ = other.time_ != null ? other.time_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewByteData Clone() {
      return new NewByteData(this);
    }

    /// <summary>Field number for the "pin" field.</summary>
    public const int PinFieldNumber = 1;
    private global::LabNetProt.PinId pin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LabNetProt.PinId Pin {
      get { return pin_; }
      set {
        pin_ = value;
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 2;
    private pb::ByteString data_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp time_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Time {
      get { return time_; }
      set {
        time_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NewByteData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NewByteData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Pin, other.Pin)) return false;
      if (Data != other.Data) return false;
      if (!object.Equals(Time, other.Time)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (pin_ != null) hash ^= Pin.GetHashCode();
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (time_ != null) hash ^= Time.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (pin_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Pin);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Data);
      }
      if (time_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Time);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (pin_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pin);
      }
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
      }
      if (time_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Time);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NewByteData other) {
      if (other == null) {
        return;
      }
      if (other.pin_ != null) {
        if (pin_ == null) {
          pin_ = new global::LabNetProt.PinId();
        }
        Pin.MergeFrom(other.Pin);
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      if (other.time_ != null) {
        if (time_ == null) {
          time_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Time.MergeFrom(other.Time);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (pin_ == null) {
              pin_ = new global::LabNetProt.PinId();
            }
            input.ReadMessage(pin_);
            break;
          }
          case 18: {
            Data = input.ReadBytes();
            break;
          }
          case 26: {
            if (time_ == null) {
              time_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(time_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DataWriteComplete : pb::IMessage<DataWriteComplete> {
    private static readonly pb::MessageParser<DataWriteComplete> _parser = new pb::MessageParser<DataWriteComplete>(() => new DataWriteComplete());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DataWriteComplete> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LabNetProt.Server.LabNetServerReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataWriteComplete() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataWriteComplete(DataWriteComplete other) : this() {
      pin_ = other.pin_ != null ? other.pin_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataWriteComplete Clone() {
      return new DataWriteComplete(this);
    }

    /// <summary>Field number for the "pin" field.</summary>
    public const int PinFieldNumber = 1;
    private global::LabNetProt.PinId pin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LabNetProt.PinId Pin {
      get { return pin_; }
      set {
        pin_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DataWriteComplete);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DataWriteComplete other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Pin, other.Pin)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (pin_ != null) hash ^= Pin.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (pin_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Pin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (pin_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pin);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DataWriteComplete other) {
      if (other == null) {
        return;
      }
      if (other.pin_ != null) {
        if (pin_ == null) {
          pin_ = new global::LabNetProt.PinId();
        }
        Pin.MergeFrom(other.Pin);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (pin_ == null) {
              pin_ = new global::LabNetProt.PinId();
            }
            input.ReadMessage(pin_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class InterfaceInitResult : pb::IMessage<InterfaceInitResult> {
    private static readonly pb::MessageParser<InterfaceInitResult> _parser = new pb::MessageParser<InterfaceInitResult>(() => new InterfaceInitResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InterfaceInitResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LabNetProt.Server.LabNetServerReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InterfaceInitResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InterfaceInitResult(InterfaceInitResult other) : this() {
      interface_ = other.interface_;
      isSucceed_ = other.isSucceed_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InterfaceInitResult Clone() {
      return new InterfaceInitResult(this);
    }

    /// <summary>Field number for the "interface" field.</summary>
    public const int InterfaceFieldNumber = 1;
    private global::LabNetProt.Interfaces interface_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LabNetProt.Interfaces Interface {
      get { return interface_; }
      set {
        interface_ = value;
      }
    }

    /// <summary>Field number for the "is_succeed" field.</summary>
    public const int IsSucceedFieldNumber = 2;
    private bool isSucceed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsSucceed {
      get { return isSucceed_; }
      set {
        isSucceed_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InterfaceInitResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InterfaceInitResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Interface != other.Interface) return false;
      if (IsSucceed != other.IsSucceed) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Interface != 0) hash ^= Interface.GetHashCode();
      if (IsSucceed != false) hash ^= IsSucceed.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Interface != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Interface);
      }
      if (IsSucceed != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsSucceed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Interface != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Interface);
      }
      if (IsSucceed != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InterfaceInitResult other) {
      if (other == null) {
        return;
      }
      if (other.Interface != 0) {
        Interface = other.Interface;
      }
      if (other.IsSucceed != false) {
        IsSucceed = other.IsSucceed;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            interface_ = (global::LabNetProt.Interfaces) input.ReadEnum();
            break;
          }
          case 16: {
            IsSucceed = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class InterfaceLost : pb::IMessage<InterfaceLost> {
    private static readonly pb::MessageParser<InterfaceLost> _parser = new pb::MessageParser<InterfaceLost>(() => new InterfaceLost());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InterfaceLost> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LabNetProt.Server.LabNetServerReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InterfaceLost() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InterfaceLost(InterfaceLost other) : this() {
      interface_ = other.interface_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InterfaceLost Clone() {
      return new InterfaceLost(this);
    }

    /// <summary>Field number for the "interface" field.</summary>
    public const int InterfaceFieldNumber = 1;
    private global::LabNetProt.Interfaces interface_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LabNetProt.Interfaces Interface {
      get { return interface_; }
      set {
        interface_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InterfaceLost);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InterfaceLost other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Interface != other.Interface) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Interface != 0) hash ^= Interface.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Interface != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Interface);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Interface != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Interface);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InterfaceLost other) {
      if (other == null) {
        return;
      }
      if (other.Interface != 0) {
        Interface = other.Interface;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            interface_ = (global::LabNetProt.Interfaces) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class InterfaceReconnected : pb::IMessage<InterfaceReconnected> {
    private static readonly pb::MessageParser<InterfaceReconnected> _parser = new pb::MessageParser<InterfaceReconnected>(() => new InterfaceReconnected());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InterfaceReconnected> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LabNetProt.Server.LabNetServerReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InterfaceReconnected() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InterfaceReconnected(InterfaceReconnected other) : this() {
      interface_ = other.interface_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InterfaceReconnected Clone() {
      return new InterfaceReconnected(this);
    }

    /// <summary>Field number for the "interface" field.</summary>
    public const int InterfaceFieldNumber = 1;
    private global::LabNetProt.Interfaces interface_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LabNetProt.Interfaces Interface {
      get { return interface_; }
      set {
        interface_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InterfaceReconnected);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InterfaceReconnected other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Interface != other.Interface) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Interface != 0) hash ^= Interface.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Interface != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Interface);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Interface != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Interface);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InterfaceReconnected other) {
      if (other == null) {
        return;
      }
      if (other.Interface != 0) {
        Interface = other.Interface;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            interface_ = (global::LabNetProt.Interfaces) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DigitalInInitResult : pb::IMessage<DigitalInInitResult> {
    private static readonly pb::MessageParser<DigitalInInitResult> _parser = new pb::MessageParser<DigitalInInitResult>(() => new DigitalInInitResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DigitalInInitResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LabNetProt.Server.LabNetServerReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DigitalInInitResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DigitalInInitResult(DigitalInInitResult other) : this() {
      interface_ = other.interface_;
      pin_ = other.pin_;
      isSucceed_ = other.isSucceed_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DigitalInInitResult Clone() {
      return new DigitalInInitResult(this);
    }

    /// <summary>Field number for the "interface" field.</summary>
    public const int InterfaceFieldNumber = 1;
    private global::LabNetProt.Interfaces interface_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LabNetProt.Interfaces Interface {
      get { return interface_; }
      set {
        interface_ = value;
      }
    }

    /// <summary>Field number for the "pin" field.</summary>
    public const int PinFieldNumber = 2;
    private uint pin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Pin {
      get { return pin_; }
      set {
        pin_ = value;
      }
    }

    /// <summary>Field number for the "is_succeed" field.</summary>
    public const int IsSucceedFieldNumber = 3;
    private bool isSucceed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsSucceed {
      get { return isSucceed_; }
      set {
        isSucceed_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DigitalInInitResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DigitalInInitResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Interface != other.Interface) return false;
      if (Pin != other.Pin) return false;
      if (IsSucceed != other.IsSucceed) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Interface != 0) hash ^= Interface.GetHashCode();
      if (Pin != 0) hash ^= Pin.GetHashCode();
      if (IsSucceed != false) hash ^= IsSucceed.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Interface != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Interface);
      }
      if (Pin != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Pin);
      }
      if (IsSucceed != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsSucceed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Interface != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Interface);
      }
      if (Pin != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Pin);
      }
      if (IsSucceed != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DigitalInInitResult other) {
      if (other == null) {
        return;
      }
      if (other.Interface != 0) {
        Interface = other.Interface;
      }
      if (other.Pin != 0) {
        Pin = other.Pin;
      }
      if (other.IsSucceed != false) {
        IsSucceed = other.IsSucceed;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            interface_ = (global::LabNetProt.Interfaces) input.ReadEnum();
            break;
          }
          case 16: {
            Pin = input.ReadUInt32();
            break;
          }
          case 24: {
            IsSucceed = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DigitalOutInitResult : pb::IMessage<DigitalOutInitResult> {
    private static readonly pb::MessageParser<DigitalOutInitResult> _parser = new pb::MessageParser<DigitalOutInitResult>(() => new DigitalOutInitResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DigitalOutInitResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LabNetProt.Server.LabNetServerReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DigitalOutInitResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DigitalOutInitResult(DigitalOutInitResult other) : this() {
      interface_ = other.interface_;
      pin_ = other.pin_;
      isSucceed_ = other.isSucceed_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DigitalOutInitResult Clone() {
      return new DigitalOutInitResult(this);
    }

    /// <summary>Field number for the "interface" field.</summary>
    public const int InterfaceFieldNumber = 1;
    private global::LabNetProt.Interfaces interface_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LabNetProt.Interfaces Interface {
      get { return interface_; }
      set {
        interface_ = value;
      }
    }

    /// <summary>Field number for the "pin" field.</summary>
    public const int PinFieldNumber = 2;
    private uint pin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Pin {
      get { return pin_; }
      set {
        pin_ = value;
      }
    }

    /// <summary>Field number for the "is_succeed" field.</summary>
    public const int IsSucceedFieldNumber = 3;
    private bool isSucceed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsSucceed {
      get { return isSucceed_; }
      set {
        isSucceed_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DigitalOutInitResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DigitalOutInitResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Interface != other.Interface) return false;
      if (Pin != other.Pin) return false;
      if (IsSucceed != other.IsSucceed) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Interface != 0) hash ^= Interface.GetHashCode();
      if (Pin != 0) hash ^= Pin.GetHashCode();
      if (IsSucceed != false) hash ^= IsSucceed.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Interface != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Interface);
      }
      if (Pin != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Pin);
      }
      if (IsSucceed != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsSucceed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Interface != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Interface);
      }
      if (Pin != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Pin);
      }
      if (IsSucceed != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DigitalOutInitResult other) {
      if (other == null) {
        return;
      }
      if (other.Interface != 0) {
        Interface = other.Interface;
      }
      if (other.Pin != 0) {
        Pin = other.Pin;
      }
      if (other.IsSucceed != false) {
        IsSucceed = other.IsSucceed;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            interface_ = (global::LabNetProt.Interfaces) input.ReadEnum();
            break;
          }
          case 16: {
            Pin = input.ReadUInt32();
            break;
          }
          case 24: {
            IsSucceed = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class OnlyOneConnectionAllowed : pb::IMessage<OnlyOneConnectionAllowed> {
    private static readonly pb::MessageParser<OnlyOneConnectionAllowed> _parser = new pb::MessageParser<OnlyOneConnectionAllowed>(() => new OnlyOneConnectionAllowed());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OnlyOneConnectionAllowed> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LabNetProt.Server.LabNetServerReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnlyOneConnectionAllowed() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnlyOneConnectionAllowed(OnlyOneConnectionAllowed other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnlyOneConnectionAllowed Clone() {
      return new OnlyOneConnectionAllowed(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OnlyOneConnectionAllowed);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OnlyOneConnectionAllowed other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OnlyOneConnectionAllowed other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class LabNetResetReply : pb::IMessage<LabNetResetReply> {
    private static readonly pb::MessageParser<LabNetResetReply> _parser = new pb::MessageParser<LabNetResetReply>(() => new LabNetResetReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LabNetResetReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LabNetProt.Server.LabNetServerReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LabNetResetReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LabNetResetReply(LabNetResetReply other) : this() {
      isReset_ = other.isReset_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LabNetResetReply Clone() {
      return new LabNetResetReply(this);
    }

    /// <summary>Field number for the "is_reset" field.</summary>
    public const int IsResetFieldNumber = 1;
    private bool isReset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsReset {
      get { return isReset_; }
      set {
        isReset_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LabNetResetReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LabNetResetReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsReset != other.IsReset) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IsReset != false) hash ^= IsReset.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IsReset != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsReset);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsReset != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LabNetResetReply other) {
      if (other == null) {
        return;
      }
      if (other.IsReset != false) {
        IsReset = other.IsReset;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsReset = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LabNetIdReply : pb::IMessage<LabNetIdReply> {
    private static readonly pb::MessageParser<LabNetIdReply> _parser = new pb::MessageParser<LabNetIdReply>(() => new LabNetIdReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LabNetIdReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LabNetProt.Server.LabNetServerReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LabNetIdReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LabNetIdReply(LabNetIdReply other) : this() {
      id_ = other.id_;
      majorVersion_ = other.majorVersion_;
      minorVersion_ = other.minorVersion_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LabNetIdReply Clone() {
      return new LabNetIdReply(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "major_version" field.</summary>
    public const int MajorVersionFieldNumber = 2;
    private uint majorVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint MajorVersion {
      get { return majorVersion_; }
      set {
        majorVersion_ = value;
      }
    }

    /// <summary>Field number for the "minor_version" field.</summary>
    public const int MinorVersionFieldNumber = 3;
    private uint minorVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint MinorVersion {
      get { return minorVersion_; }
      set {
        minorVersion_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LabNetIdReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LabNetIdReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (MajorVersion != other.MajorVersion) return false;
      if (MinorVersion != other.MinorVersion) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (MajorVersion != 0) hash ^= MajorVersion.GetHashCode();
      if (MinorVersion != 0) hash ^= MinorVersion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (MajorVersion != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(MajorVersion);
      }
      if (MinorVersion != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(MinorVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (MajorVersion != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MajorVersion);
      }
      if (MinorVersion != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MinorVersion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LabNetIdReply other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.MajorVersion != 0) {
        MajorVersion = other.MajorVersion;
      }
      if (other.MinorVersion != 0) {
        MinorVersion = other.MinorVersion;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 16: {
            MajorVersion = input.ReadUInt32();
            break;
          }
          case 24: {
            MinorVersion = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// digital out loop
  /// </summary>
  public sealed partial class DigitalOutLoopStartResult : pb::IMessage<DigitalOutLoopStartResult> {
    private static readonly pb::MessageParser<DigitalOutLoopStartResult> _parser = new pb::MessageParser<DigitalOutLoopStartResult>(() => new DigitalOutLoopStartResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DigitalOutLoopStartResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LabNetProt.Server.LabNetServerReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DigitalOutLoopStartResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DigitalOutLoopStartResult(DigitalOutLoopStartResult other) : this() {
      loopName_ = other.loopName_;
      isSucceed_ = other.isSucceed_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DigitalOutLoopStartResult Clone() {
      return new DigitalOutLoopStartResult(this);
    }

    /// <summary>Field number for the "loop_name" field.</summary>
    public const int LoopNameFieldNumber = 1;
    private string loopName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LoopName {
      get { return loopName_; }
      set {
        loopName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "is_succeed" field.</summary>
    public const int IsSucceedFieldNumber = 2;
    private bool isSucceed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsSucceed {
      get { return isSucceed_; }
      set {
        isSucceed_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DigitalOutLoopStartResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DigitalOutLoopStartResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LoopName != other.LoopName) return false;
      if (IsSucceed != other.IsSucceed) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LoopName.Length != 0) hash ^= LoopName.GetHashCode();
      if (IsSucceed != false) hash ^= IsSucceed.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (LoopName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LoopName);
      }
      if (IsSucceed != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsSucceed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LoopName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LoopName);
      }
      if (IsSucceed != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DigitalOutLoopStartResult other) {
      if (other == null) {
        return;
      }
      if (other.LoopName.Length != 0) {
        LoopName = other.LoopName;
      }
      if (other.IsSucceed != false) {
        IsSucceed = other.IsSucceed;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LoopName = input.ReadString();
            break;
          }
          case 16: {
            IsSucceed = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DigitalOutLoopStopped : pb::IMessage<DigitalOutLoopStopped> {
    private static readonly pb::MessageParser<DigitalOutLoopStopped> _parser = new pb::MessageParser<DigitalOutLoopStopped>(() => new DigitalOutLoopStopped());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DigitalOutLoopStopped> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LabNetProt.Server.LabNetServerReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DigitalOutLoopStopped() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DigitalOutLoopStopped(DigitalOutLoopStopped other) : this() {
      loopName_ = other.loopName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DigitalOutLoopStopped Clone() {
      return new DigitalOutLoopStopped(this);
    }

    /// <summary>Field number for the "loop_name" field.</summary>
    public const int LoopNameFieldNumber = 1;
    private string loopName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LoopName {
      get { return loopName_; }
      set {
        loopName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DigitalOutLoopStopped);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DigitalOutLoopStopped other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LoopName != other.LoopName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LoopName.Length != 0) hash ^= LoopName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (LoopName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LoopName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LoopName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LoopName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DigitalOutLoopStopped other) {
      if (other == null) {
        return;
      }
      if (other.LoopName.Length != 0) {
        LoopName = other.LoopName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LoopName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
