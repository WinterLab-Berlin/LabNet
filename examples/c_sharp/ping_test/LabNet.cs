// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: LabNet.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace LabNetProt {

  /// <summary>Holder for reflection information generated from LabNet.proto</summary>
  public static partial class LabNetReflection {

    #region Descriptor
    /// <summary>File descriptor for LabNet.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LabNetReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgxMYWJOZXQucHJvdG8SCkxhYk5ldFByb3QiPwoFUGluSWQSKQoJaW50ZXJm",
            "YWNlGAEgASgOMhYuTGFiTmV0UHJvdC5JbnRlcmZhY2VzEgsKA3BpbhgCIAEo",
            "DSrtAQoKSW50ZXJmYWNlcxISCg5JTlRFUkZBQ0VfTk9ORRAAEhYKEklOVEVS",
            "RkFDRV9JT19CT0FSRBABEhgKFElOVEVSRkFDRV9SRklEX0JPQVJEEAISGwoX",
            "SU5URVJGQUNFX0dQSU9fV0lSSU5HUEkQAxITCg9JTlRFUkZBQ0VfU09VTkQQ",
            "BBITCg9JTlRFUkZBQ0VfVUFSVDAQZBITCg9JTlRFUkZBQ0VfVUFSVDEQZRIT",
            "Cg9JTlRFUkZBQ0VfVUFSVDIQZhITCg9JTlRFUkZBQ0VfVUFSVDMQZxITCg9J",
            "TlRFUkZBQ0VfVUFSVDQQaCpmCgVVYXJ0cxINCglVQVJUX05PTkUQABIOCgpV",
            "QVJUX1BPUlQwEGQSDgoKVUFSVF9QT1JUMRBlEg4KClVBUlRfUE9SVDIQZhIO",
            "CgpVQVJUX1BPUlQzEGcSDgoKVUFSVF9QT1JUNBBoYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::LabNetProt.Interfaces), typeof(global::LabNetProt.Uarts), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::LabNetProt.PinId), global::LabNetProt.PinId.Parser, new[]{ "Interface", "Pin" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum Interfaces {
    [pbr::OriginalName("INTERFACE_NONE")] InterfaceNone = 0,
    [pbr::OriginalName("INTERFACE_IO_BOARD")] InterfaceIoBoard = 1,
    [pbr::OriginalName("INTERFACE_RFID_BOARD")] InterfaceRfidBoard = 2,
    [pbr::OriginalName("INTERFACE_GPIO_WIRINGPI")] InterfaceGpioWiringpi = 3,
    [pbr::OriginalName("INTERFACE_SOUND")] InterfaceSound = 4,
    [pbr::OriginalName("INTERFACE_UART0")] InterfaceUart0 = 100,
    [pbr::OriginalName("INTERFACE_UART1")] InterfaceUart1 = 101,
    [pbr::OriginalName("INTERFACE_UART2")] InterfaceUart2 = 102,
    [pbr::OriginalName("INTERFACE_UART3")] InterfaceUart3 = 103,
    [pbr::OriginalName("INTERFACE_UART4")] InterfaceUart4 = 104,
  }

  public enum Uarts {
    [pbr::OriginalName("UART_NONE")] UartNone = 0,
    [pbr::OriginalName("UART_PORT0")] UartPort0 = 100,
    [pbr::OriginalName("UART_PORT1")] UartPort1 = 101,
    [pbr::OriginalName("UART_PORT2")] UartPort2 = 102,
    [pbr::OriginalName("UART_PORT3")] UartPort3 = 103,
    [pbr::OriginalName("UART_PORT4")] UartPort4 = 104,
  }

  #endregion

  #region Messages
  public sealed partial class PinId : pb::IMessage<PinId> {
    private static readonly pb::MessageParser<PinId> _parser = new pb::MessageParser<PinId>(() => new PinId());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PinId> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LabNetProt.LabNetReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PinId() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PinId(PinId other) : this() {
      interface_ = other.interface_;
      pin_ = other.pin_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PinId Clone() {
      return new PinId(this);
    }

    /// <summary>Field number for the "interface" field.</summary>
    public const int InterfaceFieldNumber = 1;
    private global::LabNetProt.Interfaces interface_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LabNetProt.Interfaces Interface {
      get { return interface_; }
      set {
        interface_ = value;
      }
    }

    /// <summary>Field number for the "pin" field.</summary>
    public const int PinFieldNumber = 2;
    private uint pin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Pin {
      get { return pin_; }
      set {
        pin_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PinId);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PinId other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Interface != other.Interface) return false;
      if (Pin != other.Pin) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Interface != 0) hash ^= Interface.GetHashCode();
      if (Pin != 0) hash ^= Pin.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Interface != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Interface);
      }
      if (Pin != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Pin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Interface != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Interface);
      }
      if (Pin != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Pin);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PinId other) {
      if (other == null) {
        return;
      }
      if (other.Interface != 0) {
        Interface = other.Interface;
      }
      if (other.Pin != 0) {
        Pin = other.Pin;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            interface_ = (global::LabNetProt.Interfaces) input.ReadEnum();
            break;
          }
          case 16: {
            Pin = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
